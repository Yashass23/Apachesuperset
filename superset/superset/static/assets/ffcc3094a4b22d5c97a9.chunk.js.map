{"version":3,"file":"ffcc3094a4b22d5c97a9.chunk.js","mappings":"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","sources":["webpack://superset/./src/dashboard/components/nativeFilters/FilterBar/keyValue.tsx","webpack://superset/./src/dashboard/util/getChartIdsFromLayout.js","webpack://superset/./src/dashboard/util/isDashboardEmpty.ts","webpack://superset/./src/dashboard/util/charts/getOwnDataCharts.ts","webpack://superset/./src/dashboard/components/Dashboard.jsx","webpack://superset/./src/dashboard/util/getLayoutComponentFromChartId.js","webpack://superset/./src/dashboard/containers/Dashboard.ts","webpack://superset/./src/dashboard/styles.ts","webpack://superset/./src/dashboard/components/SyncDashboardState/index.tsx","webpack://superset/./src/dashboard/containers/DashboardPage.tsx","webpack://superset/./src/dashboard/util/activeAllDashboardFilters.ts","webpack://superset/./src/dashboard/util/injectCustomCss.ts","webpack://superset/./src/hooks/apiResources/charts.ts","webpack://superset/./src/hooks/apiResources/dashboards.ts","webpack://superset/./src/hooks/apiResources/queryValidations.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { SupersetClient, logging } from '@superset-ui/core';\nimport { DashboardPermalinkValue } from 'src/dashboard/types';\n\nconst assembleEndpoint = (\n  dashId: string | number,\n  key?: string | null,\n  tabId?: string,\n) => {\n  let endpoint = `api/v1/dashboard/${dashId}/filter_state`;\n  if (key) {\n    endpoint = endpoint.concat(`/${key}`);\n  }\n  if (tabId) {\n    endpoint = endpoint.concat(`?tab_id=${tabId}`);\n  }\n  return endpoint;\n};\n\nexport const updateFilterKey = (\n  dashId: string,\n  value: string,\n  key: string,\n  tabId?: string,\n) =>\n  SupersetClient.put({\n    endpoint: assembleEndpoint(dashId, key, tabId),\n    jsonPayload: { value },\n  })\n    .then(r => r.json.message)\n    .catch(err => {\n      logging.error(err);\n      return null;\n    });\n\nexport const createFilterKey = (\n  dashId: string | number,\n  value: string,\n  tabId?: string,\n) =>\n  SupersetClient.post({\n    endpoint: assembleEndpoint(dashId, undefined, tabId),\n    jsonPayload: { value },\n  })\n    .then(r => r.json.key as string)\n    .catch(err => {\n      logging.error(err);\n      return null;\n    });\n\nexport const getFilterValue = (dashId: string | number, key?: string | null) =>\n  SupersetClient.get({\n    endpoint: assembleEndpoint(dashId, key),\n  })\n    .then(({ json }) => JSON.parse(json.value))\n    .catch(err => {\n      logging.error(err);\n      return null;\n    });\n\nexport const getPermalinkValue = (key: string) =>\n  SupersetClient.get({\n    endpoint: `/api/v1/dashboard/permalink/${key}`,\n  })\n    .then(({ json }) => json as DashboardPermalinkValue)\n    .catch(err => {\n      logging.error(err);\n      return null;\n    });\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CHART_TYPE } from './componentTypes';\n\nexport default function getChartIdsFromLayout(layout) {\n  return Object.values(layout).reduce((chartIds, currentComponent) => {\n    if (\n      currentComponent &&\n      currentComponent.type === CHART_TYPE &&\n      currentComponent.meta &&\n      currentComponent.meta.chartId\n    ) {\n      chartIds.push(currentComponent.meta.chartId);\n    }\n    return chartIds;\n  }, []);\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CHART_TYPE, MARKDOWN_TYPE, DYNAMIC_TYPE } from './componentTypes';\n\nconst USER_CONTENT_COMPONENT_TYPE: string[] = [\n  CHART_TYPE,\n  MARKDOWN_TYPE,\n  DYNAMIC_TYPE,\n];\nexport default function isDashboardEmpty(layout: any): boolean {\n  // has at least one chart or markdown component\n  return !Object.values(layout).some(\n    ({ type }: { type?: string }) =>\n      type && USER_CONTENT_COMPONENT_TYPE.includes(type),\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\nimport { areObjectsEqual } from '../../../reduxUtils';\n\nexport const arrayDiff = (a: string[], b: string[]) => [\n  ...a.filter(x => !b.includes(x)),\n  ...b.filter(x => !a.includes(x)),\n];\n\nexport const getAffectedOwnDataCharts = (\n  ownDataCharts: JsonObject,\n  appliedOwnDataCharts: JsonObject,\n) => {\n  const chartIds = Object.keys(ownDataCharts);\n  const appliedChartIds = Object.keys(appliedOwnDataCharts);\n  const affectedIds: string[] = arrayDiff(chartIds, appliedChartIds).filter(\n    id => ownDataCharts[id] || appliedOwnDataCharts[id],\n  );\n  const checkForUpdateIds = new Set<string>([...chartIds, ...appliedChartIds]);\n  checkForUpdateIds.forEach(chartId => {\n    if (\n      !areObjectsEqual(ownDataCharts[chartId], appliedOwnDataCharts[chartId])\n    ) {\n      affectedIds.push(chartId);\n    }\n  });\n  return [...new Set(affectedIds)];\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFeatureEnabled, t, FeatureFlag } from '@superset-ui/core';\n\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport getChartIdsFromLayout from '../util/getChartIdsFromLayout';\nimport getLayoutComponentFromChartId from '../util/getLayoutComponentFromChartId';\n\nimport {\n  slicePropShape,\n  dashboardInfoPropShape,\n  dashboardStatePropShape,\n} from '../util/propShapes';\nimport {\n  LOG_ACTIONS_HIDE_BROWSER_TAB,\n  LOG_ACTIONS_MOUNT_DASHBOARD,\n  Logger,\n} from '../../logger/LogUtils';\nimport { areObjectsEqual } from '../../reduxUtils';\n\nimport getLocationHash from '../util/getLocationHash';\nimport isDashboardEmpty from '../util/isDashboardEmpty';\nimport { getAffectedOwnDataCharts } from '../util/charts/getOwnDataCharts';\n\nconst propTypes = {\n  actions: PropTypes.shape({\n    addSliceToDashboard: PropTypes.func.isRequired,\n    removeSliceFromDashboard: PropTypes.func.isRequired,\n    triggerQuery: PropTypes.func.isRequired,\n    logEvent: PropTypes.func.isRequired,\n    clearDataMaskState: PropTypes.func.isRequired,\n  }).isRequired,\n  dashboardInfo: dashboardInfoPropShape.isRequired,\n  dashboardState: dashboardStatePropShape.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  activeFilters: PropTypes.object.isRequired,\n  chartConfiguration: PropTypes.object,\n  datasources: PropTypes.object.isRequired,\n  ownDataCharts: PropTypes.object.isRequired,\n  layout: PropTypes.object.isRequired,\n  impressionId: PropTypes.string.isRequired,\n  timeout: PropTypes.number,\n  userId: PropTypes.string,\n};\n\nconst defaultProps = {\n  timeout: 60,\n  userId: '',\n};\n\nclass Dashboard extends React.PureComponent {\n  static contextType = PluginContext;\n\n  static onBeforeUnload(hasChanged) {\n    if (hasChanged) {\n      window.addEventListener('beforeunload', Dashboard.unload);\n    } else {\n      window.removeEventListener('beforeunload', Dashboard.unload);\n    }\n  }\n\n  static unload() {\n    const message = t('You have unsaved changes.');\n    window.event.returnValue = message; // Gecko + IE\n    return message; // Gecko + Webkit, Safari, Chrome etc.\n  }\n\n  constructor(props) {\n    super(props);\n    this.appliedFilters = props.activeFilters ?? {};\n    this.appliedOwnDataCharts = props.ownDataCharts ?? {};\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const bootstrapData = getBootstrapData();\n    const { dashboardState, layout } = this.props;\n    const eventData = {\n      is_soft_navigation: Logger.timeOriginOffset > 0,\n      is_edit_mode: dashboardState.editMode,\n      mount_duration: Logger.getTimestamp(),\n      is_empty: isDashboardEmpty(layout),\n      is_published: dashboardState.isPublished,\n      bootstrap_data_length: bootstrapData.length,\n    };\n    const directLinkComponentId = getLocationHash();\n    if (directLinkComponentId) {\n      eventData.target_id = directLinkComponentId;\n    }\n    this.props.actions.logEvent(LOG_ACTIONS_MOUNT_DASHBOARD, eventData);\n\n    // Handle browser tab visibility change\n    if (document.visibilityState === 'hidden') {\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime(),\n      };\n    }\n    window.addEventListener('visibilitychange', this.onVisibilityChange);\n    this.applyCharts();\n  }\n\n  componentDidUpdate() {\n    this.applyCharts();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const currentChartIds = getChartIdsFromLayout(this.props.layout);\n    const nextChartIds = getChartIdsFromLayout(nextProps.layout);\n\n    if (this.props.dashboardInfo.id !== nextProps.dashboardInfo.id) {\n      // single-page-app navigation check\n      return;\n    }\n\n    if (currentChartIds.length < nextChartIds.length) {\n      const newChartIds = nextChartIds.filter(\n        key => currentChartIds.indexOf(key) === -1,\n      );\n      newChartIds.forEach(newChartId =>\n        this.props.actions.addSliceToDashboard(\n          newChartId,\n          getLayoutComponentFromChartId(nextProps.layout, newChartId),\n        ),\n      );\n    } else if (currentChartIds.length > nextChartIds.length) {\n      // remove chart\n      const removedChartIds = currentChartIds.filter(\n        key => nextChartIds.indexOf(key) === -1,\n      );\n      removedChartIds.forEach(removedChartId =>\n        this.props.actions.removeSliceFromDashboard(removedChartId),\n      );\n    }\n  }\n\n  applyCharts() {\n    const { hasUnsavedChanges, editMode } = this.props.dashboardState;\n\n    const { appliedFilters, appliedOwnDataCharts } = this;\n    const { activeFilters, ownDataCharts, chartConfiguration } = this.props;\n    if (\n      isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS) &&\n      !chartConfiguration\n    ) {\n      // For a first loading we need to wait for cross filters charts data loaded to get all active filters\n      // for correct comparing  of filters to avoid unnecessary requests\n      return;\n    }\n\n    if (\n      !editMode &&\n      (!areObjectsEqual(appliedOwnDataCharts, ownDataCharts, {\n        ignoreUndefined: true,\n      }) ||\n        !areObjectsEqual(appliedFilters, activeFilters, {\n          ignoreUndefined: true,\n        }))\n    ) {\n      this.applyFilters();\n    }\n\n    if (hasUnsavedChanges) {\n      Dashboard.onBeforeUnload(true);\n    } else {\n      Dashboard.onBeforeUnload(false);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('visibilitychange', this.onVisibilityChange);\n    this.props.actions.clearDataMaskState();\n  }\n\n  onVisibilityChange() {\n    if (document.visibilityState === 'hidden') {\n      // from visible to hidden\n      this.visibilityEventData = {\n        start_offset: Logger.getTimestamp(),\n        ts: new Date().getTime(),\n      };\n    } else if (document.visibilityState === 'visible') {\n      // from hidden to visible\n      const logStart = this.visibilityEventData.start_offset;\n      this.props.actions.logEvent(LOG_ACTIONS_HIDE_BROWSER_TAB, {\n        ...this.visibilityEventData,\n        duration: Logger.getTimestamp() - logStart,\n      });\n    }\n  }\n\n  applyFilters() {\n    const { appliedFilters } = this;\n    const { activeFilters, ownDataCharts } = this.props;\n\n    // refresh charts if a filter was removed, added, or changed\n    const currFilterKeys = Object.keys(activeFilters);\n    const appliedFilterKeys = Object.keys(appliedFilters);\n\n    const allKeys = new Set(currFilterKeys.concat(appliedFilterKeys));\n    const affectedChartIds = getAffectedOwnDataCharts(\n      ownDataCharts,\n      this.appliedOwnDataCharts,\n    );\n    [...allKeys].forEach(filterKey => {\n      if (\n        !currFilterKeys.includes(filterKey) &&\n        appliedFilterKeys.includes(filterKey)\n      ) {\n        // filterKey is removed?\n        affectedChartIds.push(...appliedFilters[filterKey].scope);\n      } else if (!appliedFilterKeys.includes(filterKey)) {\n        // filterKey is newly added?\n        affectedChartIds.push(...activeFilters[filterKey].scope);\n      } else {\n        // if filterKey changes value,\n        // update charts in its scope\n        if (\n          !areObjectsEqual(\n            appliedFilters[filterKey].values,\n            activeFilters[filterKey].values,\n            {\n              ignoreUndefined: true,\n            },\n          )\n        ) {\n          affectedChartIds.push(...activeFilters[filterKey].scope);\n        }\n\n        // if filterKey changes scope,\n        // update all charts in its scope\n        if (\n          !areObjectsEqual(\n            appliedFilters[filterKey].scope,\n            activeFilters[filterKey].scope,\n          )\n        ) {\n          const chartsInScope = (activeFilters[filterKey].scope || []).concat(\n            appliedFilters[filterKey].scope || [],\n          );\n          affectedChartIds.push(...chartsInScope);\n        }\n      }\n    });\n\n    // remove dup in affectedChartIds\n    this.refreshCharts([...new Set(affectedChartIds)]);\n    this.appliedFilters = activeFilters;\n    this.appliedOwnDataCharts = ownDataCharts;\n  }\n\n  refreshCharts(ids) {\n    ids.forEach(id => {\n      this.props.actions.triggerQuery(true, id);\n    });\n  }\n\n  render() {\n    if (this.context.loading) {\n      return <Loading />;\n    }\n    return this.props.children;\n  }\n}\n\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;\n\nexport default Dashboard;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { CHART_TYPE } from './componentTypes';\n\nexport default function getLayoutComponentFromChartId(layout, chartId) {\n  return Object.values(layout).find(\n    currentComponent =>\n      currentComponent &&\n      currentComponent.type === CHART_TYPE &&\n      currentComponent.meta &&\n      currentComponent.meta.chartId === chartId,\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { RootState } from 'src/dashboard/types';\nimport Dashboard from 'src/dashboard/components/Dashboard';\nimport {\n  addSliceToDashboard,\n  removeSliceFromDashboard,\n} from 'src/dashboard/actions/dashboardState';\nimport { setDatasources } from 'src/dashboard/actions/datasources';\n\nimport { triggerQuery } from 'src/components/Chart/chartAction';\nimport { logEvent } from 'src/logger/actions';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\nimport {\n  getAllActiveFilters,\n  getRelevantDataMask,\n} from 'src/dashboard/util/activeAllDashboardFilters';\nimport { clearDataMaskState } from '../../dataMask/actions';\n\nfunction mapStateToProps(state: RootState) {\n  const {\n    datasources,\n    sliceEntities,\n    dataMask,\n    dashboardInfo,\n    dashboardState,\n    dashboardLayout,\n    impressionId,\n    nativeFilters,\n  } = state;\n\n  return {\n    timeout: dashboardInfo.common?.conf?.SUPERSET_WEBSERVER_TIMEOUT,\n    userId: dashboardInfo.userId,\n    dashboardInfo,\n    dashboardState,\n    datasources,\n    // filters prop: a map structure for all the active filter_box's values and scope in this dashboard,\n    // for each filter field. map key is [chartId_column]\n    // When dashboard is first loaded into browser,\n    // its value is from preselect_filters that dashboard owner saved in dashboard's meta data\n    // When user start interacting with dashboard, it will be user picked values from all filter_box\n    activeFilters: {\n      ...getActiveFilters(),\n      ...getAllActiveFilters({\n        // eslint-disable-next-line camelcase\n        chartConfiguration: dashboardInfo.metadata?.chart_configuration,\n        nativeFilters: nativeFilters.filters,\n        dataMask,\n        allSliceIds: dashboardState.sliceIds,\n      }),\n    },\n    chartConfiguration: dashboardInfo.metadata?.chart_configuration,\n    ownDataCharts: getRelevantDataMask(dataMask, 'ownState'),\n    slices: sliceEntities.slices,\n    layout: dashboardLayout.present,\n    impressionId,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        setDatasources,\n        clearDataMaskState,\n        addSliceToDashboard,\n        removeSliceFromDashboard,\n        triggerQuery,\n        logEvent,\n      },\n      dispatch,\n    ),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css, SupersetTheme } from '@superset-ui/core';\n\nexport const headerStyles = (theme: SupersetTheme) => css`\n  body {\n    h1 {\n      font-weight: ${theme.typography.weights.bold};\n      line-height: 1.4;\n      font-size: ${theme.typography.sizes.xxl}px;\n      letter-spacing: -0.2px;\n      margin-top: ${theme.gridUnit * 3}px;\n      margin-bottom: ${theme.gridUnit * 3}px;\n    }\n\n    h2 {\n      font-weight: ${theme.typography.weights.bold};\n      line-height: 1.4;\n      font-size: ${theme.typography.sizes.xl}px;\n      margin-top: ${theme.gridUnit * 3}px;\n      margin-bottom: ${theme.gridUnit * 2}px;\n    }\n\n    h3,\n    h4,\n    h5,\n    h6 {\n      font-weight: ${theme.typography.weights.bold};\n      line-height: 1.4;\n      font-size: ${theme.typography.sizes.l}px;\n      letter-spacing: 0.2px;\n      margin-top: ${theme.gridUnit * 2}px;\n      margin-bottom: ${theme.gridUnit}px;\n    }\n  }\n`;\n\nexport const filterCardPopoverStyle = (theme: SupersetTheme) => css`\n  .filter-card-popover {\n    width: 240px;\n    padding: 0;\n    border-radius: 4px;\n\n    &.ant-popover-placement-bottom {\n      padding-top: ${theme.gridUnit}px;\n    }\n\n    &.ant-popover-placement-left {\n      padding-right: ${theme.gridUnit * 3}px;\n    }\n\n    .ant-popover-inner {\n      box-shadow: 0 0 8px rgb(0 0 0 / 10%);\n    }\n\n    .ant-popover-inner-content {\n      padding: ${theme.gridUnit * 4}px;\n    }\n\n    .ant-popover-arrow {\n      display: none;\n    }\n  }\n\n  .filter-card-tooltip {\n    &.ant-tooltip-placement-bottom {\n      padding-top: 0;\n      & .ant-tooltip-arrow {\n        top: -13px;\n      }\n    }\n  }\n`;\n\nexport const chartContextMenuStyles = (theme: SupersetTheme) => css`\n  .ant-dropdown-menu.chart-context-menu {\n    min-width: ${theme.gridUnit * 43}px;\n  }\n  .ant-dropdown-menu-submenu.chart-context-submenu {\n    max-width: ${theme.gridUnit * 60}px;\n    min-width: ${theme.gridUnit * 40}px;\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect } from 'react';\nimport pick from 'lodash/pick';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { DashboardContextForExplore } from 'src/types/DashboardContextForExplore';\nimport {\n  getItem,\n  LocalStorageKeys,\n  setItem,\n} from 'src/utils/localStorageHelpers';\nimport { RootState } from 'src/dashboard/types';\nimport { getActiveFilters } from 'src/dashboard/util/activeDashboardFilters';\n\ntype Props = { dashboardPageId: string };\n\nconst EMPTY_OBJECT = {};\n\nexport const getDashboardContextLocalStorage = () => {\n  const dashboardsContexts = getItem(\n    LocalStorageKeys.dashboard__explore_context,\n    {},\n  );\n  // A new dashboard tab id is generated on each dashboard page opening.\n  // We mark ids as redundant when user leaves the dashboard, because they won't be reused.\n  // Then we remove redundant dashboard contexts from local storage in order not to clutter it\n  return Object.fromEntries(\n    Object.entries(dashboardsContexts).filter(\n      ([, value]) => !value.isRedundant,\n    ),\n  );\n};\n\nconst updateDashboardTabLocalStorage = (\n  dashboardPageId: string,\n  dashboardContext: DashboardContextForExplore,\n) => {\n  const dashboardsContexts = getDashboardContextLocalStorage();\n  setItem(LocalStorageKeys.dashboard__explore_context, {\n    ...dashboardsContexts,\n    [dashboardPageId]: dashboardContext,\n  });\n};\n\nconst SyncDashboardState: React.FC<Props> = ({ dashboardPageId }) => {\n  const dashboardContextForExplore = useSelector<\n    RootState,\n    DashboardContextForExplore\n  >(\n    ({ dashboardInfo, dashboardState, nativeFilters, dataMask }) => ({\n      labelColors: dashboardInfo.metadata?.label_colors || EMPTY_OBJECT,\n      sharedLabelColors:\n        dashboardInfo.metadata?.shared_label_colors || EMPTY_OBJECT,\n      colorScheme: dashboardState?.colorScheme,\n      chartConfiguration:\n        dashboardInfo.metadata?.chart_configuration || EMPTY_OBJECT,\n      nativeFilters: Object.entries(nativeFilters.filters).reduce(\n        (acc, [key, filterValue]) => ({\n          ...acc,\n          [key]: pick(filterValue, ['chartsInScope']),\n        }),\n        {},\n      ),\n      dataMask,\n      dashboardId: dashboardInfo.id,\n      filterBoxFilters: getActiveFilters(),\n      dashboardPageId,\n    }),\n    shallowEqual,\n  );\n\n  useEffect(() => {\n    updateDashboardTabLocalStorage(dashboardPageId, dashboardContextForExplore);\n    return () => {\n      // mark tab id as redundant when dashboard unmounts - case when user opens\n      // Explore in the same tab\n      updateDashboardTabLocalStorage(dashboardPageId, {\n        ...dashboardContextForExplore,\n        isRedundant: true,\n      });\n    };\n  }, [dashboardContextForExplore, dashboardPageId]);\n\n  return null;\n};\n\nexport default SyncDashboardState;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FC, useEffect, useMemo, useRef } from 'react';\nimport { Global } from '@emotion/react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  CategoricalColorNamespace,\n  FeatureFlag,\n  getSharedLabelColor,\n  isFeatureEnabled,\n  SharedLabelColorSource,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useToasts } from 'src/components/MessageToasts/withToasts';\nimport Loading from 'src/components/Loading';\nimport {\n  useDashboard,\n  useDashboardCharts,\n  useDashboardDatasets,\n} from 'src/hooks/apiResources';\nimport { hydrateDashboard } from 'src/dashboard/actions/hydrate';\nimport { setDatasources } from 'src/dashboard/actions/datasources';\nimport injectCustomCss from 'src/dashboard/util/injectCustomCss';\n\nimport { LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { getFilterSets } from 'src/dashboard/actions/nativeFilters';\nimport { setDatasetsStatus } from 'src/dashboard/actions/dashboardState';\nimport {\n  getFilterValue,\n  getPermalinkValue,\n} from 'src/dashboard/components/nativeFilters/FilterBar/keyValue';\nimport DashboardContainer from 'src/dashboard/containers/Dashboard';\n\nimport shortid from 'shortid';\nimport { RootState } from '../types';\nimport {\n  chartContextMenuStyles,\n  filterCardPopoverStyle,\n  headerStyles,\n} from '../styles';\nimport SyncDashboardState, {\n  getDashboardContextLocalStorage,\n} from '../components/SyncDashboardState';\n\nexport const DashboardPageIdContext = React.createContext('');\n\nconst DashboardBuilder = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"DashboardContainer\" */\n      /* webpackPreload: true */\n      'src/dashboard/components/DashboardBuilder/DashboardBuilder'\n    ),\n);\n\nconst originalDocumentTitle = document.title;\n\ntype PageProps = {\n  idOrSlug: string;\n};\n\nexport const DashboardPage: FC<PageProps> = ({ idOrSlug }: PageProps) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const dashboardPageId = useMemo(() => shortid.generate(), []);\n  const hasDashboardInfoInitiated = useSelector<RootState, Boolean>(\n    ({ dashboardInfo }) =>\n      dashboardInfo && Object.keys(dashboardInfo).length > 0,\n  );\n  const { addDangerToast } = useToasts();\n  const { result: dashboard, error: dashboardApiError } =\n    useDashboard(idOrSlug);\n  const { result: charts, error: chartsApiError } =\n    useDashboardCharts(idOrSlug);\n  const {\n    result: datasets,\n    error: datasetsApiError,\n    status,\n  } = useDashboardDatasets(idOrSlug);\n  const isDashboardHydrated = useRef(false);\n\n  const error = dashboardApiError || chartsApiError;\n  const readyToRender = Boolean(dashboard && charts);\n  const { dashboard_title, css, metadata, id = 0 } = dashboard || {};\n\n  // Filter sets depend on native filters\n  const filterSetEnabled =\n    isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS_SET) &&\n    isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS);\n\n  useEffect(() => {\n    // mark tab id as redundant when user closes browser tab - a new id will be\n    // generated next time user opens a dashboard and the old one won't be reused\n    const handleTabClose = () => {\n      const dashboardsContexts = getDashboardContextLocalStorage();\n      setItem(LocalStorageKeys.dashboard__explore_context, {\n        ...dashboardsContexts,\n        [dashboardPageId]: {\n          ...dashboardsContexts[dashboardPageId],\n          isRedundant: true,\n        },\n      });\n    };\n    window.addEventListener('beforeunload', handleTabClose);\n    return () => {\n      window.removeEventListener('beforeunload', handleTabClose);\n    };\n  }, [dashboardPageId]);\n\n  useEffect(() => {\n    dispatch(setDatasetsStatus(status));\n  }, [dispatch, status]);\n\n  useEffect(() => {\n    // eslint-disable-next-line consistent-return\n    async function getDataMaskApplied() {\n      const permalinkKey = getUrlParam(URL_PARAMS.permalinkKey);\n      const nativeFilterKeyValue = getUrlParam(URL_PARAMS.nativeFiltersKey);\n      const isOldRison = getUrlParam(URL_PARAMS.nativeFilters);\n\n      let dataMask = nativeFilterKeyValue || {};\n      // activeTabs is initialized with undefined so that it doesn't override\n      // the currently stored value when hydrating\n      let activeTabs: string[] | undefined;\n      if (permalinkKey) {\n        const permalinkValue = await getPermalinkValue(permalinkKey);\n        if (permalinkValue) {\n          ({ dataMask, activeTabs } = permalinkValue.state);\n        }\n      } else if (nativeFilterKeyValue) {\n        dataMask = await getFilterValue(id, nativeFilterKeyValue);\n      }\n      if (isOldRison) {\n        dataMask = isOldRison;\n      }\n\n      if (readyToRender) {\n        if (!isDashboardHydrated.current) {\n          isDashboardHydrated.current = true;\n          if (filterSetEnabled) {\n            // only initialize filterset once\n            dispatch(getFilterSets(id));\n          }\n        }\n        dispatch(\n          hydrateDashboard({\n            history,\n            dashboard,\n            charts,\n            activeTabs,\n            dataMask,\n          }),\n        );\n      }\n      return null;\n    }\n    if (id) getDataMaskApplied();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [readyToRender]);\n\n  useEffect(() => {\n    if (dashboard_title) {\n      document.title = dashboard_title;\n    }\n    return () => {\n      document.title = originalDocumentTitle;\n    };\n  }, [dashboard_title]);\n\n  useEffect(() => {\n    if (typeof css === 'string') {\n      // returning will clean up custom css\n      // when dashboard unmounts or changes\n      return injectCustomCss(css);\n    }\n    return () => {};\n  }, [css]);\n\n  useEffect(() => {\n    const sharedLabelColor = getSharedLabelColor();\n    sharedLabelColor.source = SharedLabelColorSource.dashboard;\n    return () => {\n      // clean up label color\n      const categoricalNamespace = CategoricalColorNamespace.getNamespace(\n        metadata?.color_namespace,\n      );\n      categoricalNamespace.resetColors();\n      sharedLabelColor.clear();\n    };\n  }, [metadata?.color_namespace]);\n\n  useEffect(() => {\n    if (datasetsApiError) {\n      addDangerToast(\n        t('Error loading chart datasources. Filters may not work correctly.'),\n      );\n    } else {\n      dispatch(setDatasources(datasets));\n    }\n  }, [addDangerToast, datasets, datasetsApiError, dispatch]);\n\n  if (error) throw error; // caught in error boundary\n  if (!readyToRender || !hasDashboardInfoInitiated) return <Loading />;\n\n  return (\n    <>\n      <Global\n        styles={[\n          filterCardPopoverStyle(theme),\n          headerStyles(theme),\n          chartContextMenuStyles(theme),\n        ]}\n      />\n      <SyncDashboardState dashboardPageId={dashboardPageId} />\n      <DashboardPageIdContext.Provider value={dashboardPageId}>\n        <DashboardContainer>\n          <DashboardBuilder />\n        </DashboardContainer>\n      </DashboardPageIdContext.Provider>\n    </>\n  );\n};\n\nexport default DashboardPage;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  DataMaskStateWithId,\n  PartialFilters,\n  JsonObject,\n} from '@superset-ui/core';\nimport { ActiveFilters, ChartConfiguration } from '../types';\n\nexport const getRelevantDataMask = (\n  dataMask: DataMaskStateWithId,\n  prop: string,\n): JsonObject | DataMaskStateWithId =>\n  Object.values(dataMask)\n    .filter(item => item[prop])\n    .reduce(\n      (prev, next) => ({ ...prev, [next.id]: prop ? next[prop] : next }),\n      {},\n    );\n\nexport const getAllActiveFilters = ({\n  chartConfiguration,\n  nativeFilters,\n  dataMask,\n  allSliceIds,\n}: {\n  chartConfiguration: ChartConfiguration;\n  dataMask: DataMaskStateWithId;\n  nativeFilters: PartialFilters;\n  allSliceIds: number[];\n}): ActiveFilters => {\n  const activeFilters = {};\n\n  // Combine native filters with cross filters, because they have similar logic\n  Object.values(dataMask).forEach(({ id: filterId, extraFormData }) => {\n    const scope =\n      nativeFilters?.[filterId]?.chartsInScope ??\n      chartConfiguration?.[filterId]?.crossFilters?.chartsInScope ??\n      allSliceIds ??\n      [];\n    // Iterate over all roots to find all affected charts\n    activeFilters[filterId] = {\n      scope,\n      values: extraFormData,\n    };\n  });\n  return activeFilters;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nfunction createStyleElement(className: string) {\n  const style = document.createElement('style');\n  style.className = className;\n  style.type = 'text/css';\n  return style;\n}\n\n// The original, non-typescript code referenced `style.styleSheet`.\n// I can't find what sort of element would have a styleSheet property,\n// so have created this type to satisfy TS without changing behavior.\ntype MysteryStyleElement = {\n  styleSheet: {\n    cssText: string;\n  };\n};\n\nexport default function injectCustomCss(css: string) {\n  const className = 'CssEditor-css';\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const style: HTMLStyleElement =\n    document.querySelector(`.${className}`) || createStyleElement(className);\n\n  if ('styleSheet' in style) {\n    (style as HTMLStyleElement & MysteryStyleElement).styleSheet.cssText = css;\n  } else {\n    style.innerHTML = css;\n  }\n\n  /**\n   * Ensures that the style applied is always the last.\n   *\n   * from: https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n   * The Node.appendChild() method adds a node to the end of the list of children\n   * of a specified parent node. If the given child is a reference to an existing\n   * node in the document, appendChild() moves it from its current position to the\n   * new position (there is no requirement to remove the node from its parent node\n   * before appending it to some other node).\n   */\n\n  head.appendChild(style);\n\n  return function removeCustomCSS() {\n    style.remove();\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport rison from 'rison';\nimport Chart from 'src/types/Chart';\nimport { useApiV1Resource, useTransformedResource } from './apiResources';\n\nfunction extractOwnerNames({ owners }: Chart) {\n  if (!owners) return null;\n  return owners.map(owner => `${owner.first_name} ${owner.last_name}`);\n}\n\nconst ownerNamesQuery = rison.encode({\n  columns: ['owners.first_name', 'owners.last_name'],\n  keys: ['none'],\n});\n\nexport function useChartOwnerNames(chartId: string) {\n  return useTransformedResource(\n    useApiV1Resource<Chart>(`/api/v1/chart/${chartId}?q=${ownerNamesQuery}`),\n    extractOwnerNames,\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dashboard, Datasource, EmbeddedDashboard } from 'src/dashboard/types';\nimport { Chart } from 'src/types/Chart';\nimport { useApiV1Resource, useTransformedResource } from './apiResources';\n\nexport const useDashboard = (idOrSlug: string | number) =>\n  useTransformedResource(\n    useApiV1Resource<Dashboard>(`/api/v1/dashboard/${idOrSlug}`),\n    dashboard => ({\n      ...dashboard,\n      // TODO: load these at the API level\n      metadata:\n        (dashboard.json_metadata && JSON.parse(dashboard.json_metadata)) || {},\n      position_data:\n        dashboard.position_json && JSON.parse(dashboard.position_json),\n      owners: dashboard.owners || [],\n    }),\n  );\n\n// gets the chart definitions for a dashboard\nexport const useDashboardCharts = (idOrSlug: string | number) =>\n  useApiV1Resource<Chart[]>(`/api/v1/dashboard/${idOrSlug}/charts`);\n\n// gets the datasets for a dashboard\n// important: this endpoint only returns the fields in the dataset\n// that are necessary for rendering the given dashboard\nexport const useDashboardDatasets = (idOrSlug: string | number) =>\n  useApiV1Resource<Datasource[]>(`/api/v1/dashboard/${idOrSlug}/datasets`);\n\nexport const useEmbeddedDashboard = (idOrSlug: string | number) =>\n  useApiV1Resource<EmbeddedDashboard>(`/api/v1/dashboard/${idOrSlug}/embedded`);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { api, JsonResponse } from './queryApi';\n\nexport type FetchValidationQueryParams = {\n  dbId?: string | number;\n  schema?: string;\n  sql: string;\n  templateParams?: string;\n};\n\ntype ValidationResult = {\n  end_column: number | null;\n  line_number: number | null;\n  message: string | null;\n  start_column: number | null;\n};\n\nconst queryValidationApi = api.injectEndpoints({\n  endpoints: builder => ({\n    queryValidations: builder.query<\n      ValidationResult[],\n      FetchValidationQueryParams\n    >({\n      providesTags: ['QueryValidations'],\n      query: ({ dbId, schema, sql, templateParams }) => {\n        let template_params = templateParams;\n        try {\n          template_params = JSON.parse(templateParams || '');\n        } catch (e) {\n          template_params = undefined;\n        }\n        const postPayload = {\n          schema,\n          sql,\n          ...(template_params && { template_params }),\n        };\n        return {\n          method: 'post',\n          endpoint: `/api/v1/database/${dbId}/validate_sql/`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(postPayload),\n          transformResponse: ({ json }: JsonResponse) => json.result,\n        };\n      },\n    }),\n  }),\n});\n\nexport const { useQueryValidationsQuery } = queryValidationApi;\n"],"names":["assembleEndpoint","dashId","key","tabId","endpoint","concat","updateFilterKey","value","SupersetClient","put","jsonPayload","then","r","json","message","catch","err","logging","error","createFilterKey","post","undefined","getFilterValue","get","_ref","JSON","parse","getPermalinkValue","_ref2","getChartIdsFromLayout","layout","Object","values","reduce","chartIds","currentComponent","type","CHART_TYPE","meta","chartId","push","USER_CONTENT_COMPONENT_TYPE","MARKDOWN_TYPE","DYNAMIC_TYPE","isDashboardEmpty","some","includes","propTypes","actions","PropTypes","addSliceToDashboard","isRequired","removeSliceFromDashboard","triggerQuery","logEvent","clearDataMaskState","dashboardInfo","dashboardInfoPropShape","dashboardState","dashboardStatePropShape","slices","slicePropShape","activeFilters","chartConfiguration","datasources","ownDataCharts","impressionId","timeout","userId","Dashboard","React","static","hasChanged","window","addEventListener","unload","removeEventListener","t","event","returnValue","constructor","props","_props$activeFilters","_props$ownDataCharts","super","this","appliedFilters","appliedOwnDataCharts","onVisibilityChange","bind","componentDidMount","bootstrapData","getBootstrapData","eventData","is_soft_navigation","Logger","timeOriginOffset","is_edit_mode","editMode","mount_duration","getTimestamp","is_empty","is_published","isPublished","bootstrap_data_length","length","directLinkComponentId","getLocationHash","target_id","LOG_ACTIONS_MOUNT_DASHBOARD","document","visibilityState","visibilityEventData","start_offset","ts","Date","getTime","applyCharts","componentDidUpdate","UNSAFE_componentWillReceiveProps","nextProps","currentChartIds","nextChartIds","id","filter","indexOf","forEach","newChartId","find","removedChartId","hasUnsavedChanges","isFeatureEnabled","FeatureFlag","DASHBOARD_CROSS_FILTERS","areObjectsEqual","ignoreUndefined","applyFilters","onBeforeUnload","componentWillUnmount","logStart","LOG_ACTIONS_HIDE_BROWSER_TAB","duration","currFilterKeys","keys","appliedFilterKeys","allKeys","Set","affectedChartIds","getAffectedOwnDataCharts","appliedChartIds","affectedIds","a","b","x","arrayDiff","filterKey","scope","chartsInScope","refreshCharts","ids","render","context","loading","___EmotionJSX","Loading","children","contextType","PluginContext","defaultProps","connect","state","_dashboardInfo$common","_dashboardInfo$common2","_dashboardInfo$metada","_dashboardInfo$metada2","sliceEntities","dataMask","dashboardLayout","nativeFilters","common","conf","SUPERSET_WEBSERVER_TIMEOUT","getActiveFilters","getAllActiveFilters","metadata","chart_configuration","filters","allSliceIds","sliceIds","getRelevantDataMask","present","dispatch","bindActionCreators","setDatasources","headerStyles","theme","css","typography","weights","bold","sizes","xxl","gridUnit","xl","l","filterCardPopoverStyle","chartContextMenuStyles","EMPTY_OBJECT","getDashboardContextLocalStorage","dashboardsContexts","getItem","LocalStorageKeys","dashboard__explore_context","fromEntries","entries","isRedundant","updateDashboardTabLocalStorage","dashboardPageId","dashboardContext","setItem","dashboardContextForExplore","useSelector","_ref3","_dashboardInfo$metada3","labelColors","label_colors","sharedLabelColors","shared_label_colors","colorScheme","acc","_ref4","filterValue","pick","dashboardId","filterBoxFilters","shallowEqual","useEffect","DashboardPageIdContext","DashboardBuilder","originalDocumentTitle","title","DashboardPage","idOrSlug","useTheme","useDispatch","history","useHistory","useMemo","shortid","hasDashboardInfoInitiated","addDangerToast","useToasts","result","dashboard","dashboardApiError","useDashboard","charts","chartsApiError","useDashboardCharts","datasets","datasetsApiError","status","useDashboardDatasets","isDashboardHydrated","useRef","readyToRender","Boolean","dashboard_title","filterSetEnabled","DASHBOARD_NATIVE_FILTERS_SET","DASHBOARD_NATIVE_FILTERS","handleTabClose","setDatasetsStatus","async","permalinkKey","getUrlParam","URL_PARAMS","nativeFilterKeyValue","nativeFiltersKey","isOldRison","activeTabs","permalinkValue","current","getFilterSets","hydrateDashboard","getDataMaskApplied","injectCustomCss","sharedLabelColor","getSharedLabelColor","source","SharedLabelColorSource","CategoricalColorNamespace","getNamespace","color_namespace","resetColors","clear","Global","styles","SyncDashboardState","Provider","DashboardContainer","prop","item","prev","next","_nativeFilters$filter","_nativeFilters$filter2","_chartConfiguration$f","_chartConfiguration$f2","filterId","extraFormData","crossFilters","className","head","getElementsByTagName","style","querySelector","createElement","createStyleElement","styleSheet","cssText","innerHTML","appendChild","remove","extractOwnerNames","owners","map","owner","first_name","last_name","ownerNamesQuery","rison","columns","useChartOwnerNames","useTransformedResource","useApiV1Resource","json_metadata","position_data","position_json","queryValidationApi","api","injectEndpoints","endpoints","builder","queryValidations","query","providesTags","dbId","schema","sql","templateParams","template_params","e","postPayload","method","headers","body","stringify","transformResponse","useQueryValidationsQuery"],"sourceRoot":""}