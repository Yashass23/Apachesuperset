{"version":3,"file":"6c38f8c9df379e0dbd8a.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/match-sorter/dist/match-sorter.esm.js","webpack://superset/./node_modules/remove-accents/index.js","webpack://superset/./src/components/Timer/index.tsx","webpack://superset/./src/explore/exploreUtils/getParsedExploreURLParams.ts","webpack://superset/./src/components/CachedLabel/TooltipContent.tsx","webpack://superset/./src/components/CachedLabel/index.tsx","webpack://superset/./src/explore/components/ChartPills.tsx","webpack://superset/./src/explore/components/ExploreAlert.tsx","webpack://superset/./src/explore/components/ExploreChartPanel/index.jsx","webpack://superset/./src/explore/components/ExploreChartPanel/useResizeDetectorByObserver.ts","webpack://superset/./src/explore/components/RunQueryButton/index.tsx","webpack://superset/./src/explore/components/ControlPanelsContainer.tsx","webpack://superset/./src/explore/components/SaveModal.tsx","webpack://superset/./src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx","webpack://superset/./src/explore/components/DatasourcePanel/index.tsx","webpack://superset/./src/utils/getControlsForVizType.js","webpack://superset/./src/components/AlteredSliceTag/index.jsx","webpack://superset/./src/explore/components/ExploreChartHeader/index.jsx","webpack://superset/./src/explore/components/ExploreViewContainer/index.jsx","webpack://superset/./src/explore/fixtures.tsx","webpack://superset/./src/explore/controlUtils/getFormDataWithDashboardContext.ts","webpack://superset/./src/pages/Chart/index.tsx"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 7,\n  EQUAL: 6,\n  STARTS_WITH: 5,\n  WORD_STARTS_WITH: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nmatchSorter.rankings = rankings;\n\nvar defaultBaseSortFn = function defaultBaseSortFn(a, b) {\n  return String(a.rankedValue).localeCompare(String(b.rankedValue));\n};\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold,\n      _options$baseSort = _options.baseSort,\n      baseSort = _options$baseSort === void 0 ? defaultBaseSortFn : _options$baseSort,\n      _options$sorter = _options.sorter,\n      sorter = _options$sorter === void 0 ? function (matchedItems) {\n    return matchedItems.sort(function (a, b) {\n      return sortRankedValues(a, b, baseSort);\n    });\n  } : _options$sorter;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return sorter(matchedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var rankingInfo = getHighestRanking(item, keys, value, options);\n    var rank = rankingInfo.rank,\n        _rankingInfo$keyThres = rankingInfo.keyThreshold,\n        keyThreshold = _rankingInfo$keyThres === void 0 ? threshold : _rankingInfo$keyThres;\n\n    if (rank >= keyThreshold) {\n      matches.push(_extends({}, rankingInfo, {\n        item: item,\n        index: index\n      }));\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    // if keys is not specified, then we assume the item given is ready to be matched\n    var stringItem = item;\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedValue: stringItem,\n      rank: getMatchRanking(stringItem, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        rankedValue = _ref2.rankedValue,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var newRankedValue = rankedValue;\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n      newRankedValue = itemValue;\n    }\n\n    return {\n      rankedValue: newRankedValue,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rankedValue: item,\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  } // Lower casing before further comparison\n\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL;\n  } // starts with\n\n\n  if (testString.startsWith(stringToRank)) {\n    return rankings.STARTS_WITH;\n  } // word starts with\n\n\n  if (testString.includes(\" \" + stringToRank)) {\n    return rankings.WORD_STARTS_WITH;\n  } // contains\n\n\n  if (testString.includes(stringToRank)) {\n    return rankings.CONTAINS;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).includes(stringToRank)) {\n    return rankings.ACRONYM;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index, J = string.length; j < J; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var spreadPercentage = 1 / spread;\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1, I = stringToRank.length; i < I; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\n\n\nfunction sortRankedValues(a, b, baseSort) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n  var same = aRank === bRank;\n\n  if (same) {\n    if (aKeyIndex === bKeyIndex) {\n      // use the base sort function as a tie-breaker\n      return baseSort(a, b);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  // value might not actually be a string at this point (we don't get to choose)\n  // so part of preparing the value for comparison is ensure that it is a string\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item);\n  } else if (item == null) {\n    value = null;\n  } else if (Object.hasOwnProperty.call(item, key)) {\n    value = item[key];\n  } else if (key.includes('.')) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    return getNestedValues(key, item);\n  } else {\n    value = null;\n  } // because `value` can also be undefined\n\n\n  if (value == null) {\n    return [];\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return [String(value)];\n}\n/**\n * Given path: \"foo.bar.baz\"\n * And item: {foo: {bar: {baz: 'buzz'}}}\n *   -> 'buzz'\n * @param path a dot-separated set of keys\n * @param item the item to get the value from\n */\n\n\nfunction getNestedValues(path, item) {\n  var keys = path.split('.');\n  var values = [item];\n\n  for (var i = 0, I = keys.length; i < I; i++) {\n    var nestedKey = keys[i];\n    var nestedValues = [];\n\n    for (var j = 0, J = values.length; j < J; j++) {\n      var nestedItem = values[j];\n      if (nestedItem == null) continue;\n\n      if (Object.hasOwnProperty.call(nestedItem, nestedKey)) {\n        var nestedValue = nestedItem[nestedKey];\n\n        if (nestedValue != null) {\n          nestedValues.push(nestedValue);\n        }\n      } else if (nestedKey === '*') {\n        // ensure that values is an array\n        nestedValues = nestedValues.concat(nestedItem);\n      }\n    }\n\n    values = nestedValues;\n  }\n\n  if (Array.isArray(values[0])) {\n    // keep allowing the implicit wildcard for an array of strings at the end of\n    // the path; don't use `.flat()` because that's not available in node.js v10\n    var result = [];\n    return result.concat.apply(result, values);\n  } // Based on our logic it should be an array of strings by now...\n  // assuming the user's path terminated in strings\n\n\n  return values;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param item - the item from which the values will be retrieved\n * @param keys - the keys to use to retrieve the values\n * @return objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  var allValues = [];\n\n  for (var j = 0, J = keys.length; j < J; j++) {\n    var key = keys[j];\n    var attributes = getKeyAttributes(key);\n    var itemValues = getItemValues(item, key);\n\n    for (var i = 0, I = itemValues.length; i < I; i++) {\n      allValues.push({\n        itemValue: itemValues[i],\n        attributes: attributes\n      });\n    }\n  }\n\n  return allValues;\n}\n\nvar defaultKeyAttributes = {\n  maxRanking: Infinity,\n  minRanking: -Infinity\n};\n/**\n * Gets all the attributes for the given key\n * @param key - the key from which the attributes will be retrieved\n * @return object containing the key's attributes\n */\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    return defaultKeyAttributes;\n  }\n\n  return _extends({}, defaultKeyAttributes, key);\n}\n/*\neslint\n  no-continue: \"off\",\n*/\n\nexport { defaultBaseSortFn, matchSorter, rankings };\n","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport Label, { Type } from 'src/components/Label';\n\nimport { now, fDuration } from 'src/utils/dates';\n\nexport interface TimerProps {\n  endTime?: number;\n  isRunning: boolean;\n  startTime?: number;\n  status?: Type;\n}\n\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n`;\n\nexport default function Timer({\n  endTime,\n  isRunning,\n  startTime,\n  status = 'success',\n}: TimerProps) {\n  const [clockStr, setClockStr] = useState('00:00:00.00');\n  const timer = useRef<ReturnType<typeof setInterval>>();\n\n  useEffect(() => {\n    const stopTimer = () => {\n      if (timer.current) {\n        clearInterval(timer.current);\n        timer.current = undefined;\n      }\n    };\n\n    if (isRunning) {\n      timer.current = setInterval(() => {\n        if (startTime) {\n          const endDttm = endTime || now();\n          if (startTime < endDttm) {\n            setClockStr(fDuration(startTime, endDttm));\n          }\n          if (!isRunning) {\n            stopTimer();\n          }\n        }\n      }, 30);\n    }\n    return stopTimer;\n  }, [endTime, isRunning, startTime]);\n\n  return (\n    <TimerLabel type={status} role=\"timer\">\n      {clockStr}\n    </TimerLabel>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport interface Location {\n  search: string;\n  pathname: string;\n}\n\n// mapping { url_param: v1_explore_request_param }\nconst EXPLORE_URL_SEARCH_PARAMS = {\n  form_data: {\n    name: 'form_data',\n    parser: (formData: string) => {\n      const formDataObject = JSON.parse(formData);\n      if (formDataObject.datasource) {\n        const [datasource_id, datasource_type] =\n          formDataObject.datasource.split('__');\n        formDataObject.datasource_id = datasource_id;\n        formDataObject.datasource_type = datasource_type;\n        delete formDataObject.datasource;\n      }\n      return formDataObject;\n    },\n  },\n  slice_id: {\n    name: 'slice_id',\n  },\n  datasource_id: {\n    name: 'datasource_id',\n  },\n  datasource_type: {\n    name: 'datasource_type',\n  },\n  datasource: {\n    name: 'datasource',\n    parser: (datasource: string) => {\n      const [datasource_id, datasource_type] = datasource.split('__');\n      return { datasource_id, datasource_type };\n    },\n  },\n  form_data_key: {\n    name: 'form_data_key',\n  },\n  permalink_key: {\n    name: 'permalink_key',\n  },\n  viz_type: {\n    name: 'viz_type',\n  },\n  dashboard_id: {\n    name: 'dashboard_id',\n  },\n};\n\nconst EXPLORE_URL_PATH_PARAMS = {\n  p: 'permalink_key', // permalink\n  table: 'datasource_id',\n};\n\n// search params can be placed in form_data object\n// we need to \"flatten\" the search params to use them with /v1/explore endpoint\nconst getParsedExploreURLSearchParams = (search: string) => {\n  const urlSearchParams = new URLSearchParams(search);\n  return Array.from(urlSearchParams.keys()).reduce((acc, currentParam) => {\n    const paramValue = urlSearchParams.get(currentParam);\n    if (paramValue === null) {\n      return acc;\n    }\n    let parsedParamValue;\n    try {\n      parsedParamValue =\n        EXPLORE_URL_SEARCH_PARAMS[currentParam].parser?.(paramValue) ??\n        paramValue;\n    } catch {\n      parsedParamValue = paramValue;\n    }\n    if (typeof parsedParamValue === 'object') {\n      return { ...acc, ...parsedParamValue };\n    }\n    const key = EXPLORE_URL_SEARCH_PARAMS[currentParam]?.name || currentParam;\n    return {\n      ...acc,\n      [key]: parsedParamValue,\n    };\n  }, {});\n};\n\n// path params need to be transformed to search params to use them with /v1/explore endpoint\nconst getParsedExploreURLPathParams = (pathname: string) =>\n  Object.keys(EXPLORE_URL_PATH_PARAMS).reduce((acc, currentParam) => {\n    const re = new RegExp(`/(${currentParam})/(\\\\w+)`);\n    const pathGroups = pathname.match(re);\n    if (pathGroups?.[2]) {\n      return { ...acc, [EXPLORE_URL_PATH_PARAMS[currentParam]]: pathGroups[2] };\n    }\n    return acc;\n  }, {});\n\nexport const getParsedExploreURLParams = (\n  location: Location = window.location,\n) =>\n  new URLSearchParams(\n    Object.entries({\n      ...getParsedExploreURLSearchParams(location.search),\n      ...getParsedExploreURLPathParams(location.pathname),\n    })\n      .map(entry => entry.join('='))\n      .join('&'),\n  );\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport moment from 'moment';\nimport { t } from '@superset-ui/core';\n\ninterface Props {\n  cachedTimestamp?: string;\n}\nexport const TooltipContent: React.FC<Props> = ({ cachedTimestamp }) => {\n  const cachedText = cachedTimestamp ? (\n    <span>\n      {t('Loaded data cached')}\n      <b> {moment.utc(cachedTimestamp).fromNow()}</b>\n    </span>\n  ) : (\n    t('Loaded from cache')\n  );\n\n  return (\n    <span data-test=\"tooltip-content\">\n      {cachedText}. {t('Click to force-refresh')}\n    </span>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { TooltipContent } from './TooltipContent';\n\nexport interface CacheLabelProps {\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  cachedTimestamp?: string;\n  className?: string;\n}\n\nconst CacheLabel: React.FC<CacheLabelProps> = ({\n  className,\n  onClick,\n  cachedTimestamp,\n}) => {\n  const [hovered, setHovered] = useState(false);\n\n  const labelType = hovered ? 'primary' : 'default';\n  return (\n    <Tooltip\n      title={<TooltipContent cachedTimestamp={cachedTimestamp} />}\n      id=\"cache-desc-tooltip\"\n    >\n      <Label\n        className={`${className}`}\n        type={labelType}\n        onClick={onClick}\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n      >\n        {t('Cached')} <i className=\"fa fa-refresh\" />\n      </Label>\n    </Tooltip>\n  );\n};\n\nexport default CacheLabel;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { forwardRef, RefObject } from 'react';\nimport { css, QueryData, SupersetTheme } from '@superset-ui/core';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';\nimport CachedLabel from 'src/components/CachedLabel';\nimport Timer from 'src/components/Timer';\n\nenum CHART_STATUS_MAP {\n  failed = 'danger',\n  loading = 'warning',\n  success = 'success',\n}\n\nexport type ChartPillsProps = {\n  queriesResponse: QueryData[];\n  chartStatus: keyof typeof CHART_STATUS_MAP;\n  chartUpdateStartTime: number;\n  chartUpdateEndTime: number;\n  refreshCachedQuery: () => void;\n  rowLimit: string | number;\n};\n\nexport const ChartPills = forwardRef(\n  (\n    {\n      queriesResponse,\n      chartStatus,\n      chartUpdateStartTime,\n      chartUpdateEndTime,\n      refreshCachedQuery,\n      rowLimit,\n    }: ChartPillsProps,\n    ref: RefObject<HTMLDivElement>,\n  ) => {\n    const isLoading = chartStatus === 'loading';\n    const firstQueryResponse = queriesResponse?.[0];\n    return (\n      <div ref={ref}>\n        <div\n          css={(theme: SupersetTheme) => css`\n            display: flex;\n            justify-content: flex-end;\n            padding-bottom: ${theme.gridUnit * 4}px;\n            & .ant-tag:last-of-type {\n              margin: 0;\n            }\n          `}\n        >\n          {!isLoading && firstQueryResponse && (\n            <RowCountLabel\n              rowcount={Number(firstQueryResponse.rowcount) || 0}\n              limit={Number(rowLimit) || 0}\n            />\n          )}\n          {!isLoading && firstQueryResponse?.is_cached && (\n            <CachedLabel\n              onClick={refreshCachedQuery}\n              cachedTimestamp={firstQueryResponse.cached_dttm}\n            />\n          )}\n          <Timer\n            startTime={chartUpdateStartTime}\n            endTime={chartUpdateEndTime}\n            isRunning={isLoading}\n            status={CHART_STATUS_MAP[chartStatus]}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { forwardRef, RefObject } from 'react';\nimport { css, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\n\ninterface ControlPanelAlertProps {\n  title: string;\n  bodyText: string;\n  primaryButtonAction?: (e: React.MouseEvent) => void;\n  secondaryButtonAction?: (e: React.MouseEvent) => void;\n  primaryButtonText?: string;\n  secondaryButtonText?: string;\n  type: 'info' | 'warning' | 'error';\n  className?: string;\n}\n\nconst AlertContainer = styled.div`\n  ${({ theme }) => css`\n    margin: ${theme.gridUnit * 4}px;\n    padding: ${theme.gridUnit * 4}px;\n\n    border: 1px solid ${theme.colors.info.base};\n    background-color: ${theme.colors.info.light2};\n    border-radius: 2px;\n\n    color: ${theme.colors.info.dark2};\n    font-size: ${theme.typography.sizes.m}px;\n\n    p {\n      margin-bottom: ${theme.gridUnit}px;\n    }\n\n    & a,\n    & span[role='button'] {\n      color: inherit;\n      text-decoration: underline;\n      &:hover {\n        color: ${theme.colors.info.dark1};\n      }\n    }\n\n    &.alert-type-warning {\n      border-color: ${theme.colors.alert.base};\n      background-color: ${theme.colors.alert.light2};\n\n      p {\n        color: ${theme.colors.alert.dark2};\n      }\n\n      & a:hover,\n      & span[role='button']:hover {\n        color: ${theme.colors.alert.dark1};\n      }\n    }\n  `}\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  button {\n    line-height: 1;\n  }\n`;\n\nconst Title = styled.p`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\n\nconst typeChart = {\n  warning: 'warning',\n  danger: 'danger',\n};\n\nexport const ExploreAlert = forwardRef(\n  (\n    {\n      title,\n      bodyText,\n      primaryButtonAction,\n      secondaryButtonAction,\n      primaryButtonText,\n      secondaryButtonText,\n      type = 'info',\n      className = '',\n    }: ControlPanelAlertProps,\n    ref: RefObject<HTMLDivElement>,\n  ) => (\n    <AlertContainer className={`alert-type-${type} ${className}`} ref={ref}>\n      <Title>{title}</Title>\n      <p>{bodyText}</p>\n      {primaryButtonText && primaryButtonAction && (\n        <ButtonContainer>\n          {secondaryButtonAction && secondaryButtonText && (\n            <Button\n              buttonStyle=\"link\"\n              buttonSize=\"small\"\n              onClick={secondaryButtonAction}\n            >\n              {secondaryButtonText}\n            </Button>\n          )}\n          <Button\n            buttonStyle={type in typeChart ? typeChart[type] : 'primary'}\n            buttonSize=\"small\"\n            onClick={primaryButtonAction}\n          >\n            {primaryButtonText}\n          </Button>\n        </ButtonContainer>\n      )}\n    </AlertContainer>\n  ),\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  DatasourceType,\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { buildV1ChartDataPayload } from 'src/explore/exploreUtils';\nimport { getChartRequiredFieldsMissingMessage } from 'src/utils/getChartRequiredFieldsMissingMessage';\nimport { DataTablesPane } from '../DataTablesPane';\nimport { ChartPills } from '../ChartPills';\nimport { ExploreAlert } from '../ExploreAlert';\nimport useResizeDetectorByObserver from './useResizeDetectorByObserver';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  dashboardId: PropTypes.number,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.bool,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  chartIsStale: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool,\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst INITIAL_SIZES = [100, 0];\nconst MIN_SIZES = [300, 65];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div {\n    height: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    display: ${({ showSplite }) => (showSplite ? 'block' : 'none')};\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst ExploreChartPanel = ({\n  chart,\n  slice,\n  vizType,\n  ownState,\n  triggerRender,\n  force,\n  datasource,\n  errorMessage,\n  form_data: formData,\n  onQuery,\n  actions,\n  timeout,\n  standalone,\n  chartIsStale,\n  chartAlert,\n}) => {\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const {\n    ref: chartPanelRef,\n    observerRef: resizeObserverRef,\n    width: chartPanelWidth,\n    height: chartPanelHeight,\n  } = useResizeDetectorByObserver();\n  const [splitSizes, setSplitSizes] = useState(\n    isFeatureEnabled(FeatureFlag.DATAPANEL_CLOSED_BY_DEFAULT)\n      ? INITIAL_SIZES\n      : getItem(LocalStorageKeys.chart_split_sizes, INITIAL_SIZES),\n  );\n  const [showSplite, setShowSplit] = useState(\n    isFeatureEnabled(FeatureFlag.DATAPANEL_CLOSED_BY_DEFAULT)\n      ? false\n      : getItem(LocalStorageKeys.is_datapanel_open, false),\n  );\n\n  const [showDatasetModal, setShowDatasetModal] = useState(false);\n\n  const metaDataRegistry = getChartMetadataRegistry();\n  const { useLegacyApi } = metaDataRegistry.get(vizType) ?? {};\n  const vizTypeNeedsDataset =\n    useLegacyApi && datasource.type !== DatasourceType.Table;\n  // added boolean column to below show boolean so that the errors aren't overlapping\n  const showAlertBanner =\n    !chartAlert &&\n    chartIsStale &&\n    !vizTypeNeedsDataset &&\n    chart.chartStatus !== 'failed' &&\n    ensureIsArray(chart.queriesResponse).length > 0;\n\n  const updateQueryContext = useCallback(\n    async function fetchChartData() {\n      if (slice && slice.query_context === null) {\n        const queryContext = buildV1ChartDataPayload({\n          formData: slice.form_data,\n          force,\n          resultFormat: 'json',\n          resultType: 'full',\n          setDataMask: null,\n          ownState: null,\n        });\n\n        await SupersetClient.put({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query_context: JSON.stringify(queryContext),\n            query_context_generation: true,\n          }),\n        });\n      }\n    },\n    [slice],\n  );\n\n  useEffect(() => {\n    updateQueryContext();\n  }, [updateQueryContext]);\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.chart_split_sizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = useCallback(sizes => {\n    setSplitSizes(sizes);\n  }, []);\n\n  const refreshCachedQuery = useCallback(() => {\n    actions.setForceQuery(true);\n    actions.postChartFormData(\n      formData,\n      true,\n      timeout,\n      chart.id,\n      undefined,\n      ownState,\n    );\n    actions.updateQueryFormData(formData, chart.id);\n  }, [actions, chart.id, formData, ownState, timeout]);\n\n  const onCollapseChange = useCallback(isOpen => {\n    let splitSizes;\n    if (!isOpen) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n        100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n        DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      ];\n    }\n    setSplitSizes(splitSizes);\n    setShowSplit(isOpen);\n  }, []);\n\n  const renderChart = useCallback(\n    () => (\n      <div\n        css={css`\n          min-height: 0;\n          flex: 1;\n          overflow: auto;\n        `}\n        ref={chartPanelRef}\n      >\n        {chartPanelWidth && chartPanelHeight && (\n          <ChartContainer\n            width={Math.floor(chartPanelWidth)}\n            height={chartPanelHeight}\n            ownState={ownState}\n            annotationData={chart.annotationData}\n            chartAlert={chart.chartAlert}\n            chartStackTrace={chart.chartStackTrace}\n            chartId={chart.id}\n            chartStatus={chart.chartStatus}\n            triggerRender={triggerRender}\n            force={force}\n            datasource={datasource}\n            errorMessage={errorMessage}\n            formData={formData}\n            latestQueryFormData={chart.latestQueryFormData}\n            onQuery={onQuery}\n            queriesResponse={chart.queriesResponse}\n            chartIsStale={chartIsStale}\n            setControlValue={actions.setControlValue}\n            timeout={timeout}\n            triggerQuery={chart.triggerQuery}\n            vizType={vizType}\n          />\n        )}\n      </div>\n    ),\n    [\n      actions.setControlValue,\n      chart.annotationData,\n      chart.chartAlert,\n      chart.chartStackTrace,\n      chart.chartStatus,\n      chart.id,\n      chart.latestQueryFormData,\n      chart.queriesResponse,\n      chart.triggerQuery,\n      chartIsStale,\n      chartPanelHeight,\n      chartPanelRef,\n      chartPanelWidth,\n      datasource,\n      errorMessage,\n      force,\n      formData,\n      onQuery,\n      ownState,\n      timeout,\n      triggerRender,\n      vizType,\n    ],\n  );\n\n  const panelBody = useMemo(\n    () => (\n      <div\n        className=\"panel-body\"\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n        ref={resizeObserverRef}\n      >\n        {vizTypeNeedsDataset && (\n          <Alert\n            message={t('Chart type requires a dataset')}\n            type=\"error\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n            description={\n              <>\n                {t(\n                  'This chart type is not supported when using an unsaved query as a chart source. ',\n                )}\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => setShowDatasetModal(true)}\n                  css={{ textDecoration: 'underline' }}\n                >\n                  {t('Create a dataset')}\n                </span>\n                {t(' to visualize your data.')}\n              </>\n            }\n          />\n        )}\n        {showAlertBanner && (\n          <ExploreAlert\n            title={\n              errorMessage\n                ? t('Required control values have been removed')\n                : t('Your chart is not up to date')\n            }\n            bodyText={\n              errorMessage ? (\n                getChartRequiredFieldsMissingMessage(false)\n              ) : (\n                <span>\n                  {t(\n                    'You updated the values in the control panel, but the chart was not updated automatically. Run the query by clicking on the \"Update chart\" button or',\n                  )}{' '}\n                  <span role=\"button\" tabIndex={0} onClick={onQuery}>\n                    {t('click here')}\n                  </span>\n                  .\n                </span>\n              )\n            }\n            type=\"warning\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n          />\n        )}\n        <ChartPills\n          queriesResponse={chart.queriesResponse}\n          chartStatus={chart.chartStatus}\n          chartUpdateStartTime={chart.chartUpdateStartTime}\n          chartUpdateEndTime={chart.chartUpdateEndTime}\n          refreshCachedQuery={refreshCachedQuery}\n          rowLimit={formData?.row_limit}\n        />\n        {renderChart()}\n      </div>\n    ),\n    [\n      resizeObserverRef,\n      showAlertBanner,\n      errorMessage,\n      onQuery,\n      chart.queriesResponse,\n      chart.chartStatus,\n      chart.chartUpdateStartTime,\n      chart.chartUpdateEndTime,\n      refreshCachedQuery,\n      formData?.row_limit,\n      renderChart,\n    ],\n  );\n\n  const standaloneChartBody = useMemo(() => renderChart(), [renderChart]);\n\n  const [queryFormData, setQueryFormData] = useState(chart.latestQueryFormData);\n\n  useEffect(() => {\n    // only update when `latestQueryFormData` changes AND `triggerRender`\n    // is false. No update should be done when only `triggerRender` changes,\n    // as this can trigger a query downstream based on incomplete form data.\n    // (`latestQueryFormData` is only updated when a a valid request has been\n    // triggered).\n    if (!triggerRender) {\n      setQueryFormData(chart.latestQueryFormData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart.latestQueryFormData]);\n\n  const elementStyle = useCallback(\n    (dimension, elementSize, gutterSize) => ({\n      [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`,\n    }),\n    [gutterMargin],\n  );\n\n  if (standalone) {\n    // dom manipulation hack to get rid of the bootstrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return (\n      <div id=\"app\" data-test=\"standalone-app\" ref={resizeObserverRef}>\n        {standaloneChartBody}\n      </div>\n    );\n  }\n\n  return (\n    <Styles\n      className=\"panel panel-default chart-container\"\n      showSplite={showSplite}\n    >\n      {vizType === 'filter_box' ? (\n        panelBody\n      ) : (\n        <Split\n          sizes={splitSizes}\n          minSize={MIN_SIZES}\n          direction=\"vertical\"\n          gutterSize={gutterHeight}\n          onDragEnd={onDragEnd}\n          elementStyle={elementStyle}\n          expandToMin\n        >\n          {panelBody}\n          <DataTablesPane\n            ownState={ownState}\n            queryFormData={queryFormData}\n            datasource={datasource}\n            queryForce={force}\n            onCollapseChange={onCollapseChange}\n            chartStatus={chart.chartStatus}\n            errorMessage={errorMessage}\n            actions={actions}\n          />\n        </Split>\n      )}\n      {showDatasetModal && (\n        <SaveDatasetModal\n          visible={showDatasetModal}\n          onHide={() => setShowDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n    </Styles>\n  );\n};\n\nExploreChartPanel.propTypes = propTypes;\n\nexport default ExploreChartPanel;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useCallback, useRef } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\n\nexport default function useResizeDetectorByObserver() {\n  const ref = useRef<HTMLDivElement>();\n  const [{ width, height }, setChartPanelSize] = useState<{\n    width?: number;\n    height?: number;\n  }>({});\n  const onResize = useCallback(() => {\n    if (ref.current) {\n      const { width, height } = ref.current.getBoundingClientRect?.() || {};\n      setChartPanelSize({ width, height });\n    }\n  }, []);\n  const { ref: observerRef } = useResizeDetector({\n    refreshMode: 'debounce',\n    refreshRate: 300,\n    onResize,\n  });\n\n  return {\n    ref,\n    observerRef,\n    width,\n    height,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { ReactNode } from 'react';\nimport { t } from '@superset-ui/core';\nimport Button from 'src/components/Button';\n\nexport type RunQueryButtonProps = {\n  loading: boolean;\n  onQuery: () => void;\n  onStop: () => void;\n  errorMessage: ReactNode;\n  isNewChart: boolean;\n  canStopQuery: boolean;\n  chartIsStale: boolean;\n};\n\nexport const RunQueryButton = ({\n  loading,\n  onQuery,\n  onStop,\n  errorMessage,\n  isNewChart,\n  canStopQuery,\n  chartIsStale,\n}: RunQueryButtonProps) =>\n  loading ? (\n    <Button onClick={onStop} buttonStyle=\"warning\" disabled={!canStopQuery}>\n      <i className=\"fa fa-stop\" /> {t('Stop')}\n    </Button>\n  ) : (\n    <Button\n      onClick={onQuery}\n      buttonStyle={chartIsStale ? 'primary' : 'secondary'}\n      disabled={!!errorMessage}\n      data-test=\"run-query-button\"\n    >\n      {isNewChart ? t('Create chart') : t('Update chart')}\n    </Button>\n  );\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, {\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  ensureIsArray,\n  t,\n  styled,\n  getChartControlPanelRegistry,\n  QueryFormData,\n  DatasourceType,\n  css,\n  SupersetTheme,\n  useTheme,\n  isDefined,\n  JsonValue,\n  NO_TIME_RANGE,\n  usePrevious,\n} from '@superset-ui/core';\nimport {\n  ControlPanelSectionConfig,\n  ControlState,\n  CustomControlItem,\n  Dataset,\n  ExpandedControlItem,\n  isTemporalColumn,\n  sections,\n} from '@superset-ui/chart-controls';\nimport { useSelector } from 'react-redux';\nimport { rgba } from 'emotion-rgba';\nimport { kebabCase } from 'lodash';\n\nimport Collapse from 'src/components/Collapse';\nimport Tabs from 'src/components/Tabs';\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport Modal from 'src/components/Modal';\n\nimport { getSectionsToRender } from 'src/explore/controlUtils';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport { ChartState, ExplorePageState } from 'src/explore/types';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport { ExploreAlert } from './ExploreAlert';\nimport { RunQueryButton } from './RunQueryButton';\nimport { Operators } from '../constants';\nimport { CLAUSES } from './controls/FilterControl/types';\n\nconst { confirm } = Modal;\n\nexport type ControlPanelsContainerProps = {\n  exploreState: ExplorePageState['explore'];\n  actions: ExploreActions;\n  datasource_type: DatasourceType;\n  chart: ChartState;\n  controls: Record<string, ControlState>;\n  form_data: QueryFormData;\n  isDatasourceMetaLoading: boolean;\n  errorMessage: ReactNode;\n  onQuery: () => void;\n  onStop: () => void;\n  canStopQuery: boolean;\n  chartIsStale: boolean;\n};\n\nexport type ExpandedControlPanelSectionConfig = Omit<\n  ControlPanelSectionConfig,\n  'controlSetRows'\n> & {\n  controlSetRows: ExpandedControlItem[][];\n};\n\nconst iconStyles = css`\n  &.anticon {\n    font-size: unset;\n    .anticon {\n      line-height: unset;\n      vertical-align: unset;\n    }\n  }\n`;\n\nconst actionButtonsContainerStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  position: sticky;\n  bottom: 0;\n  flex-direction: column;\n  align-items: center;\n  padding: ${theme.gridUnit * 4}px;\n  z-index: 999;\n  background: linear-gradient(\n    ${rgba(theme.colors.grayscale.light5, 0)},\n    ${theme.colors.grayscale.light5} ${theme.opacity.mediumLight}\n  );\n\n  & > button {\n    min-width: 156px;\n  }\n`;\n\nconst Styles = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n\n  // Resizable add overflow-y: auto as a style to this div\n  // To override it, we need to use !important\n  overflow: visible !important;\n  #controlSections {\n    height: 100%;\n    overflow: visible;\n  }\n  .nav-tabs {\n    flex: 0 0 1;\n  }\n  .tab-content {\n    overflow: auto;\n    flex: 1 1 100%;\n  }\n  .Select__menu {\n    max-width: 100%;\n  }\n  .type-label {\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    width: ${({ theme }) => theme.gridUnit * 7}px;\n    display: inline-block;\n    text-align: center;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n`;\n\nconst ControlPanelsTabs = styled(Tabs)`\n  ${({ theme, fullWidth }) => css`\n    height: 100%;\n    overflow: visible;\n    .ant-tabs-nav {\n      margin-bottom: 0;\n    }\n    .ant-tabs-nav-list {\n      width: ${fullWidth ? '100%' : '50%'};\n    }\n    .ant-tabs-tabpane {\n      height: 100%;\n    }\n    .ant-tabs-content-holder {\n      padding-top: ${theme.gridUnit * 4}px;\n    }\n\n    .ant-collapse-ghost > .ant-collapse-item {\n      &:not(:last-child) {\n        border-bottom: 1px solid ${theme.colors.grayscale.light3};\n      }\n\n      & > .ant-collapse-header {\n        font-size: ${theme.typography.sizes.s}px;\n      }\n\n      & > .ant-collapse-content > .ant-collapse-content-box {\n        padding-bottom: 0;\n        font-size: ${theme.typography.sizes.s}px;\n      }\n    }\n  `}\n`;\n\nconst isTimeSection = (section: ControlPanelSectionConfig): boolean =>\n  !!section.label &&\n  (sections.legacyRegularTime.label === section.label ||\n    sections.legacyTimeseriesTime.label === section.label);\n\nconst hasTimeColumn = (datasource: Dataset): boolean =>\n  datasource?.columns?.some(c => c.is_dttm);\nconst sectionsToExpand = (\n  sections: ControlPanelSectionConfig[],\n  datasource: Dataset,\n): string[] =>\n  // avoid expanding time section if datasource doesn't include time column\n  sections.reduce(\n    (acc, section) =>\n      (section.expanded || !section.label) &&\n      (!isTimeSection(section) || hasTimeColumn(datasource))\n        ? [...acc, String(section.label)]\n        : acc,\n    [] as string[],\n  );\n\nfunction getState(\n  vizType: string,\n  datasource: Dataset,\n  datasourceType: DatasourceType,\n) {\n  const querySections: ControlPanelSectionConfig[] = [];\n  const customizeSections: ControlPanelSectionConfig[] = [];\n\n  getSectionsToRender(vizType, datasourceType).forEach(section => {\n    // if at least one control in the section is not `renderTrigger`\n    // or asks to be displayed at the Data tab\n    if (\n      section.tabOverride === 'data' ||\n      section.controlSetRows.some(rows =>\n        rows.some(\n          control =>\n            control &&\n            typeof control === 'object' &&\n            'config' in control &&\n            control.config &&\n            (!control.config.renderTrigger ||\n              control.config.tabOverride === 'data'),\n        ),\n      )\n    ) {\n      querySections.push(section);\n    } else if (section.controlSetRows.length > 0) {\n      customizeSections.push(section);\n    }\n  });\n  const expandedQuerySections: string[] = sectionsToExpand(\n    querySections,\n    datasource,\n  );\n  const expandedCustomizeSections: string[] = sectionsToExpand(\n    customizeSections,\n    datasource,\n  );\n  return {\n    expandedQuerySections,\n    expandedCustomizeSections,\n    querySections,\n    customizeSections,\n  };\n}\n\nfunction useResetOnChangeRef(initialValue: () => any, resetOnChangeValue: any) {\n  const value = useRef(initialValue());\n  const prevResetOnChangeValue = useRef(resetOnChangeValue);\n  if (prevResetOnChangeValue.current !== resetOnChangeValue) {\n    value.current = initialValue();\n    prevResetOnChangeValue.current = resetOnChangeValue;\n  }\n\n  return value;\n}\n\nexport const ControlPanelsContainer = (props: ControlPanelsContainerProps) => {\n  const { colors } = useTheme();\n  const pluginContext = useContext(PluginContext);\n\n  const prevState = usePrevious(props.exploreState);\n  const prevDatasource = usePrevious(props.exploreState.datasource);\n  const prevChartStatus = usePrevious(props.chart.chartStatus);\n\n  const [showDatasourceAlert, setShowDatasourceAlert] = useState(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const controlsTransferred = useSelector<\n    ExplorePageState,\n    string[] | undefined\n  >(state => state.explore.controlsTransferred);\n\n  const defaultTimeFilter = useSelector<ExplorePageState>(\n    state => state.common?.conf?.DEFAULT_TIME_FILTER,\n  );\n\n  const { form_data, actions } = props;\n  const { setControlValue } = actions;\n  const { x_axis, adhoc_filters } = form_data;\n\n  const previousXAxis = usePrevious(x_axis);\n\n  useEffect(() => {\n    if (\n      x_axis &&\n      x_axis !== previousXAxis &&\n      isTemporalColumn(x_axis, props.exploreState.datasource)\n    ) {\n      const noFilter = !adhoc_filters?.find(\n        filter =>\n          filter.expressionType === 'SIMPLE' &&\n          filter.operator === Operators.TEMPORAL_RANGE &&\n          filter.subject === x_axis,\n      );\n      if (noFilter) {\n        confirm({\n          title: t('The X-axis is not on the filters list'),\n          content:\n            t(`The X-axis is not on the filters list which will prevent it from being used in\n            time range filters in dashboards. Would you like to add it to the filters list?`),\n          onOk: () => {\n            setControlValue('adhoc_filters', [\n              ...(adhoc_filters || []),\n              {\n                clause: CLAUSES.WHERE,\n                subject: x_axis,\n                operator: Operators.TEMPORAL_RANGE,\n                comparator: defaultTimeFilter || NO_TIME_RANGE,\n                expressionType: 'SIMPLE',\n              },\n            ]);\n          },\n        });\n      }\n    }\n  }, [\n    x_axis,\n    adhoc_filters,\n    setControlValue,\n    defaultTimeFilter,\n    previousXAxis,\n    props.exploreState.datasource,\n  ]);\n\n  useEffect(() => {\n    let shouldUpdateControls = false;\n    const removeDatasourceWarningFromControl = (\n      value: JsonValue | undefined,\n    ) => {\n      if (\n        typeof value === 'object' &&\n        isDefined(value) &&\n        'datasourceWarning' in value &&\n        value.datasourceWarning === true\n      ) {\n        shouldUpdateControls = true;\n        return { ...value, datasourceWarning: false };\n      }\n      return value;\n    };\n    if (\n      props.chart.chartStatus === 'success' &&\n      prevChartStatus !== 'success'\n    ) {\n      controlsTransferred?.forEach(controlName => {\n        shouldUpdateControls = false;\n        if (!isDefined(props.controls[controlName])) {\n          return;\n        }\n        const alteredControls = Array.isArray(props.controls[controlName].value)\n          ? ensureIsArray(props.controls[controlName].value)?.map(\n              removeDatasourceWarningFromControl,\n            )\n          : removeDatasourceWarningFromControl(\n              props.controls[controlName].value,\n            );\n        if (shouldUpdateControls) {\n          props.actions.setControlValue(controlName, alteredControls);\n        }\n      });\n    }\n  }, [\n    controlsTransferred,\n    prevChartStatus,\n    props.actions,\n    props.chart.chartStatus,\n    props.controls,\n  ]);\n\n  useEffect(() => {\n    if (\n      prevDatasource &&\n      prevDatasource.type !== DatasourceType.Query &&\n      (props.exploreState.datasource?.id !== prevDatasource.id ||\n        props.exploreState.datasource?.type !== prevDatasource.type)\n    ) {\n      setShowDatasourceAlert(true);\n      containerRef.current?.scrollTo(0, 0);\n    }\n  }, [\n    props.exploreState.datasource?.id,\n    props.exploreState.datasource?.type,\n    prevDatasource,\n  ]);\n\n  const {\n    expandedQuerySections,\n    expandedCustomizeSections,\n    querySections,\n    customizeSections,\n  } = useMemo(\n    () =>\n      getState(\n        form_data.viz_type,\n        props.exploreState.datasource,\n        props.datasource_type,\n      ),\n    [props.exploreState.datasource, form_data.viz_type, props.datasource_type],\n  );\n\n  const resetTransferredControls = useCallback(() => {\n    ensureIsArray(props.exploreState.controlsTransferred).forEach(controlName =>\n      props.actions.setControlValue(\n        controlName,\n        props.controls[controlName].default,\n      ),\n    );\n  }, [props.actions, props.exploreState.controlsTransferred, props.controls]);\n\n  const handleClearFormClick = useCallback(() => {\n    resetTransferredControls();\n    setShowDatasourceAlert(false);\n  }, [resetTransferredControls]);\n\n  const handleContinueClick = useCallback(() => {\n    setShowDatasourceAlert(false);\n  }, []);\n\n  const shouldRecalculateControlState = ({\n    name,\n    config,\n  }: CustomControlItem): boolean => {\n    const { controls, chart, exploreState } = props;\n\n    return Boolean(\n      config.shouldMapStateToProps?.(\n        prevState || exploreState,\n        exploreState,\n        controls[name],\n        chart,\n      ),\n    );\n  };\n\n  const renderControl = ({ name, config }: CustomControlItem) => {\n    const { controls, chart, exploreState } = props;\n    const { visibility } = config;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = {\n      ...config,\n      ...controls[name],\n      ...(shouldRecalculateControlState({ name, config })\n        ? config?.mapStateToProps?.(exploreState, controls[name], chart)\n        : // for other controls, `mapStateToProps` is already run in\n          // controlUtils/getControlState.ts\n          undefined),\n      name,\n    };\n    const {\n      validationErrors,\n      label: baseLabel,\n      description: baseDescription,\n      ...restProps\n    } = controlData as ControlState & {\n      validationErrors?: any[];\n    };\n\n    const isVisible = visibility\n      ? visibility.call(config, props, controlData)\n      : undefined;\n\n    const label =\n      typeof baseLabel === 'function'\n        ? baseLabel(exploreState, controls[name], chart)\n        : baseLabel;\n\n    const description =\n      typeof baseDescription === 'function'\n        ? baseDescription(exploreState, controls[name], chart)\n        : baseDescription;\n\n    if (name === 'adhoc_filters') {\n      restProps.canDelete = (\n        valueToBeDeleted: Record<string, any>,\n        values: Record<string, any>[],\n      ) => {\n        const isTemporalRange = (filter: Record<string, any>) =>\n          filter.operator === Operators.TEMPORAL_RANGE;\n        if (!controls?.time_range?.value && isTemporalRange(valueToBeDeleted)) {\n          const count = values.filter(isTemporalRange).length;\n          if (count === 1) {\n            return t(\n              `You cannot delete the last temporal filter as it's used for time range filters in dashboards.`,\n            );\n          }\n        }\n        return true;\n      };\n    }\n\n    return (\n      <Control\n        key={`control-${name}`}\n        name={name}\n        label={label}\n        description={description}\n        validationErrors={validationErrors}\n        actions={props.actions}\n        isVisible={isVisible}\n        {...restProps}\n      />\n    );\n  };\n\n  const sectionHasHadNoErrors = useResetOnChangeRef(\n    () => ({}),\n    form_data.viz_type,\n  );\n\n  const renderControlPanelSection = (\n    section: ExpandedControlPanelSectionConfig,\n  ) => {\n    const { controls } = props;\n    const { label, description } = section;\n\n    // Section label can be a ReactNode but in some places we want to\n    // have a string ID. Using forced type conversion for now,\n    // should probably add a `id` field to sections in the future.\n    const sectionId = String(label);\n\n    const hasErrors = section.controlSetRows.some(rows =>\n      rows.some(item => {\n        const controlName =\n          typeof item === 'string'\n            ? item\n            : item && 'name' in item\n            ? item.name\n            : null;\n        return (\n          controlName &&\n          controlName in controls &&\n          controls[controlName].validationErrors &&\n          controls[controlName].validationErrors.length > 0\n        );\n      }),\n    );\n\n    if (!hasErrors) {\n      sectionHasHadNoErrors.current[sectionId] = true;\n    }\n\n    const errorColor = sectionHasHadNoErrors.current[sectionId]\n      ? colors.error.base\n      : colors.alert.base;\n\n    const PanelHeader = () => (\n      <span data-test=\"collapsible-control-panel-header\">\n        <span\n          css={(theme: SupersetTheme) => css`\n            font-size: ${theme.typography.sizes.m}px;\n            line-height: 1.3;\n          `}\n        >\n          {label}\n        </span>{' '}\n        {description && (\n          <Tooltip id={sectionId} title={description}>\n            <Icons.InfoCircleOutlined css={iconStyles} />\n          </Tooltip>\n        )}\n        {hasErrors && (\n          <Tooltip\n            id={`${kebabCase('validation-errors')}-tooltip`}\n            title={t('This section contains validation errors')}\n          >\n            <Icons.InfoCircleOutlined\n              css={css`\n                ${iconStyles};\n                color: ${errorColor};\n              `}\n            />\n          </Tooltip>\n        )}\n      </span>\n    );\n\n    return (\n      <Collapse.Panel\n        css={theme => css`\n          margin-bottom: 0;\n          box-shadow: none;\n\n          &:last-child {\n            padding-bottom: ${theme.gridUnit * 16}px;\n            border-bottom: 0;\n          }\n\n          .panel-body {\n            margin-left: ${theme.gridUnit * 4}px;\n            padding-bottom: 0;\n          }\n\n          span.label {\n            display: inline-block;\n          }\n          ${!section.label &&\n          `\n            .ant-collapse-header {\n              display: none;\n            }\n          `}\n        `}\n        header={<PanelHeader />}\n        key={sectionId}\n      >\n        {section.controlSetRows.map((controlSets, i) => {\n          const renderedControls = controlSets\n            .map(controlItem => {\n              if (!controlItem) {\n                // When the item is invalid\n                return null;\n              }\n              if (React.isValidElement(controlItem)) {\n                // When the item is a React element\n                return controlItem;\n              }\n              if (\n                controlItem.name &&\n                controlItem.config &&\n                controlItem.name !== 'datasource'\n              ) {\n                return renderControl(controlItem);\n              }\n              return null;\n            })\n            .filter(x => x !== null);\n          // don't show the row if it is empty\n          if (renderedControls.length === 0) {\n            return null;\n          }\n          return (\n            <ControlRow\n              key={`controlsetrow-${i}`}\n              controls={renderedControls}\n            />\n          );\n        })}\n      </Collapse.Panel>\n    );\n  };\n\n  const hasControlsTransferred =\n    ensureIsArray(props.exploreState.controlsTransferred).length > 0;\n\n  const DatasourceAlert = useCallback(\n    () =>\n      hasControlsTransferred ? (\n        <ExploreAlert\n          title={t('Keep control settings?')}\n          bodyText={t(\n            \"You've changed datasets. Any controls with data (columns, metrics) that match this new dataset have been retained.\",\n          )}\n          primaryButtonAction={handleContinueClick}\n          secondaryButtonAction={handleClearFormClick}\n          primaryButtonText={t('Continue')}\n          secondaryButtonText={t('Clear form')}\n          type=\"info\"\n        />\n      ) : (\n        <ExploreAlert\n          title={t('No form settings were maintained')}\n          bodyText={t(\n            'We were unable to carry over any controls when switching to this new dataset.',\n          )}\n          primaryButtonAction={handleContinueClick}\n          primaryButtonText={t('Continue')}\n          type=\"warning\"\n        />\n      ),\n    [handleClearFormClick, handleContinueClick, hasControlsTransferred],\n  );\n\n  const dataTabHasHadNoErrors = useResetOnChangeRef(\n    () => false,\n    form_data.viz_type,\n  );\n\n  const dataTabTitle = useMemo(() => {\n    if (!props.errorMessage) {\n      dataTabHasHadNoErrors.current = true;\n    }\n\n    const errorColor = dataTabHasHadNoErrors.current\n      ? colors.error.base\n      : colors.alert.base;\n\n    return (\n      <>\n        <span>{t('Data')}</span>\n        {props.errorMessage && (\n          <span\n            css={(theme: SupersetTheme) => css`\n              margin-left: ${theme.gridUnit * 2}px;\n            `}\n          >\n            {' '}\n            <Tooltip\n              id=\"query-error-tooltip\"\n              placement=\"right\"\n              title={props.errorMessage}\n            >\n              <Icons.ExclamationCircleOutlined\n                css={css`\n                  ${iconStyles};\n                  color: ${errorColor};\n                `}\n              />\n            </Tooltip>\n          </span>\n        )}\n      </>\n    );\n  }, [\n    colors.error.base,\n    colors.alert.base,\n    dataTabHasHadNoErrors,\n    props.errorMessage,\n  ]);\n\n  const controlPanelRegistry = getChartControlPanelRegistry();\n  if (!controlPanelRegistry.has(form_data.viz_type) && pluginContext.loading) {\n    return <Loading />;\n  }\n\n  const showCustomizeTab = customizeSections.length > 0;\n\n  return (\n    <Styles ref={containerRef}>\n      <ControlPanelsTabs\n        id=\"controlSections\"\n        data-test=\"control-tabs\"\n        fullWidth={showCustomizeTab}\n        allowOverflow={false}\n      >\n        <Tabs.TabPane key=\"query\" tab={dataTabTitle}>\n          <Collapse\n            defaultActiveKey={expandedQuerySections}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            {showDatasourceAlert && <DatasourceAlert />}\n            {querySections.map(renderControlPanelSection)}\n          </Collapse>\n        </Tabs.TabPane>\n        {showCustomizeTab && (\n          <Tabs.TabPane key=\"display\" tab={t('Customize')}>\n            <Collapse\n              defaultActiveKey={expandedCustomizeSections}\n              expandIconPosition=\"right\"\n              ghost\n            >\n              {customizeSections.map(renderControlPanelSection)}\n            </Collapse>\n          </Tabs.TabPane>\n        )}\n      </ControlPanelsTabs>\n      <div css={actionButtonsContainerStyles}>\n        <RunQueryButton\n          onQuery={props.onQuery}\n          onStop={props.onStop}\n          errorMessage={props.errorMessage}\n          loading={props.chart.chartStatus === 'loading'}\n          isNewChart={!props.chart.queriesResponse}\n          canStopQuery={props.canStopQuery}\n          chartIsStale={props.chartIsStale}\n        />\n      </div>\n    </Styles>\n  );\n};\n\nexport default ControlPanelsContainer;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport { Dispatch } from 'redux';\nimport rison from 'rison';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport {\n  css,\n  DatasourceType,\n  isFeatureEnabled,\n  FeatureFlag,\n  isDefined,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Form, FormItem } from 'src/components/Form';\nimport Alert from 'src/components/Alert';\nimport Modal from 'src/components/Modal';\nimport { Radio } from 'src/components/Radio';\nimport Button from 'src/components/Button';\nimport { AsyncSelect } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport { canUserEditDashboard } from 'src/dashboard/util/permissionUtils';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\nimport { SaveActionType } from 'src/explore/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { Dashboard } from 'src/types/Dashboard';\n\n// Session storage key for recent dashboard\nconst SK_DASHBOARD_ID = 'save_chart_recent_dashboard';\n\ninterface SaveModalProps extends RouteComponentProps {\n  addDangerToast: (msg: string) => void;\n  actions: Record<string, any>;\n  form_data?: Record<string, any>;\n  user: UserWithPermissionsAndRoles;\n  alert?: string;\n  sliceName?: string;\n  slice?: Record<string, any>;\n  datasource?: Record<string, any>;\n  dashboardId: '' | number | null;\n  isVisible: boolean;\n  dispatch: Dispatch;\n}\n\ntype SaveModalState = {\n  newSliceName?: string;\n  datasetName: string;\n  action: SaveActionType;\n  isLoading: boolean;\n  saveStatus?: string | null;\n  vizType?: string;\n  dashboard?: { label: string; value: string | number };\n};\n\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    overflow: visible;\n  }\n  i {\n    position: absolute;\n    top: -${({ theme }) => theme.gridUnit * 5.25}px;\n    left: ${({ theme }) => theme.gridUnit * 26.75}px;\n  }\n`;\n\nclass SaveModal extends React.Component<SaveModalProps, SaveModalState> {\n  constructor(props: SaveModalProps) {\n    super(props);\n    this.state = {\n      newSliceName: props.sliceName,\n      datasetName: props.datasource?.name,\n      action: this.canOverwriteSlice() ? 'overwrite' : 'saveas',\n      isLoading: false,\n      vizType: props.form_data?.viz_type,\n      dashboard: undefined,\n    };\n    this.onDashboardChange = this.onDashboardChange.bind(this);\n    this.onSliceNameChange = this.onSliceNameChange.bind(this);\n    this.changeAction = this.changeAction.bind(this);\n    this.saveOrOverwrite = this.saveOrOverwrite.bind(this);\n    this.isNewDashboard = this.isNewDashboard.bind(this);\n    this.onHide = this.onHide.bind(this);\n  }\n\n  isNewDashboard(): boolean {\n    const { dashboard } = this.state;\n    return typeof dashboard?.value === 'string';\n  }\n\n  canOverwriteSlice(): boolean {\n    return (\n      this.props.slice?.owners?.includes(this.props.user.userId) &&\n      !this.props.slice?.is_managed_externally\n    );\n  }\n\n  async componentDidMount() {\n    let { dashboardId } = this.props;\n    if (!dashboardId) {\n      let lastDashboard = null;\n      try {\n        lastDashboard = sessionStorage.getItem(SK_DASHBOARD_ID);\n      } catch (error) {\n        // continue regardless of error\n      }\n      dashboardId = lastDashboard && parseInt(lastDashboard, 10);\n    }\n    if (dashboardId) {\n      try {\n        const result = (await this.loadDashboard(dashboardId)) as Dashboard;\n        if (canUserEditDashboard(result, this.props.user)) {\n          this.setState({\n            dashboard: { label: result.dashboard_title, value: result.id },\n          });\n        }\n      } catch (error) {\n        this.props.actions.addDangerToast(\n          t('An error occurred while loading dashboard information.'),\n        );\n      }\n    }\n  }\n\n  handleDatasetNameChange = (e: React.FormEvent<HTMLInputElement>) => {\n    // @ts-expect-error\n    this.setState({ datasetName: e.target.value });\n  };\n\n  onSliceNameChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ newSliceName: event.target.value });\n  }\n\n  onDashboardChange(dashboard: { label: string; value: string | number }) {\n    this.setState({ dashboard });\n  }\n\n  changeAction(action: SaveActionType) {\n    this.setState({ action });\n  }\n\n  onHide() {\n    this.props.dispatch(setSaveChartModalVisibility(false));\n  }\n\n  handleRedirect = (windowLocationSearch: string, chart: any) => {\n    const searchParams = new URLSearchParams(windowLocationSearch);\n    searchParams.set('save_action', this.state.action);\n    if (this.state.action !== 'overwrite') {\n      searchParams.delete('form_data_key');\n    }\n\n    searchParams.set('slice_id', chart.id.toString());\n    return searchParams;\n  };\n\n  async saveOrOverwrite(gotodash: boolean) {\n    this.setState({ isLoading: true });\n\n    //  Create or retrieve dashboard\n    type DashboardGetResponse = {\n      id: number;\n      url: string;\n      dashboard_title: string;\n    };\n\n    try {\n      if (this.props.datasource?.type === DatasourceType.Query) {\n        const { schema, sql, database } = this.props.datasource;\n        const { templateParams } = this.props.datasource;\n\n        await this.props.actions.saveDataset({\n          schema,\n          sql,\n          database,\n          templateParams,\n          datasourceName: this.state.datasetName,\n        });\n      }\n\n      //  Get chart dashboards\n      let sliceDashboards: number[] = [];\n      if (this.props.slice && this.state.action === 'overwrite') {\n        sliceDashboards = await this.props.actions.getSliceDashboards(\n          this.props.slice,\n        );\n      }\n\n      const formData = this.props.form_data || {};\n      delete formData.url_params;\n\n      let dashboard: DashboardGetResponse | null = null;\n      if (this.state.dashboard) {\n        let validId = this.state.dashboard.value;\n        if (this.isNewDashboard()) {\n          const response = await this.props.actions.createDashboard(\n            this.state.dashboard.label,\n          );\n          validId = response.id;\n        }\n\n        try {\n          dashboard = await this.loadDashboard(validId as number);\n        } catch (error) {\n          this.props.actions.saveSliceFailed();\n          return;\n        }\n\n        if (isDefined(dashboard) && isDefined(dashboard?.id)) {\n          sliceDashboards = sliceDashboards.includes(dashboard.id)\n            ? sliceDashboards\n            : [...sliceDashboards, dashboard.id];\n          formData.dashboards = sliceDashboards;\n        }\n      }\n\n      // Sets the form data\n      this.props.actions.setFormData({ ...formData });\n\n      //  Update or create slice\n      let value: { id: number };\n      if (this.state.action === 'overwrite') {\n        value = await this.props.actions.updateSlice(\n          this.props.slice,\n          this.state.newSliceName,\n          sliceDashboards,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: this.isNewDashboard(),\n              }\n            : null,\n        );\n      } else {\n        value = await this.props.actions.createSlice(\n          this.state.newSliceName,\n          sliceDashboards,\n          dashboard\n            ? {\n                title: dashboard.dashboard_title,\n                new: this.isNewDashboard(),\n              }\n            : null,\n        );\n      }\n\n      try {\n        if (dashboard) {\n          sessionStorage.setItem(SK_DASHBOARD_ID, `${dashboard.id}`);\n        } else {\n          sessionStorage.removeItem(SK_DASHBOARD_ID);\n        }\n      } catch (error) {\n        // continue regardless of error\n      }\n\n      // Go to new dashboard url\n      if (gotodash && dashboard) {\n        this.props.history.push(dashboard.url);\n        return;\n      }\n\n      const searchParams = this.handleRedirect(window.location.search, value);\n      this.props.history.replace(`/explore/?${searchParams.toString()}`);\n\n      this.setState({ isLoading: false });\n      this.onHide();\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  loadDashboard = async (id: number) => {\n    const response = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/${id}`,\n    });\n    return response.json.result;\n  };\n\n  loadDashboards = async (search: string, page: number, pageSize: number) => {\n    const queryParams = rison.encode({\n      columns: ['id', 'dashboard_title'],\n      filters: [\n        {\n          col: 'dashboard_title',\n          opr: 'ct',\n          value: search,\n        },\n        {\n          col: 'owners',\n          opr: 'rel_m_m',\n          value: this.props.user.userId,\n        },\n      ],\n      page,\n      page_size: pageSize,\n      order_column: 'dashboard_title',\n    });\n\n    const { json } = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    });\n    const { result, count } = json;\n    return {\n      data: result.map(\n        (dashboard: { id: number; dashboard_title: string }) => ({\n          value: dashboard.id,\n          label: dashboard.dashboard_title,\n        }),\n      ),\n      totalCount: count,\n    };\n  };\n\n  renderSaveChartModal = () => {\n    const info = this.info();\n    return (\n      <Form data-test=\"save-modal-body\" layout=\"vertical\">\n        <FormItem data-test=\"radio-group\">\n          <Radio\n            id=\"overwrite-radio\"\n            disabled={!this.canOverwriteSlice()}\n            checked={this.state.action === 'overwrite'}\n            onChange={() => this.changeAction('overwrite')}\n            data-test=\"save-overwrite-radio\"\n          >\n            {t('Save (Overwrite)')}\n          </Radio>\n          <Radio\n            id=\"saveas-radio\"\n            data-test=\"saveas-radio\"\n            checked={this.state.action === 'saveas'}\n            onChange={() => this.changeAction('saveas')}\n          >\n            {t('Save as...')}\n          </Radio>\n        </FormItem>\n        <hr />\n        <FormItem label={t('Chart name')} required>\n          <Input\n            name=\"new_slice_name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            value={this.state.newSliceName}\n            onChange={this.onSliceNameChange}\n            data-test=\"new-chart-name\"\n          />\n        </FormItem>\n        {this.props.datasource?.type === 'query' && (\n          <FormItem label={t('Dataset Name')} required>\n            <InfoTooltipWithTrigger\n              tooltip={t('A reusable dataset will be saved with your chart.')}\n              placement=\"right\"\n            />\n            <Input\n              name=\"dataset_name\"\n              type=\"text\"\n              placeholder=\"Dataset Name\"\n              value={this.state.datasetName}\n              onChange={this.handleDatasetNameChange}\n              data-test=\"new-dataset-name\"\n            />\n          </FormItem>\n        )}\n        {!(\n          isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n          this.state.vizType === 'filter_box'\n        ) && (\n          <FormItem\n            label={t('Add to dashboard')}\n            data-test=\"save-chart-modal-select-dashboard-form\"\n          >\n            <AsyncSelect\n              allowClear\n              allowNewOptions\n              ariaLabel={t('Select a dashboard')}\n              options={this.loadDashboards}\n              onChange={this.onDashboardChange}\n              value={this.state.dashboard}\n              placeholder={\n                <div>\n                  <b>{t('Select')}</b>\n                  {t(' a dashboard OR ')}\n                  <b>{t('create')}</b>\n                  {t(' a new one')}\n                </div>\n              }\n            />\n          </FormItem>\n        )}\n        {info && <Alert type=\"info\" message={info} closable={false} />}\n        {this.props.alert && (\n          <Alert\n            css={{ marginTop: info ? 16 : undefined }}\n            type=\"warning\"\n            message={this.props.alert}\n            closable={false}\n          />\n        )}\n      </Form>\n    );\n  };\n\n  info = () => {\n    const isNewDashboard = this.isNewDashboard();\n    let chartWillBeCreated = false;\n    if (\n      this.props.slice &&\n      (this.state.action !== 'overwrite' || !this.canOverwriteSlice())\n    ) {\n      chartWillBeCreated = true;\n    }\n    if (chartWillBeCreated && isNewDashboard) {\n      return t('A new chart and dashboard will be created.');\n    }\n    if (chartWillBeCreated) {\n      return t('A new chart will be created.');\n    }\n    if (isNewDashboard) {\n      return t('A new dashboard will be created.');\n    }\n    return null;\n  };\n\n  renderFooter = () => (\n    <div data-test=\"save-modal-footer\">\n      <Button id=\"btn_cancel\" buttonSize=\"small\" onClick={this.onHide}>\n        {t('Cancel')}\n      </Button>\n      <Button\n        id=\"btn_modal_save_goto_dash\"\n        buttonSize=\"small\"\n        disabled={\n          !this.state.newSliceName ||\n          !this.state.dashboard ||\n          (this.props.datasource?.type !== DatasourceType.Table &&\n            !this.state.datasetName) ||\n          (isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n            this.state.vizType === 'filter_box')\n        }\n        onClick={() => this.saveOrOverwrite(true)}\n      >\n        {t('Save & go to dashboard')}\n      </Button>\n      <Button\n        id=\"btn_modal_save\"\n        buttonSize=\"small\"\n        buttonStyle=\"primary\"\n        onClick={() => this.saveOrOverwrite(false)}\n        disabled={\n          this.state.isLoading ||\n          !this.state.newSliceName ||\n          (this.props.datasource?.type !== DatasourceType.Table &&\n            !this.state.datasetName)\n        }\n        data-test=\"btn-modal-save\"\n      >\n        {t('Save')}\n      </Button>\n    </div>\n  );\n\n  render() {\n    return (\n      <StyledModal\n        show={this.props.isVisible}\n        onHide={this.onHide}\n        title={t('Save chart')}\n        footer={this.renderFooter()}\n      >\n        {this.state.isLoading ? (\n          <div\n            css={css`\n              display: flex;\n              justify-content: center;\n            `}\n          >\n            <Loading position=\"normal\" />\n          </div>\n        ) : (\n          this.renderSaveChartModal()\n        )}\n      </StyledModal>\n    );\n  }\n}\n\ninterface StateProps {\n  datasource: any;\n  slice: any;\n  user: UserWithPermissionsAndRoles;\n  dashboards: any;\n  alert: any;\n  isVisible: boolean;\n}\n\nfunction mapStateToProps({\n  explore,\n  saveModal,\n  user,\n}: Record<string, any>): StateProps {\n  return {\n    datasource: explore.datasource,\n    slice: explore.slice,\n    user,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert,\n    isVisible: saveModal.isVisible,\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(SaveModal));\n\n// User for testing purposes need to revisit once we convert this to functional component\nexport { SaveModal as PureSaveModal };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { css, Metric, styled } from '@superset-ui/core';\nimport { ColumnMeta } from '@superset-ui/chart-controls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport {\n  StyledColumnOption,\n  StyledMetricOption,\n} from 'src/explore/components/optionRenderers';\nimport Icons from 'src/components/Icons';\n\nimport { DatasourcePanelDndItem } from '../types';\n\nconst DatasourceItemContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: ${theme.gridUnit * 6}px;\n    padding: 0 ${theme.gridUnit}px;\n\n    // hack to make the drag preview image corners rounded\n    transform: translate(0, 0);\n    background-color: inherit;\n    border-radius: 4px;\n\n    > div {\n      min-width: 0;\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\ninterface DatasourcePanelDragOptionProps extends DatasourcePanelDndItem {\n  labelRef?: React.RefObject<any>;\n  showTooltip?: boolean;\n}\n\ntype MetricOption = Omit<Metric, 'id'> & {\n  label?: string;\n};\n\nexport default function DatasourcePanelDragOption(\n  props: DatasourcePanelDragOptionProps,\n) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type,\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true,\n  };\n\n  return (\n    <DatasourceItemContainer data-test=\"DatasourcePanelDragOption\" ref={drag}>\n      {type === DndItemType.Column ? (\n        <StyledColumnOption column={value as ColumnMeta} {...optionProps} />\n      ) : (\n        <StyledMetricOption metric={value as MetricOption} {...optionProps} />\n      )}\n      <Icons.Drag />\n    </DatasourceItemContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  css,\n  DatasourceType,\n  isFeatureEnabled,\n  FeatureFlag,\n  Metric,\n  QueryFormData,\n  styled,\n  t,\n} from '@superset-ui/core';\n\nimport { ControlConfig, ColumnMeta } from '@superset-ui/chart-controls';\n\nimport { debounce, isArray } from 'lodash';\nimport { matchSorter, rankings } from 'match-sorter';\nimport Collapse from 'src/components/Collapse';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { Input } from 'src/components/Input';\nimport { FAST_DEBOUNCE } from 'src/constants';\nimport { ExploreActions } from 'src/explore/actions/exploreActions';\nimport Control from 'src/explore/components/Control';\nimport DatasourcePanelDragOption from './DatasourcePanelDragOption';\nimport { DndItemType } from '../DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from '../optionRenderers';\nimport { DndItemValue } from './types';\n\ninterface DatasourceControl extends ControlConfig {\n  datasource?: IDatasource;\n}\n\nexport interface DataSourcePanelColumn {\n  is_dttm?: boolean | null;\n  description?: string | null;\n  expression?: string | null;\n  is_certified?: number | null;\n  column_name?: string | null;\n  name?: string | null;\n  type?: string;\n}\nexport interface IDatasource {\n  metrics: Metric[];\n  columns: DataSourcePanelColumn[];\n  id: number;\n  type: DatasourceType;\n  database: {\n    id: number;\n  };\n  sql?: string | null;\n  datasource_name?: string | null;\n  name?: string | null;\n  schema?: string | null;\n}\n\nexport interface Props {\n  datasource: IDatasource;\n  controls: {\n    datasource: DatasourceControl;\n  };\n  actions: Partial<ExploreActions> & Pick<ExploreActions, 'setControlValue'>;\n  // we use this props control force update when this panel resize\n  shouldForceUpdate?: number;\n  formData?: QueryFormData;\n}\n\nconst enableExploreDnd = isFeatureEnabled(\n  FeatureFlag.ENABLE_EXPLORE_DRAG_AND_DROP,\n);\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  text-decoration: underline;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n  padding-top: 2px;\n`;\n\nconst DatasourceContainer = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.grayscale.light5};\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    .ant-collapse {\n      height: auto;\n    }\n    .field-selections {\n      padding: 0 0 ${4 * theme.gridUnit}px;\n      overflow: auto;\n    }\n    .field-length {\n      margin-bottom: ${theme.gridUnit * 2}px;\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.light1};\n    }\n    .form-control.input-md {\n      width: calc(100% - ${theme.gridUnit * 8}px);\n      height: ${theme.gridUnit * 8}px;\n      margin: ${theme.gridUnit * 2}px auto;\n    }\n    .type-label {\n      font-size: ${theme.typography.sizes.s}px;\n      color: ${theme.colors.grayscale.base};\n    }\n    .Control {\n      padding-bottom: 0;\n    }\n  `};\n`;\n\nconst LabelWrapper = styled.div`\n  ${({ theme }) => css`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: ${theme.typography.sizes.s}px;\n    background-color: ${theme.colors.grayscale.light4};\n    margin: ${theme.gridUnit * 2}px 0;\n    border-radius: 4px;\n    padding: 0 ${theme.gridUnit}px;\n\n    &:first-of-type {\n      margin-top: 0;\n    }\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n\n    ${enableExploreDnd &&\n    css`\n      padding: 0;\n      cursor: pointer;\n      &:hover {\n        background-color: ${theme.colors.grayscale.light3};\n      }\n    `}\n\n    & > span {\n      white-space: nowrap;\n    }\n\n    .option-label {\n      display: inline;\n    }\n\n    .metric-option {\n      & > svg {\n        min-width: ${theme.gridUnit * 4}px;\n      }\n      & > .option-label {\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  `}\n`;\n\nconst SectionHeader = styled.span`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: 1.3;\n  `}\n`;\n\nconst StyledInfoboxWrapper = styled.div`\n  ${({ theme }) => css`\n    margin: 0 ${theme.gridUnit * 2.5}px;\n\n    span {\n      text-decoration: underline;\n    }\n  `}\n`;\n\nconst LabelContainer = (props: {\n  children: React.ReactElement;\n  className: string;\n}) => {\n  const labelRef = useRef<HTMLDivElement>(null);\n  const extendedProps = {\n    labelRef,\n  };\n  return (\n    <LabelWrapper className={props.className}>\n      {React.cloneElement(props.children, extendedProps)}\n    </LabelWrapper>\n  );\n};\n\nexport default function DataSourcePanel({\n  datasource,\n  formData,\n  controls: { datasource: datasourceControl },\n  actions,\n  shouldForceUpdate,\n}: Props) {\n  const { columns: _columns, metrics } = datasource;\n  // display temporal column first\n  const columns = useMemo(\n    () =>\n      [...(isArray(_columns) ? _columns : [])].sort((col1, col2) => {\n        if (col1?.is_dttm && !col2?.is_dttm) {\n          return -1;\n        }\n        if (col2?.is_dttm && !col1?.is_dttm) {\n          return 1;\n        }\n        return 0;\n      }),\n    [_columns],\n  );\n\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [lists, setList] = useState({\n    columns,\n    metrics,\n  });\n  const [showAllMetrics, setShowAllMetrics] = useState(false);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n\n  const DEFAULT_MAX_COLUMNS_LENGTH = 50;\n  const DEFAULT_MAX_METRICS_LENGTH = 50;\n\n  const search = useMemo(\n    () =>\n      debounce((value: string) => {\n        if (value === '') {\n          setList({ columns, metrics });\n          return;\n        }\n        setList({\n          columns: matchSorter(columns, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'column_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item?.description ?? '', item?.expression ?? ''].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n          }),\n          metrics: matchSorter(metrics, value, {\n            keys: [\n              {\n                key: 'verbose_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: 'metric_name',\n                threshold: rankings.CONTAINS,\n              },\n              {\n                key: item =>\n                  [item?.description ?? '', item?.expression ?? ''].map(\n                    x => x?.replace(/[_\\n\\s]+/g, ' ') || '',\n                  ),\n                threshold: rankings.CONTAINS,\n                maxRanking: rankings.CONTAINS,\n              },\n            ],\n            keepDiacritics: true,\n            baseSort: (a, b) =>\n              Number(b?.item?.is_certified ?? 0) -\n                Number(a?.item?.is_certified ?? 0) ||\n              String(a?.rankedValue ?? '').localeCompare(b?.rankedValue ?? ''),\n          }),\n        });\n      }, FAST_DEBOUNCE),\n    [columns, metrics],\n  );\n\n  useEffect(() => {\n    setList({\n      columns,\n      metrics,\n    });\n    setInputValue('');\n  }, [columns, datasource, metrics]);\n\n  const sortCertifiedFirst = (slice: DataSourcePanelColumn[]) =>\n    slice.sort((a, b) => (b?.is_certified ?? 0) - (a?.is_certified ?? 0));\n\n  const metricSlice = useMemo(\n    () =>\n      showAllMetrics\n        ? lists?.metrics\n        : lists?.metrics?.slice?.(0, DEFAULT_MAX_METRICS_LENGTH),\n    [lists?.metrics, showAllMetrics],\n  );\n\n  const columnSlice = useMemo(\n    () =>\n      showAllColumns\n        ? sortCertifiedFirst(lists?.columns)\n        : sortCertifiedFirst(\n            lists?.columns?.slice?.(0, DEFAULT_MAX_COLUMNS_LENGTH),\n          ),\n    [lists.columns, showAllColumns],\n  );\n\n  const showInfoboxCheck = () => {\n    try {\n      if (sessionStorage.getItem('showInfobox') === 'false') return false;\n    } catch (error) {\n      // continue regardless of error\n    }\n    return true;\n  };\n\n  const saveableDatasets = {\n    query: DatasourceType.Query,\n    saved_query: DatasourceType.SavedQuery,\n  };\n\n  const datasourceIsSaveable =\n    datasource.type && saveableDatasets[datasource.type];\n\n  const mainBody = useMemo(\n    () => (\n      <>\n        <Input\n          allowClear\n          onChange={evt => {\n            setInputValue(evt.target.value);\n            search(evt.target.value);\n          }}\n          value={inputValue}\n          className=\"form-control input-md\"\n          placeholder={t('Search Metrics & Columns')}\n        />\n        <div className=\"field-selections\">\n          {datasourceIsSaveable && showInfoboxCheck() && (\n            <StyledInfoboxWrapper>\n              <Alert\n                closable\n                onClose={() => {\n                  try {\n                    sessionStorage.setItem('showInfobox', 'false');\n                  } catch (error) {\n                    // continue regardless of error\n                  }\n                }}\n                type=\"info\"\n                message=\"\"\n                description={\n                  <>\n                    <span\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => setShowSaveDatasetModal(true)}\n                      className=\"add-dataset-alert-description\"\n                    >\n                      {t('Create a dataset')}\n                    </span>\n                    {t(' to edit or add columns and metrics.')}\n                  </>\n                }\n              />\n            </StyledInfoboxWrapper>\n          )}\n          <Collapse\n            defaultActiveKey={['metrics', 'column']}\n            expandIconPosition=\"right\"\n            ghost\n          >\n            {metrics?.length && (\n              <Collapse.Panel\n                header={<SectionHeader>{t('Metrics')}</SectionHeader>}\n                key=\"metrics\"\n              >\n                <div className=\"field-length\">\n                  {t(\n                    `Showing %s of %s`,\n                    metricSlice?.length,\n                    lists?.metrics.length,\n                  )}\n                </div>\n                {metricSlice?.map?.((m: Metric) => (\n                  <LabelContainer\n                    key={m.metric_name + String(shouldForceUpdate)}\n                    className=\"column\"\n                  >\n                    {enableExploreDnd ? (\n                      <DatasourcePanelDragOption\n                        value={m}\n                        type={DndItemType.Metric}\n                      />\n                    ) : (\n                      <StyledMetricOption metric={m} showType />\n                    )}\n                  </LabelContainer>\n                ))}\n                {lists?.metrics?.length > DEFAULT_MAX_METRICS_LENGTH ? (\n                  <ButtonContainer>\n                    <Button onClick={() => setShowAllMetrics(!showAllMetrics)}>\n                      {showAllMetrics ? t('Show less...') : t('Show all...')}\n                    </Button>\n                  </ButtonContainer>\n                ) : (\n                  <></>\n                )}\n              </Collapse.Panel>\n            )}\n            <Collapse.Panel\n              header={<SectionHeader>{t('Columns')}</SectionHeader>}\n              key=\"column\"\n            >\n              <div className=\"field-length\">\n                {t(\n                  `Showing %s of %s`,\n                  columnSlice.length,\n                  lists.columns.length,\n                )}\n              </div>\n              {columnSlice.map(col => (\n                <LabelContainer\n                  key={col.column_name + String(shouldForceUpdate)}\n                  className=\"column\"\n                >\n                  {enableExploreDnd ? (\n                    <DatasourcePanelDragOption\n                      value={col as DndItemValue}\n                      type={DndItemType.Column}\n                    />\n                  ) : (\n                    <StyledColumnOption column={col as ColumnMeta} showType />\n                  )}\n                </LabelContainer>\n              ))}\n              {lists.columns.length > DEFAULT_MAX_COLUMNS_LENGTH ? (\n                <ButtonContainer>\n                  <Button onClick={() => setShowAllColumns(!showAllColumns)}>\n                    {showAllColumns ? t('Show Less...') : t('Show all...')}\n                  </Button>\n                </ButtonContainer>\n              ) : (\n                <></>\n              )}\n            </Collapse.Panel>\n          </Collapse>\n        </div>\n      </>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      columnSlice,\n      inputValue,\n      lists.columns.length,\n      lists?.metrics?.length,\n      metricSlice,\n      search,\n      showAllColumns,\n      showAllMetrics,\n      datasourceIsSaveable,\n      shouldForceUpdate,\n    ],\n  );\n\n  return (\n    <DatasourceContainer>\n      {datasourceIsSaveable && showSaveDatasetModal && (\n        <SaveDatasetModal\n          visible={showSaveDatasetModal}\n          onHide={() => setShowSaveDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n      <Control {...datasourceControl} name=\"datasource\" actions={actions} />\n      {datasource.id != null && mainBody}\n    </DatasourceContainer>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport memoizeOne from 'memoize-one';\nimport { isControlPanelSectionConfig } from '@superset-ui/chart-controls';\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { controls } from '../explore/controls';\n\nconst memoizedControls = memoizeOne((vizType, controlPanel) => {\n  const controlsMap = {};\n  (controlPanel?.controlPanelSections || [])\n    .filter(isControlPanelSectionConfig)\n    .forEach(section => {\n      section.controlSetRows.forEach(row => {\n        row.forEach(control => {\n          if (!control) return;\n          if (typeof control === 'string') {\n            // For now, we have to look in controls.jsx to get the config for some controls.\n            // Once everything is migrated out, delete this if statement.\n            controlsMap[control] = controls[control];\n          } else if (control.name && control.config) {\n            // condition needed because there are elements, e.g. <hr /> in some control configs (I'm looking at you, FilterBox!)\n            controlsMap[control.name] = control.config;\n          }\n        });\n      });\n    });\n  return controlsMap;\n});\n\nconst getControlsForVizType = vizType => {\n  const controlPanel = getChartControlPanelRegistry().get(vizType);\n  return memoizedControls(vizType, controlPanel);\n};\n\nexport default getControlsForVizType;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEqual, isEmpty } from 'lodash';\nimport { styled, t } from '@superset-ui/core';\nimport { sanitizeFormData } from 'src/explore/exploreUtils/formData';\nimport getControlsForVizType from 'src/utils/getControlsForVizType';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from '../ModalTrigger';\nimport TableView from '../TableView';\n\nconst propTypes = {\n  origFormData: PropTypes.object.isRequired,\n  currentFormData: PropTypes.object.isRequired,\n};\n\nconst StyledLabel = styled.span`\n  ${({ theme }) => `\n    font-size: ${theme.typography.sizes.s}px;\n    color: ${theme.colors.grayscale.dark1};\n    background-color: ${theme.colors.alert.base};\n\n    &: hover {\n      background-color: ${theme.colors.alert.dark1};\n    }\n  `}\n`;\n\nfunction alterForComparison(value) {\n  // Considering `[]`, `{}`, `null` and `undefined` as identical\n  // for this purpose\n  if (value === undefined || value === null || value === '') {\n    return null;\n  }\n  if (typeof value === 'object') {\n    if (Array.isArray(value) && value.length === 0) {\n      return null;\n    }\n    const keys = Object.keys(value);\n    if (keys && keys.length === 0) {\n      return null;\n    }\n  }\n  return value;\n}\n\nexport default class AlteredSliceTag extends React.Component {\n  constructor(props) {\n    super(props);\n    const diffs = this.getDiffs(props);\n    const controlsMap = getControlsForVizType(this.props.origFormData.viz_type);\n    const rows = this.getRowsFromDiffs(diffs, controlsMap);\n\n    this.state = { rows, hasDiffs: !isEmpty(diffs), controlsMap };\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    // Update differences if need be\n    if (isEqual(this.props, newProps)) {\n      return;\n    }\n    const diffs = this.getDiffs(newProps);\n    this.setState(prevState => ({\n      rows: this.getRowsFromDiffs(diffs, prevState.controlsMap),\n      hasDiffs: !isEmpty(diffs),\n    }));\n  }\n\n  getRowsFromDiffs(diffs, controlsMap) {\n    return Object.entries(diffs).map(([key, diff]) => ({\n      control: (controlsMap[key] && controlsMap[key].label) || key,\n      before: this.formatValue(diff.before, key, controlsMap),\n      after: this.formatValue(diff.after, key, controlsMap),\n    }));\n  }\n\n  getDiffs(props) {\n    // Returns all properties that differ in the\n    // current form data and the saved form data\n    const ofd = sanitizeFormData(props.origFormData);\n    const cfd = sanitizeFormData(props.currentFormData);\n\n    const fdKeys = Object.keys(cfd);\n    const diffs = {};\n    fdKeys.forEach(fdKey => {\n      if (!ofd[fdKey] && !cfd[fdKey]) {\n        return;\n      }\n      if (['filters', 'having', 'where'].includes(fdKey)) {\n        return;\n      }\n      if (!this.isEqualish(ofd[fdKey], cfd[fdKey])) {\n        diffs[fdKey] = { before: ofd[fdKey], after: cfd[fdKey] };\n      }\n    });\n    return diffs;\n  }\n\n  isEqualish(val1, val2) {\n    return isEqual(alterForComparison(val1), alterForComparison(val2));\n  }\n\n  formatValue(value, key, controlsMap) {\n    // Format display value based on the control type\n    // or the value type\n    if (value === undefined) {\n      return 'N/A';\n    }\n    if (value === null) {\n      return 'null';\n    }\n    if (controlsMap[key]?.type === 'AdhocFilterControl') {\n      if (!value.length) {\n        return '[]';\n      }\n      return value\n        .map(v => {\n          const filterVal =\n            v.comparator && v.comparator.constructor === Array\n              ? `[${v.comparator.join(', ')}]`\n              : v.comparator;\n          return `${v.subject} ${v.operator} ${filterVal}`;\n        })\n        .join(', ');\n    }\n    if (controlsMap[key]?.type === 'BoundsControl') {\n      return `Min: ${value[0]}, Max: ${value[1]}`;\n    }\n    if (controlsMap[key]?.type === 'CollectionControl') {\n      return value.map(v => safeStringify(v)).join(', ');\n    }\n    if (\n      controlsMap[key]?.type === 'MetricsControl' &&\n      value.constructor === Array\n    ) {\n      const formattedValue = value.map(v => v?.label ?? v);\n      return formattedValue.length ? formattedValue.join(', ') : '[]';\n    }\n    if (typeof value === 'boolean') {\n      return value ? 'true' : 'false';\n    }\n    if (value.constructor === Array) {\n      const formattedValue = value.map(v => v?.label ?? v);\n      return formattedValue.length ? formattedValue.join(', ') : '[]';\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n      return value;\n    }\n    return safeStringify(value);\n  }\n\n  renderModalBody() {\n    const columns = [\n      {\n        accessor: 'control',\n        Header: t('Control'),\n      },\n      {\n        accessor: 'before',\n        Header: t('Before'),\n      },\n      {\n        accessor: 'after',\n        Header: t('After'),\n      },\n    ];\n    // set the wrap text in the specific columns.\n    const columnsForWrapText = ['Control', 'Before', 'After'];\n\n    return (\n      <TableView\n        columns={columns}\n        data={this.state.rows}\n        pageSize={50}\n        className=\"table-condensed\"\n        columnsForWrapText={columnsForWrapText}\n      />\n    );\n  }\n\n  renderTriggerNode() {\n    return (\n      <Tooltip id=\"difference-tooltip\" title={t('Click to see difference')}>\n        <StyledLabel className=\"label\">{t('Altered')}</StyledLabel>\n      </Tooltip>\n    );\n  }\n\n  render() {\n    // Return nothing if there are no differences\n    if (!this.state.hasDiffs) {\n      return null;\n    }\n    // Render the label-warning 'Altered' tag which the user may\n    // click to open a modal containing a table summarizing the\n    // differences in the slice\n    return (\n      <ModalTrigger\n        triggerNode={this.renderTriggerNode()}\n        modalTitle={t('Chart changes')}\n        modalBody={this.renderModalBody()}\n        responsive\n      />\n    );\n  }\n}\n\nAlteredSliceTag.propTypes = propTypes;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'src/components/Tooltip';\nimport {\n  CategoricalColorNamespace,\n  css,\n  logging,\n  SupersetClient,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport AlteredSliceTag from 'src/components/AlteredSliceTag';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport { sliceUpdated } from 'src/explore/actions/exploreActions';\nimport { PageHeaderWithActions } from 'src/components/PageHeaderWithActions';\nimport MetadataBar, { MetadataType } from 'src/components/MetadataBar';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\nimport { useExploreAdditionalActionsMenu } from '../useExploreAdditionalActionsMenu';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  canOverwrite: PropTypes.bool.isRequired,\n  canDownload: PropTypes.bool.isRequired,\n  dashboardId: PropTypes.number,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  formData: PropTypes.object,\n  ownState: PropTypes.object,\n  timeout: PropTypes.number,\n  chart: chartPropShape,\n  saveDisabled: PropTypes.bool,\n};\n\nconst saveButtonStyles = theme => css`\n  color: ${theme.colors.primary.dark2};\n  & > span[role='img'] {\n    margin-right: 0;\n  }\n`;\n\nconst additionalItemsStyles = theme => css`\n  display: flex;\n  align-items: center;\n  margin-left: ${theme.gridUnit}px;\n  & > span {\n    margin-right: ${theme.gridUnit * 3}px;\n  }\n`;\n\nexport const ExploreChartHeader = ({\n  dashboardId,\n  slice,\n  actions,\n  formData,\n  ownState,\n  chart,\n  user,\n  canOverwrite,\n  canDownload,\n  isStarred,\n  sliceName,\n  saveDisabled,\n  metadata,\n}) => {\n  const dispatch = useDispatch();\n  const { latestQueryFormData, sliceFormData } = chart;\n  const [isPropertiesModalOpen, setIsPropertiesModalOpen] = useState(false);\n\n  const updateCategoricalNamespace = async () => {\n    const { dashboards } = metadata || {};\n    const dashboard =\n      dashboardId && dashboards && dashboards.find(d => d.id === dashboardId);\n\n    if (dashboard) {\n      try {\n        // Dashboards from metadata don't contain the json_metadata field\n        // to avoid unnecessary payload. Here we query for the dashboard json_metadata.\n        const response = await SupersetClient.get({\n          endpoint: `/api/v1/dashboard/${dashboard.id}`,\n        });\n        const result = response?.json?.result;\n\n        // setting the chart to use the dashboard custom label colors if any\n        const metadata = JSON.parse(result.json_metadata);\n        const sharedLabelColors = metadata.shared_label_colors || {};\n        const customLabelColors = metadata.label_colors || {};\n        const mergedLabelColors = {\n          ...sharedLabelColors,\n          ...customLabelColors,\n        };\n\n        const categoricalNamespace = CategoricalColorNamespace.getNamespace();\n\n        Object.keys(mergedLabelColors).forEach(label => {\n          categoricalNamespace.setColor(\n            label,\n            mergedLabelColors[label],\n            metadata.color_scheme,\n          );\n        });\n      } catch (error) {\n        logging.info(t('Unable to retrieve dashboard colors'));\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (dashboardId) updateCategoricalNamespace();\n  }, []);\n\n  const openPropertiesModal = () => {\n    setIsPropertiesModalOpen(true);\n  };\n\n  const closePropertiesModal = () => {\n    setIsPropertiesModalOpen(false);\n  };\n\n  const showModal = useCallback(() => {\n    dispatch(setSaveChartModalVisibility(true));\n  }, [dispatch]);\n\n  const updateSlice = useCallback(\n    slice => {\n      dispatch(sliceUpdated(slice));\n    },\n    [dispatch],\n  );\n\n  const history = useHistory();\n  const { redirectSQLLab } = actions;\n\n  const redirectToSQLLab = useCallback(\n    (formData, openNewWindow = false) => {\n      redirectSQLLab(formData, !openNewWindow && history);\n    },\n    [redirectSQLLab, history],\n  );\n\n  const [menu, isDropdownVisible, setIsDropdownVisible] =\n    useExploreAdditionalActionsMenu(\n      latestQueryFormData,\n      canDownload,\n      slice,\n      redirectToSQLLab,\n      openPropertiesModal,\n      ownState,\n      metadata?.dashboards,\n    );\n\n  const metadataBar = useMemo(() => {\n    if (!metadata) {\n      return null;\n    }\n    const items = [];\n    items.push({\n      type: MetadataType.DASHBOARDS,\n      title:\n        metadata.dashboards.length > 0\n          ? tn(\n              'Added to 1 dashboard',\n              'Added to %s dashboards',\n              metadata.dashboards.length,\n              metadata.dashboards.length,\n            )\n          : t('Not added to any dashboard'),\n      description:\n        metadata.dashboards.length > 0\n          ? t(\n              'You can preview the list of dashboards in the chart settings dropdown.',\n            )\n          : undefined,\n    });\n    items.push({\n      type: MetadataType.LAST_MODIFIED,\n      value: metadata.changed_on_humanized,\n      modifiedBy: metadata.changed_by || t('Not available'),\n    });\n    items.push({\n      type: MetadataType.OWNER,\n      createdBy: metadata.created_by || t('Not available'),\n      owners: metadata.owners.length > 0 ? metadata.owners : t('None'),\n      createdOn: metadata.created_on_humanized,\n    });\n    if (slice?.description) {\n      items.push({\n        type: MetadataType.DESCRIPTION,\n        value: slice?.description,\n      });\n    }\n    return <MetadataBar items={items} tooltipPlacement=\"bottom\" />;\n  }, [metadata, slice?.description]);\n\n  const oldSliceName = slice?.slice_name;\n  return (\n    <>\n      <PageHeaderWithActions\n        editableTitleProps={{\n          title: sliceName,\n          canEdit:\n            !slice ||\n            canOverwrite ||\n            (slice?.owners || []).includes(user?.userId),\n          onSave: actions.updateChartTitle,\n          placeholder: t('Add the name of the chart'),\n          label: t('Chart title'),\n        }}\n        showTitlePanelItems={!!slice}\n        certificatiedBadgeProps={{\n          certifiedBy: slice?.certified_by,\n          details: slice?.certification_details,\n        }}\n        showFaveStar={!!user?.userId}\n        faveStarProps={{\n          itemId: slice?.slice_id,\n          fetchFaveStar: actions.fetchFaveStar,\n          saveFaveStar: actions.saveFaveStar,\n          isStarred,\n          showTooltip: true,\n        }}\n        titlePanelAdditionalItems={\n          <div css={additionalItemsStyles}>\n            {sliceFormData ? (\n              <AlteredSliceTag\n                className=\"altered\"\n                origFormData={{\n                  ...sliceFormData,\n                  chartTitle: oldSliceName,\n                }}\n                currentFormData={{ ...formData, chartTitle: sliceName }}\n              />\n            ) : null}\n            {metadataBar}\n          </div>\n        }\n        rightPanelAdditionalItems={\n          <Tooltip\n            title={\n              saveDisabled\n                ? t('Add required control values to save chart')\n                : null\n            }\n          >\n            {/* needed to wrap button in a div - antd tooltip doesn't work with disabled button */}\n            <div>\n              <Button\n                buttonStyle=\"secondary\"\n                onClick={showModal}\n                disabled={saveDisabled}\n                data-test=\"query-save-button\"\n                css={saveButtonStyles}\n              >\n                <Icons.SaveOutlined iconSize=\"l\" />\n                {t('Save')}\n              </Button>\n            </div>\n          </Tooltip>\n        }\n        additionalActionsMenu={menu}\n        menuDropdownProps={{\n          visible: isDropdownVisible,\n          onVisibleChange: setIsDropdownVisible,\n        }}\n      />\n      {isPropertiesModalOpen && (\n        <PropertiesModal\n          show={isPropertiesModalOpen}\n          onHide={closePropertiesModal}\n          onSave={updateSlice}\n          slice={slice}\n        />\n      )}\n    </>\n  );\n};\n\nExploreChartHeader.propTypes = propTypes;\n\nexport default ExploreChartHeader;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  styled,\n  t,\n  css,\n  useTheme,\n  logging,\n  useChangeEffect,\n  useComponentDidMount,\n  usePrevious,\n} from '@superset-ui/core';\nimport { debounce, pick } from 'lodash';\nimport { Resizable } from 're-resizable';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport { Global } from '@emotion/react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport { RESERVED_CHART_URL_PARAMS, URL_PARAMS } from 'src/constants';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport * as logActions from 'src/logger/actions';\nimport {\n  LOG_ACTIONS_MOUNT_EXPLORER,\n  LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\n} from 'src/logger/LogUtils';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport cx from 'classnames';\nimport * as chartActions from 'src/components/Chart/chartAction';\nimport { fetchDatasourceMetadata } from 'src/dashboard/actions/datasources';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport { mergeExtraFormData } from 'src/dashboard/components/nativeFilters/utils';\nimport { postFormData, putFormData } from 'src/explore/exploreUtils/formData';\nimport { datasourcesActions } from 'src/explore/actions/datasourcesActions';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { getFormDataFromControls } from 'src/explore/controlUtils';\nimport * as exploreActions from 'src/explore/actions/exploreActions';\nimport * as saveModalActions from 'src/explore/actions/saveModalActions';\nimport { useTabId } from 'src/hooks/useTabId';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport ExploreChartPanel from '../ExploreChartPanel';\nimport ConnectedControlPanelsContainer from '../ControlPanelsContainer';\nimport SaveModal from '../SaveModal';\nimport DataSourcePanel from '../DatasourcePanel';\nimport ConnectedExploreChartHeader from '../ExploreChartHeader';\n\nconst propTypes = {\n  ...ExploreChartPanel.propTypes,\n  actions: PropTypes.object.isRequired,\n  datasource_type: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n  chart: chartPropShape.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  controls: PropTypes.object.isRequired,\n  forcedHeight: PropTypes.string,\n  form_data: PropTypes.object.isRequired,\n  standalone: PropTypes.bool.isRequired,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  impressionId: PropTypes.string,\n  vizType: PropTypes.string,\n  saveAction: PropTypes.string,\n  isSaveModalVisible: PropTypes.bool,\n};\n\nconst ExploreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 0;\n`;\n\nconst ExplorePanelContainer = styled.div`\n  ${({ theme }) => css`\n    background: ${theme.colors.grayscale.light5};\n    text-align: left;\n    position: relative;\n    width: 100%;\n    max-height: 100%;\n    min-height: 0;\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    border-top: 1px solid ${theme.colors.grayscale.light2};\n    .explore-column {\n      display: flex;\n      flex-direction: column;\n      padding: ${theme.gridUnit * 2}px 0;\n      max-height: 100%;\n    }\n    .data-source-selection {\n      background-color: ${theme.colors.grayscale.light5};\n      padding: ${theme.gridUnit * 2}px 0;\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n    .main-explore-content {\n      flex: 1;\n      min-width: ${theme.gridUnit * 128}px;\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      padding: 0 ${theme.gridUnit * 4}px;\n      .panel {\n        margin-bottom: 0;\n      }\n    }\n    .controls-column {\n      align-self: flex-start;\n      padding: 0;\n    }\n    .title-container {\n      position: relative;\n      display: flex;\n      flex-direction: row;\n      padding: 0 ${theme.gridUnit * 2}px 0 ${theme.gridUnit * 4}px;\n      justify-content: space-between;\n      .horizontal-text {\n        font-size: ${theme.typography.sizes.m}px;\n      }\n    }\n    .no-show {\n      display: none;\n    }\n    .vertical-text {\n      writing-mode: vertical-rl;\n      text-orientation: mixed;\n    }\n    .sidebar {\n      height: 100%;\n      background-color: ${theme.colors.grayscale.light4};\n      padding: ${theme.gridUnit * 2}px;\n      width: ${theme.gridUnit * 8}px;\n    }\n    .collapse-icon > svg {\n      color: ${theme.colors.primary.base};\n    }\n  `};\n`;\n\nconst updateHistory = debounce(\n  async (\n    formData,\n    datasourceId,\n    datasourceType,\n    isReplace,\n    standalone,\n    force,\n    title,\n    tabId,\n  ) => {\n    const payload = { ...formData };\n    const chartId = formData.slice_id;\n    const params = new URLSearchParams(window.location.search);\n    const additionalParam = Object.fromEntries(params);\n\n    if (chartId) {\n      additionalParam[URL_PARAMS.sliceId.name] = chartId;\n    } else {\n      additionalParam[URL_PARAMS.datasourceId.name] = datasourceId;\n      additionalParam[URL_PARAMS.datasourceType.name] = datasourceType;\n    }\n\n    const urlParams = payload?.url_params || {};\n    Object.entries(urlParams).forEach(([key, value]) => {\n      if (!RESERVED_CHART_URL_PARAMS.includes(key)) {\n        additionalParam[key] = value;\n      }\n    });\n\n    try {\n      let key;\n      let stateModifier;\n      if (isReplace) {\n        key = await postFormData(\n          datasourceId,\n          datasourceType,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'replaceState';\n      } else {\n        key = getUrlParam(URL_PARAMS.formDataKey);\n        await putFormData(\n          datasourceId,\n          datasourceType,\n          key,\n          formData,\n          chartId,\n          tabId,\n        );\n        stateModifier = 'pushState';\n      }\n      // avoid race condition in case user changes route before explore updates the url\n      if (window.location.pathname.startsWith('/explore')) {\n        const url = mountExploreUrl(\n          standalone ? URL_PARAMS.standalone.name : null,\n          {\n            [URL_PARAMS.formDataKey.name]: key,\n            ...additionalParam,\n          },\n          force,\n        );\n        window.history[stateModifier](payload, title, url);\n      }\n    } catch (e) {\n      logging.warn('Failed at altering browser history', e);\n    }\n  },\n  1000,\n);\n\nfunction ExploreViewContainer(props) {\n  const dynamicPluginContext = usePluginContext();\n  const dynamicPlugin = dynamicPluginContext.dynamicPlugins[props.vizType];\n  const isDynamicPluginLoading = dynamicPlugin && dynamicPlugin.mounting;\n  const wasDynamicPluginLoading = usePrevious(isDynamicPluginLoading);\n\n  /** the state of controls in the previous render */\n  const previousControls = usePrevious(props.controls);\n  /** the state of controls last time a query was triggered */\n  const [lastQueriedControls, setLastQueriedControls] = useState(\n    props.controls,\n  );\n\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [shouldForceUpdate, setShouldForceUpdate] = useState(-1);\n  const tabId = useTabId();\n\n  const theme = useTheme();\n\n  const defaultSidebarsWidth = {\n    controls_width: 320,\n    datasource_width: 300,\n  };\n\n  const addHistory = useCallback(\n    async ({ isReplace = false, title } = {}) => {\n      const formData = props.dashboardId\n        ? {\n            ...props.form_data,\n            dashboardId: props.dashboardId,\n          }\n        : props.form_data;\n      const { id: datasourceId, type: datasourceType } = props.datasource;\n\n      updateHistory(\n        formData,\n        datasourceId,\n        datasourceType,\n        isReplace,\n        props.standalone,\n        props.force,\n        title,\n        tabId,\n      );\n    },\n    [\n      props.dashboardId,\n      props.form_data,\n      props.datasource.id,\n      props.datasource.type,\n      props.standalone,\n      props.force,\n      tabId,\n    ],\n  );\n\n  const handlePopstate = useCallback(() => {\n    const formData = window.history.state;\n    if (formData && Object.keys(formData).length) {\n      props.actions.setExploreControls(formData);\n      props.actions.postChartFormData(\n        formData,\n        props.force,\n        props.timeout,\n        props.chart.id,\n      );\n    }\n  }, [props.actions, props.chart.id, props.timeout]);\n\n  const onQuery = useCallback(() => {\n    props.actions.setForceQuery(false);\n    props.actions.triggerQuery(true, props.chart.id);\n    addHistory();\n    setLastQueriedControls(props.controls);\n  }, [props.controls, addHistory, props.actions, props.chart.id]);\n\n  const handleKeydown = useCallback(\n    event => {\n      const controlOrCommand = event.ctrlKey || event.metaKey;\n      if (controlOrCommand) {\n        const isEnter = event.key === 'Enter' || event.keyCode === 13;\n        const isS = event.key === 's' || event.keyCode === 83;\n        if (isEnter) {\n          onQuery();\n        } else if (isS) {\n          if (props.slice) {\n            props.actions\n              .saveSlice(props.form_data, {\n                action: 'overwrite',\n                slice_id: props.slice.slice_id,\n                slice_name: props.slice.slice_name,\n                add_to_dash: 'noSave',\n                goto_dash: false,\n              })\n              .then(({ data }) => {\n                window.location = data.slice.slice_url;\n              });\n          }\n        }\n      }\n    },\n    [onQuery, props.actions, props.form_data, props.slice],\n  );\n\n  function onStop() {\n    if (props.chart && props.chart.queryController) {\n      props.chart.queryController.abort();\n    }\n  }\n\n  function toggleCollapse() {\n    setIsCollapsed(!isCollapsed);\n  }\n\n  useComponentDidMount(() => {\n    props.actions.logEvent(LOG_ACTIONS_MOUNT_EXPLORER);\n  });\n\n  useChangeEffect(tabId, (previous, current) => {\n    if (current) {\n      addHistory({ isReplace: true });\n    }\n  });\n\n  const previousHandlePopstate = usePrevious(handlePopstate);\n  useEffect(() => {\n    if (previousHandlePopstate) {\n      window.removeEventListener('popstate', previousHandlePopstate);\n    }\n    window.addEventListener('popstate', handlePopstate);\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [handlePopstate, previousHandlePopstate]);\n\n  const previousHandleKeyDown = usePrevious(handleKeydown);\n  useEffect(() => {\n    if (previousHandleKeyDown) {\n      window.removeEventListener('keydown', previousHandleKeyDown);\n    }\n    document.addEventListener('keydown', handleKeydown);\n    return () => {\n      document.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown, previousHandleKeyDown]);\n\n  useEffect(() => {\n    if (wasDynamicPluginLoading && !isDynamicPluginLoading) {\n      // reload the controls now that we actually have the control config\n      props.actions.dynamicPluginControlsReady();\n    }\n  }, [isDynamicPluginLoading]);\n\n  useEffect(() => {\n    const hasError = Object.values(props.controls).some(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (!hasError) {\n      props.actions.triggerQuery(true, props.chart.id);\n    }\n  }, []);\n\n  const reRenderChart = useCallback(\n    controlsChanged => {\n      const newQueryFormData = controlsChanged\n        ? {\n            ...props.chart.latestQueryFormData,\n            ...getFormDataFromControls(pick(props.controls, controlsChanged)),\n          }\n        : getFormDataFromControls(props.controls);\n      props.actions.updateQueryFormData(newQueryFormData, props.chart.id);\n      props.actions.renderTriggered(new Date().getTime(), props.chart.id);\n      addHistory();\n    },\n    [\n      addHistory,\n      props.actions,\n      props.chart.id,\n      props.chart.latestQueryFormData,\n      props.controls,\n    ],\n  );\n\n  // effect to run when controls change\n  useEffect(() => {\n    if (\n      previousControls &&\n      props.chart.latestQueryFormData.viz_type === props.controls.viz_type.value\n    ) {\n      if (\n        props.controls.datasource &&\n        (previousControls.datasource == null ||\n          props.controls.datasource.value !== previousControls.datasource.value)\n      ) {\n        // this should really be handled by actions\n        fetchDatasourceMetadata(props.form_data.datasource, true);\n      }\n\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof previousControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            previousControls[key].value,\n          ),\n      );\n\n      // this should also be handled by the actions that are actually changing the controls\n      const displayControlsChanged = changedControlKeys.filter(\n        key => props.controls[key].renderTrigger,\n      );\n      if (displayControlsChanged.length > 0) {\n        reRenderChart(displayControlsChanged);\n      }\n    }\n  }, [props.controls, props.ownState]);\n\n  const chartIsStale = useMemo(() => {\n    if (lastQueriedControls) {\n      const changedControlKeys = Object.keys(props.controls).filter(\n        key =>\n          typeof lastQueriedControls[key] !== 'undefined' &&\n          !areObjectsEqual(\n            props.controls[key].value,\n            lastQueriedControls[key].value,\n            { ignoreFields: ['datasourceWarning'] },\n          ),\n      );\n\n      return changedControlKeys.some(\n        key =>\n          !props.controls[key].renderTrigger &&\n          !props.controls[key].dontRefreshOnChange,\n      );\n    }\n    return false;\n  }, [lastQueriedControls, props.controls]);\n\n  useChangeEffect(props.saveAction, () => {\n    if (['saveas', 'overwrite'].includes(props.saveAction)) {\n      onQuery();\n      addHistory({ isReplace: true });\n      props.actions.setSaveAction(null);\n    }\n  });\n\n  useEffect(() => {\n    if (props.ownState !== undefined) {\n      onQuery();\n      reRenderChart();\n    }\n  }, [props.ownState]);\n\n  if (chartIsStale) {\n    props.actions.logEvent(LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS);\n  }\n\n  const errorMessage = useMemo(() => {\n    const controlsWithErrors = Object.values(props.controls).filter(\n      control =>\n        control.validationErrors && control.validationErrors.length > 0,\n    );\n    if (controlsWithErrors.length === 0) {\n      return null;\n    }\n\n    const errorMessages = controlsWithErrors.map(\n      control => control.validationErrors,\n    );\n    const uniqueErrorMessages = [...new Set(errorMessages.flat())];\n\n    const errors = uniqueErrorMessages\n      .map(message => {\n        const matchingLabels = controlsWithErrors\n          .filter(control => control.validationErrors?.includes(message))\n          .map(control => control.label);\n        return [matchingLabels, message];\n      })\n      .map(([labels, message]) => (\n        <div key={message}>\n          {labels.length > 1 ? t('Controls labeled ') : t('Control labeled ')}\n          <strong>{` ${labels.join(', ')}`}</strong>\n          <span>: {message}</span>\n        </div>\n      ));\n\n    let errorMessage;\n    if (errors.length > 0) {\n      errorMessage = <div style={{ textAlign: 'left' }}>{errors}</div>;\n    }\n    return errorMessage;\n  }, [props.controls]);\n\n  function renderChartContainer() {\n    return (\n      <ExploreChartPanel\n        {...props}\n        errorMessage={errorMessage}\n        chartIsStale={chartIsStale}\n        onQuery={onQuery}\n      />\n    );\n  }\n\n  function getSidebarWidths(key) {\n    return getItem(key, defaultSidebarsWidth[key]);\n  }\n\n  function setSidebarWidths(key, dimension) {\n    const newDimension = Number(getSidebarWidths(key)) + dimension.width;\n    setItem(key, newDimension);\n  }\n\n  if (props.standalone) {\n    return renderChartContainer();\n  }\n\n  return (\n    <ExploreContainer>\n      <ConnectedExploreChartHeader\n        actions={props.actions}\n        canOverwrite={props.can_overwrite}\n        canDownload={props.can_download}\n        dashboardId={props.dashboardId}\n        isStarred={props.isStarred}\n        slice={props.slice}\n        sliceName={props.sliceName}\n        table_name={props.table_name}\n        formData={props.form_data}\n        chart={props.chart}\n        ownState={props.ownState}\n        user={props.user}\n        reports={props.reports}\n        saveDisabled={errorMessage || props.chart.chartStatus === 'loading'}\n        metadata={props.metadata}\n      />\n      <ExplorePanelContainer id=\"explore-container\">\n        <Global\n          styles={css`\n            .navbar {\n              margin-bottom: 0;\n            }\n            body {\n              height: 100vh;\n              max-height: 100vh;\n              overflow: hidden;\n            }\n            #app-menu,\n            #app {\n              flex: 1 1 auto;\n            }\n            #app {\n              flex-basis: 100%;\n              overflow: hidden;\n              height: 100%;\n            }\n            #app-menu {\n              flex-shrink: 0;\n            }\n          `}\n        />\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) => {\n            setShouldForceUpdate(d?.width);\n            setSidebarWidths(LocalStorageKeys.datasource_width, d);\n          }}\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.datasource_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.datasource_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className={\n            isCollapsed ? 'no-show' : 'explore-column data-source-selection'\n          }\n        >\n          <div className=\"title-container\">\n            <span className=\"horizontal-text\">{t('Chart Source')}</span>\n            <span\n              role=\"button\"\n              tabIndex={0}\n              className=\"action-button\"\n              onClick={toggleCollapse}\n            >\n              <Icons.Expand\n                className=\"collapse-icon\"\n                iconColor={theme.colors.primary.base}\n                iconSize=\"l\"\n              />\n            </span>\n          </div>\n          <DataSourcePanel\n            formData={props.form_data}\n            datasource={props.datasource}\n            controls={props.controls}\n            actions={props.actions}\n            shouldForceUpdate={shouldForceUpdate}\n            user={props.user}\n          />\n        </Resizable>\n        {isCollapsed ? (\n          <div\n            className=\"sidebar\"\n            onClick={toggleCollapse}\n            data-test=\"open-datasource-tab\"\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span role=\"button\" tabIndex={0} className=\"action-button\">\n              <Tooltip title={t('Open Datasource tab')}>\n                <Icons.Collapse\n                  className=\"collapse-icon\"\n                  iconColor={theme.colors.primary.base}\n                  iconSize=\"l\"\n                />\n              </Tooltip>\n            </span>\n          </div>\n        ) : null}\n        <Resizable\n          onResizeStop={(evt, direction, ref, d) =>\n            setSidebarWidths(LocalStorageKeys.controls_width, d)\n          }\n          defaultSize={{\n            width: getSidebarWidths(LocalStorageKeys.controls_width),\n            height: '100%',\n          }}\n          minWidth={defaultSidebarsWidth[LocalStorageKeys.controls_width]}\n          maxWidth=\"33%\"\n          enable={{ right: true }}\n          className=\"col-sm-3 explore-column controls-column\"\n        >\n          <ConnectedControlPanelsContainer\n            exploreState={props.exploreState}\n            actions={props.actions}\n            form_data={props.form_data}\n            controls={props.controls}\n            chart={props.chart}\n            datasource_type={props.datasource_type}\n            isDatasourceMetaLoading={props.isDatasourceMetaLoading}\n            onQuery={onQuery}\n            onStop={onStop}\n            canStopQuery={props.can_add || props.can_overwrite}\n            errorMessage={errorMessage}\n            chartIsStale={chartIsStale}\n          />\n        </Resizable>\n        <div\n          className={cx(\n            'main-explore-content',\n            isCollapsed ? 'col-sm-9' : 'col-sm-7',\n          )}\n        >\n          {renderChartContainer()}\n        </div>\n      </ExplorePanelContainer>\n      {props.isSaveModalVisible && (\n        <SaveModal\n          addDangerToast={props.addDangerToast}\n          actions={props.actions}\n          form_data={props.form_data}\n          sliceName={props.sliceName}\n          dashboardId={props.dashboardId}\n        />\n      )}\n    </ExploreContainer>\n  );\n}\n\nExploreViewContainer.propTypes = propTypes;\n\nfunction mapStateToProps(state) {\n  const {\n    explore,\n    charts,\n    common,\n    impressionId,\n    dataMask,\n    reports,\n    user,\n    saveModal,\n  } = state;\n  const { controls, slice, datasource, metadata } = explore;\n  const form_data = getFormDataFromControls(controls);\n  const slice_id = form_data.slice_id ?? slice?.slice_id ?? 0; // 0 - unsaved chart\n  form_data.extra_form_data = mergeExtraFormData(\n    { ...form_data.extra_form_data },\n    {\n      ...dataMask[slice_id]?.ownState,\n    },\n  );\n  const chart = charts[slice_id];\n\n  let dashboardId = Number(explore.form_data?.dashboardId);\n  if (Number.isNaN(dashboardId)) {\n    dashboardId = undefined;\n  }\n\n  return {\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    datasource,\n    datasource_type: datasource.type,\n    datasourceId: datasource.datasource_id,\n    dashboardId,\n    controls: explore.controls,\n    can_add: !!explore.can_add,\n    can_download: !!explore.can_download,\n    can_overwrite: !!explore.can_overwrite,\n    column_formats: datasource?.column_formats ?? null,\n    containerId: slice\n      ? `slice-container-${slice.slice_id}`\n      : 'slice-container',\n    isStarred: explore.isStarred,\n    slice,\n    sliceName: explore.sliceName ?? slice?.slice_name ?? null,\n    triggerRender: explore.triggerRender,\n    form_data,\n    table_name: datasource.table_name,\n    vizType: form_data.viz_type,\n    standalone: !!explore.standalone,\n    force: !!explore.force,\n    chart,\n    timeout: common.conf.SUPERSET_WEBSERVER_TIMEOUT,\n    ownState: dataMask[slice_id]?.ownState,\n    impressionId,\n    user,\n    exploreState: explore,\n    reports,\n    metadata,\n    saveAction: explore.saveAction,\n    isSaveModalVisible: saveModal.isVisible,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const actions = {\n    ...exploreActions,\n    ...datasourcesActions,\n    ...saveModalActions,\n    ...chartActions,\n    ...logActions,\n  };\n  return {\n    actions: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withToasts(React.memo(ExploreViewContainer)));\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { DatasourceType, t } from '@superset-ui/core';\nimport {\n  ColumnMeta,\n  ColumnOption,\n  ControlConfig,\n  ControlPanelSectionConfig,\n} from '@superset-ui/chart-controls';\nimport { ExplorePageInitialData } from './types';\n\nexport const controlPanelSectionsChartOptions: (ControlPanelSectionConfig | null)[] =\n  [\n    null,\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'color_scheme',\n          {\n            name: 'rose_area_proportion',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Use Area Proportions'),\n              description: t(\n                'Check if the Rose Chart should use segment area instead of ' +\n                  'segment radius for proportioning',\n              ),\n              default: false,\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'stacked_style',\n            config: {\n              type: 'SelectControl',\n              label: t('Stacked Style'),\n              renderTrigger: true,\n              choices: [\n                ['stack', t('stack')],\n                ['stream', t('stream')],\n                ['expand', t('expand')],\n              ],\n              default: 'stack',\n              description: '',\n            },\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsOnlyColorScheme: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['color_scheme']],\n    },\n  ];\n\nexport const controlPanelSectionsChartOptionsTable: ControlPanelSectionConfig[] =\n  [\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          'metric',\n          'metrics',\n          {\n            name: 'all_columns',\n            config: {\n              type: 'SelectControl',\n              multi: true,\n              label: t('Columns'),\n              default: [],\n              description: t('Columns to display'),\n              optionRenderer: c => <ColumnOption column={c} showType />,\n              valueKey: 'column_name',\n              mapStateToProps: stateRef => ({\n                options: stateRef.datasource?.columns || [],\n              }),\n              freeForm: true,\n            } as ControlConfig<'SelectControl', ColumnMeta>,\n          },\n        ],\n      ],\n    },\n  ];\n\nexport const exploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '8__table',\n    metric: 'count',\n    slice_id: 371,\n    viz_type: 'table',\n  },\n  slice: {\n    cache_timeout: null,\n    description: null,\n    slice_id: 371,\n    slice_name: 'Age distribution of respondents',\n    is_managed_externally: false,\n    form_data: {\n      datasource: '8__table',\n      metric: 'count',\n      slice_id: 371,\n      viz_type: 'table',\n    },\n  },\n  dataset: {\n    id: 8,\n    type: DatasourceType.Table,\n    columns: [{ column_name: 'a' }],\n    metrics: [{ metric_name: 'first' }, { metric_name: 'second' }],\n    column_formats: {},\n    currency_formats: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    datasource_name: '8__table',\n    description: null,\n  },\n};\n\nexport const fallbackExploreInitialData: ExplorePageInitialData = {\n  form_data: {\n    datasource: '0__table',\n    viz_type: 'table',\n  },\n  dataset: {\n    id: 0,\n    type: DatasourceType.Table,\n    columns: [],\n    metrics: [],\n    column_formats: {},\n    currency_formats: {},\n    verbose_map: {},\n    main_dttm_col: '',\n    owners: [],\n    datasource_name: 'missing_datasource',\n    name: 'missing_datasource',\n    description: null,\n  },\n  slice: null,\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport isEqual from 'lodash/isEqual';\nimport {\n  AdhocFilter,\n  ensureIsArray,\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS,\n  EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS,\n  isDefined,\n  isFreeFormAdhocFilter,\n  isSimpleAdhocFilter,\n  JsonObject,\n  NO_TIME_RANGE,\n  QueryFormData,\n  QueryObjectFilterClause,\n  SimpleAdhocFilter,\n} from '@superset-ui/core';\nimport { simpleFilterToAdhoc } from 'src/utils/simpleFilterToAdhoc';\n\nconst removeExtraFieldForNewCharts = (\n  filters: AdhocFilter[],\n  isNewChart: boolean,\n) =>\n  filters.map(filter => {\n    if (filter.isExtra) {\n      return { ...filter, isExtra: !isNewChart };\n    }\n    return filter;\n  });\n\nconst removeAdhocFilterDuplicates = (filters: AdhocFilter[]) => {\n  const isDuplicate = (\n    adhocFilter: AdhocFilter,\n    existingFilters: AdhocFilter[],\n  ) =>\n    existingFilters.some(\n      (existingFilter: AdhocFilter) =>\n        (isFreeFormAdhocFilter(existingFilter) &&\n          isFreeFormAdhocFilter(adhocFilter) &&\n          existingFilter.clause === adhocFilter.clause &&\n          existingFilter.sqlExpression === adhocFilter.sqlExpression) ||\n        (isSimpleAdhocFilter(existingFilter) &&\n          isSimpleAdhocFilter(adhocFilter) &&\n          existingFilter.operator === adhocFilter.operator &&\n          existingFilter.subject === adhocFilter.subject &&\n          ((!('comparator' in existingFilter) &&\n            !('comparator' in adhocFilter)) ||\n            ('comparator' in existingFilter &&\n              'comparator' in adhocFilter &&\n              isEqual(existingFilter.comparator, adhocFilter.comparator)))),\n    );\n\n  return filters.reduce((acc, filter) => {\n    if (!isDuplicate(filter, acc)) {\n      acc.push(filter);\n    }\n    return acc;\n  }, [] as AdhocFilter[]);\n};\n\nconst mergeFilterBoxToFormData = (\n  exploreFormData: QueryFormData,\n  dashboardFormData: JsonObject,\n) => {\n  const dateColumns = {\n    __time_range: 'time_range',\n    __time_col: 'granularity_sqla',\n    __time_grain: 'time_grain_sqla',\n    __granularity: 'granularity',\n  };\n  const appliedTimeExtras = {};\n\n  const filterBoxData: JsonObject = {};\n  ensureIsArray(dashboardFormData.extra_filters).forEach(filter => {\n    if (dateColumns[filter.col]) {\n      if (filter.val !== NO_TIME_RANGE) {\n        filterBoxData[dateColumns[filter.col]] = filter.val;\n        appliedTimeExtras[filter.col] = filter.val;\n      }\n    } else {\n      const adhocFilter = simpleFilterToAdhoc({\n        ...(filter as QueryObjectFilterClause),\n        isExtra: true,\n      });\n      filterBoxData.adhoc_filters = [\n        ...ensureIsArray(filterBoxData.adhoc_filters),\n        adhocFilter,\n      ];\n    }\n  });\n  filterBoxData.applied_time_extras = appliedTimeExtras;\n  return filterBoxData;\n};\n\nconst mergeNativeFiltersToFormData = (\n  exploreFormData: QueryFormData,\n  dashboardFormData: JsonObject,\n) => {\n  const nativeFiltersData: JsonObject = {};\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  Object.entries(EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS).forEach(\n    ([srcKey, targetKey]) => {\n      const val = extraFormData[srcKey];\n      if (isDefined(val)) {\n        nativeFiltersData[targetKey] = val;\n      }\n    },\n  );\n\n  if ('time_grain_sqla' in extraFormData) {\n    nativeFiltersData.time_grain_sqla = extraFormData.time_grain_sqla;\n  }\n  if ('granularity_sqla' in extraFormData) {\n    nativeFiltersData.granularity_sqla = extraFormData.granularity_sqla;\n  }\n\n  const extras = dashboardFormData.extras || {};\n  EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS.forEach(key => {\n    const val = extraFormData[key];\n    if (isDefined(val)) {\n      extras[key] = val;\n    }\n  });\n  if (Object.keys(extras).length) {\n    nativeFiltersData.extras = extras;\n  }\n\n  nativeFiltersData.adhoc_filters = ensureIsArray(\n    extraFormData.adhoc_filters,\n  ).map(filter => ({\n    ...filter,\n    isExtra: true,\n  }));\n\n  const appendFilters = ensureIsArray(extraFormData.filters).map(extraFilter =>\n    simpleFilterToAdhoc({ ...extraFilter, isExtra: true }),\n  );\n  Object.keys(exploreFormData).forEach(key => {\n    if (key.match(/adhoc_filter.*/)) {\n      nativeFiltersData[key] = [\n        ...ensureIsArray(nativeFiltersData[key]),\n        ...appendFilters,\n      ];\n    }\n  });\n  return nativeFiltersData;\n};\n\nconst applyTimeRangeFilters = (\n  dashboardFormData: JsonObject,\n  adhocFilters: AdhocFilter[],\n) => {\n  const extraFormData = dashboardFormData.extra_form_data || {};\n  if ('time_range' in extraFormData) {\n    return adhocFilters.map((filter: SimpleAdhocFilter) => {\n      if (filter.operator === 'TEMPORAL_RANGE') {\n        return {\n          ...filter,\n          comparator: extraFormData.time_range,\n          isExtra: true,\n        };\n      }\n      return filter;\n    });\n  }\n  return adhocFilters;\n};\n\nexport const getFormDataWithDashboardContext = (\n  exploreFormData: QueryFormData,\n  dashboardContextFormData: JsonObject,\n) => {\n  const filterBoxData = mergeFilterBoxToFormData(\n    exploreFormData,\n    dashboardContextFormData,\n  );\n  const nativeFiltersData = mergeNativeFiltersToFormData(\n    exploreFormData,\n    dashboardContextFormData,\n  );\n  const adhocFilters = [\n    ...Object.keys(exploreFormData),\n    ...Object.keys(filterBoxData),\n    ...Object.keys(nativeFiltersData),\n  ]\n    .filter(key => key.match(/adhoc_filter.*/))\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: removeExtraFieldForNewCharts(\n          applyTimeRangeFilters(\n            dashboardContextFormData,\n            removeAdhocFilterDuplicates([\n              ...ensureIsArray(exploreFormData[key]),\n              ...ensureIsArray(filterBoxData[key]),\n              ...ensureIsArray(nativeFiltersData[key]),\n            ]),\n          ),\n          exploreFormData.slice_id === 0,\n        ),\n      }),\n      {},\n    );\n\n  return {\n    ...exploreFormData,\n    ...dashboardContextFormData,\n    ...filterBoxData,\n    ...nativeFiltersData,\n    ...adhocFilters,\n  };\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport {\n  getSharedLabelColor,\n  isDefined,\n  JsonObject,\n  makeApi,\n  SharedLabelColorSource,\n  t,\n} from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport getFormDataWithExtraFilters from 'src/dashboard/util/charts/getFormDataWithExtraFilters';\nimport { getAppliedFilterValues } from 'src/dashboard/util/activeDashboardFilters';\nimport { getParsedExploreURLParams } from 'src/explore/exploreUtils/getParsedExploreURLParams';\nimport { hydrateExplore } from 'src/explore/actions/hydrateExplore';\nimport ExploreViewContainer from 'src/explore/components/ExploreViewContainer';\nimport { ExploreResponsePayload, SaveActionType } from 'src/explore/types';\nimport { fallbackExploreInitialData } from 'src/explore/fixtures';\nimport { getItem, LocalStorageKeys } from 'src/utils/localStorageHelpers';\nimport { getFormDataWithDashboardContext } from 'src/explore/controlUtils/getFormDataWithDashboardContext';\n\nconst isValidResult = (rv: JsonObject): boolean =>\n  rv?.result?.form_data && isDefined(rv?.result?.dataset?.id);\n\nconst fetchExploreData = async (exploreUrlParams: URLSearchParams) => {\n  try {\n    const rv = await makeApi<{}, ExploreResponsePayload>({\n      method: 'GET',\n      endpoint: 'api/v1/explore/',\n    })(exploreUrlParams);\n    if (isValidResult(rv)) {\n      return rv;\n    }\n    let message = t('Failed to load chart data');\n    const responseError = rv?.result?.message;\n    if (responseError) {\n      message = `${message}:\\n${responseError}`;\n    }\n    throw new Error(message);\n  } catch (err) {\n    // todo: encapsulate the error handler\n    const clientError = await getClientErrorObject(err);\n    throw new Error(\n      clientError.message ||\n        clientError.error ||\n        t('Failed to load chart data.'),\n    );\n  }\n};\n\nconst getDashboardPageContext = (pageId?: string | null) => {\n  if (!pageId) {\n    return null;\n  }\n  return (\n    getItem(LocalStorageKeys.dashboard__explore_context, {})[pageId] || null\n  );\n};\n\nconst getDashboardContextFormData = () => {\n  const dashboardPageId = getUrlParam(URL_PARAMS.dashboardPageId);\n  const dashboardContext = getDashboardPageContext(dashboardPageId);\n  if (dashboardContext) {\n    const sliceId = getUrlParam(URL_PARAMS.sliceId) || 0;\n    const {\n      labelColors,\n      sharedLabelColors,\n      colorScheme,\n      chartConfiguration,\n      nativeFilters,\n      filterBoxFilters,\n      dataMask,\n      dashboardId,\n    } = dashboardContext;\n    const dashboardContextWithFilters = getFormDataWithExtraFilters({\n      chart: { id: sliceId },\n      filters: getAppliedFilterValues(sliceId, filterBoxFilters),\n      nativeFilters,\n      chartConfiguration,\n      colorScheme,\n      dataMask,\n      labelColors,\n      sharedLabelColors,\n      sliceId,\n      allSliceIds: [sliceId],\n      extraControls: {},\n    });\n    Object.assign(dashboardContextWithFilters, { dashboardId });\n    return dashboardContextWithFilters;\n  }\n  return null;\n};\n\nexport default function ExplorePage() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const isExploreInitialized = useRef(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  useEffect(() => {\n    const exploreUrlParams = getParsedExploreURLParams(location);\n    const saveAction = getUrlParam(\n      URL_PARAMS.saveAction,\n    ) as SaveActionType | null;\n    const dashboardContextFormData = getDashboardContextFormData();\n    if (!isExploreInitialized.current || !!saveAction) {\n      fetchExploreData(exploreUrlParams)\n        .then(({ result }) => {\n          const formData =\n            !isExploreInitialized.current && dashboardContextFormData\n              ? getFormDataWithDashboardContext(\n                  result.form_data,\n                  dashboardContextFormData,\n                )\n              : result.form_data;\n          dispatch(\n            hydrateExplore({\n              ...result,\n              form_data: formData,\n              saveAction,\n            }),\n          );\n        })\n        .catch(err => {\n          dispatch(hydrateExplore(fallbackExploreInitialData));\n          dispatch(addDangerToast(err.message));\n        })\n        .finally(() => {\n          setIsLoaded(true);\n          isExploreInitialized.current = true;\n        });\n    }\n    getSharedLabelColor().source = SharedLabelColorSource.explore;\n  }, [dispatch, location]);\n\n  if (!isLoaded) {\n    return <Loading />;\n  }\n  return <ExploreViewContainer />;\n}\n"],"names":["rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","CONTAINS","ACRONYM","MATCHES","NO_MATCH","matchSorter","defaultBaseSortFn","a","b","String","rankedValue","localeCompare","items","value","options","_options","keys","_options$threshold","threshold","_options$baseSort","baseSort","_options$sorter","sorter","matchedItems","sort","aRank","rank","aKeyIndex","keyIndex","bRank","bKeyIndex","sortRankedValues","reduce","matches","item","index","rankingInfo","getMatchRanking","keyThreshold","valuesToRank","allValues","j","J","length","key","attributes","getKeyAttributes","itemValues","getItemValues","i","I","push","itemValue","getAllValuesToRank","_ref2","_ref3","newRank","newRankedValue","minRanking","maxRanking","getHighestRanking","_rankingInfo$keyThres","map","_ref","testString","stringToRank","prepareValueForComparison","toLowerCase","startsWith","includes","string","acronym","split","forEach","wordInString","splitByHyphenWord","substr","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","spreadPercentage","inOrderPercentage","firstIndex","getClosenessRanking","_ref4","keepDiacritics","Object","hasOwnProperty","call","path","values","nestedKey","nestedValues","nestedItem","nestedValue","concat","Array","isArray","result","apply","getNestedValues","defaultKeyAttributes","Infinity","characterMap","chars","join","allAccents","RegExp","firstAccent","removeAccents","replace","match","module","exports","has","remove","TimerLabel","styled","Label","theme","typography","families","monospace","Timer","endTime","isRunning","startTime","status","clockStr","setClockStr","useState","timer","useRef","useEffect","stopTimer","current","clearInterval","undefined","setInterval","endDttm","now","fDuration","___EmotionJSX","type","role","EXPLORE_URL_SEARCH_PARAMS","form_data","name","parser","formData","formDataObject","JSON","parse","datasource","datasource_id","datasource_type","slice_id","form_data_key","permalink_key","viz_type","dashboard_id","EXPLORE_URL_PATH_PARAMS","p","table","getParsedExploreURLSearchParams","search","urlSearchParams","URLSearchParams","from","acc","currentParam","_EXPLORE_URL_SEARCH_P4","paramValue","get","parsedParamValue","_EXPLORE_URL_SEARCH_P","_EXPLORE_URL_SEARCH_P2","_EXPLORE_URL_SEARCH_P3","getParsedExploreURLParams","location","window","entries","pathname","re","pathGroups","entry","getParsedExploreURLPathParams","TooltipContent","cachedTimestamp","cachedText","t","moment","fromNow","className","onClick","hovered","setHovered","labelType","Tooltip","title","id","onMouseOver","onMouseOut","CHART_STATUS_MAP","ChartPills","forwardRef","ref","queriesResponse","chartStatus","chartUpdateStartTime","chartUpdateEndTime","refreshCachedQuery","rowLimit","isLoading","firstQueryResponse","css","gridUnit","RowCountLabel","rowcount","Number","limit","is_cached","CachedLabel","cached_dttm","AlertContainer","div","colors","info","base","light2","dark2","sizes","m","dark1","alert","ButtonContainer","Title","weights","bold","typeChart","warning","danger","ExploreAlert","bodyText","primaryButtonAction","secondaryButtonAction","primaryButtonText","secondaryButtonText","Button","buttonStyle","buttonSize","propTypes","actions","PropTypes","isRequired","onQuery","can_overwrite","can_download","dashboardId","column_formats","containerId","isStarred","slice","sliceName","table_name","vizType","ownState","standalone","force","timeout","chartIsStale","chart","chartPropShape","errorMessage","triggerRender","GUTTER_SIZE_FACTOR","INITIAL_SIZES","MIN_SIZES","Styles","grayscale","_ref5","showSplite","_ref6","_ref8","styles","ExploreChartPanel","_ref7","_metaDataRegistry$get","chartAlert","useTheme","gutterMargin","gutterHeight","chartPanelRef","observerRef","resizeObserverRef","width","chartPanelWidth","height","chartPanelHeight","setChartPanelSize","onResize","useCallback","getBoundingClientRect","useResizeDetector","refreshMode","refreshRate","useResizeDetectorByObserver","splitSizes","setSplitSizes","isFeatureEnabled","FeatureFlag","DATAPANEL_CLOSED_BY_DEFAULT","getItem","LocalStorageKeys","chart_split_sizes","setShowSplit","is_datapanel_open","showDatasetModal","setShowDatasetModal","metaDataRegistry","getChartMetadataRegistry","useLegacyApi","vizTypeNeedsDataset","DatasourceType","Table","showAlertBanner","ensureIsArray","updateQueryContext","async","query_context","queryContext","buildV1ChartDataPayload","resultFormat","resultType","setDataMask","SupersetClient","put","endpoint","headers","body","stringify","query_context_generation","setItem","onDragEnd","setForceQuery","postChartFormData","updateQueryFormData","onCollapseChange","isOpen","renderChart","ChartContainer","Math","floor","annotationData","chartStackTrace","chartId","latestQueryFormData","setControlValue","triggerQuery","panelBody","useMemo","Alert","message","description","React","tabIndex","getChartRequiredFieldsMissingMessage","row_limit","standaloneChartBody","queryFormData","setQueryFormData","elementStyle","dimension","elementSize","gutterSize","standaloneClass","document","Split","minSize","direction","expandToMin","DataTablesPane","queryForce","SaveDatasetModal","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","getDatasourceAsSaveableDataset","openWindow","RunQueryButton","loading","onStop","isNewChart","canStopQuery","disabled","confirm","Modal","iconStyles","actionButtonsContainerStyles","rgba","light5","opacity","mediumLight","ControlPanelsTabs","Tabs","fullWidth","light3","s","sectionsToExpand","sections","section","expanded","label","isTimeSection","legacyRegularTime","legacyTimeseriesTime","hasTimeColumn","_datasource$columns","columns","some","c","is_dttm","useResetOnChangeRef","initialValue","resetOnChangeValue","prevResetOnChangeValue","props","_props$exploreState$d3","_props$exploreState$d4","pluginContext","useContext","PluginContext","prevState","usePrevious","exploreState","prevDatasource","prevChartStatus","showDatasourceAlert","setShowDatasourceAlert","containerRef","controlsTransferred","useSelector","state","explore","defaultTimeFilter","_state$common","_state$common$conf","common","conf","DEFAULT_TIME_FILTER","x_axis","adhoc_filters","previousXAxis","isTemporalColumn","find","filter","expressionType","operator","Operators","TEMPORAL_RANGE","subject","content","onOk","clause","CLAUSES","WHERE","comparator","NO_TIME_RANGE","shouldUpdateControls","removeDatasourceWarningFromControl","isDefined","datasourceWarning","controlName","_ensureIsArray","controls","alteredControls","_props$exploreState$d","_props$exploreState$d2","_containerRef$current","Query","scrollTo","expandedQuerySections","expandedCustomizeSections","querySections","customizeSections","datasourceType","getSectionsToRender","tabOverride","controlSetRows","rows","control","config","renderTrigger","getState","resetTransferredControls","default","handleClearFormClick","handleContinueClick","shouldRecalculateControlState","Boolean","shouldMapStateToProps","sectionHasHadNoErrors","renderControlPanelSection","sectionId","hasErrors","validationErrors","errorColor","error","Collapse","Panel","header","PanelHeader","Icons","InfoCircleOutlined","_kebabCase","controlSets","renderedControls","controlItem","renderControl","visibility","controlData","mapStateToProps","baseLabel","baseDescription","restProps","isVisible","canDelete","valueToBeDeleted","_controls$time_range","isTemporalRange","time_range","Control","_extends","x","ControlRow","hasControlsTransferred","DatasourceAlert","dataTabHasHadNoErrors","dataTabTitle","placement","ExclamationCircleOutlined","getChartControlPanelRegistry","Loading","showCustomizeTab","allowOverflow","TabPane","tab","defaultActiveKey","expandIconPosition","ghost","SK_DASHBOARD_ID","StyledModal","SaveModal","constructor","_props$datasource","_props$form_data","super","handleDatasetNameChange","e","this","setState","datasetName","target","handleRedirect","windowLocationSearch","searchParams","set","action","delete","toString","loadDashboard","json","loadDashboards","page","pageSize","queryParams","rison","filters","col","opr","user","userId","page_size","order_column","count","data","dashboard","dashboard_title","totalCount","renderSaveChartModal","_this$props$datasourc","Form","layout","FormItem","Radio","canOverwriteSlice","checked","onChange","changeAction","required","Input","placeholder","newSliceName","onSliceNameChange","InfoTooltipWithTrigger","tooltip","DASHBOARD_NATIVE_FILTERS","AsyncSelect","allowClear","allowNewOptions","ariaLabel","onDashboardChange","closable","_css","marginTop","isNewDashboard","chartWillBeCreated","renderFooter","_this$props$datasourc2","_this$props$datasourc3","saveOrOverwrite","bind","_this$props$slice","_this$props$slice$own","_this$props$slice2","owners","is_managed_externally","lastDashboard","sessionStorage","parseInt","canUserEditDashboard","addDangerToast","event","dispatch","setSaveChartModalVisibility","gotodash","_this$props$datasourc4","schema","sql","database","templateParams","saveDataset","datasourceName","sliceDashboards","getSliceDashboards","url_params","_dashboard","validId","createDashboard","saveSliceFailed","dashboards","setFormData","updateSlice","new","createSlice","removeItem","history","url","render","show","footer","position","withRouter","connect","saveModal","saveModalAlert","DatasourceItemContainer","DatasourcePanelDragOption","labelRef","showTooltip","isDragging","drag","useDrag","collect","monitor","optionProps","showType","DndItemType","Column","StyledColumnOption","column","StyledMetricOption","metric","Drag","enableExploreDnd","ENABLE_EXPLORE_DRAG_AND_DROP","button","primary","DatasourceContainer","light1","LabelWrapper","light4","SectionHeader","span","StyledInfoboxWrapper","LabelContainer","extendedProps","children","DataSourcePanel","_lists$metrics3","datasourceControl","shouldForceUpdate","_columns","metrics","_isArray","col1","col2","showSaveDatasetModal","setShowSaveDatasetModal","inputValue","setInputValue","lists","setList","showAllMetrics","setShowAllMetrics","showAllColumns","setShowAllColumns","_debounce","_item$description","_item$expression","expression","_item$description2","_item$expression2","_b$item$is_certified","_b$item","_a$item$is_certified","_a$item","_a$rankedValue","_b$rankedValue","is_certified","FAST_DEBOUNCE","metricSlice","_lists$metrics","columnSlice","_lists$columns","_b$is_certified","_a$is_certified","saveableDatasets","query","saved_query","SavedQuery","datasourceIsSaveable","mainBody","_lists$metrics2","evt","showInfoboxCheck","onClose","metric_name","Metric","column_name","memoizedControls","memoizeOne","controlPanel","controlsMap","controlPanelSections","isControlPanelSectionConfig","row","origFormData","currentFormData","StyledLabel","alterForComparison","AlteredSliceTag","diffs","getDiffs","getControlsForVizType","getRowsFromDiffs","hasDiffs","_isEmpty","UNSAFE_componentWillReceiveProps","newProps","_isEqual","diff","before","formatValue","after","ofd","sanitizeFormData","cfd","fdKeys","fdKey","isEqualish","val1","val2","_controlsMap$key","_controlsMap$key2","_controlsMap$key3","_controlsMap$key4","v","filterVal","safeStringify","formattedValue","_v$label","_v$label2","renderModalBody","accessor","Header","TableView","columnsForWrapText","renderTriggerNode","ModalTrigger","triggerNode","modalTitle","modalBody","responsive","canOverwrite","canDownload","saveDisabled","saveButtonStyles","additionalItemsStyles","ExploreChartHeader","metadata","useDispatch","sliceFormData","isPropertiesModalOpen","setIsPropertiesModalOpen","d","_response$json","response","json_metadata","sharedLabelColors","shared_label_colors","customLabelColors","label_colors","mergedLabelColors","categoricalNamespace","CategoricalColorNamespace","getNamespace","setColor","color_scheme","logging","updateCategoricalNamespace","showModal","sliceUpdated","useHistory","redirectSQLLab","redirectToSQLLab","openNewWindow","menu","isDropdownVisible","setIsDropdownVisible","useExploreAdditionalActionsMenu","openPropertiesModal","metadataBar","MetadataType","DASHBOARDS","tn","LAST_MODIFIED","changed_on_humanized","modifiedBy","changed_by","OWNER","createdBy","created_by","createdOn","created_on_humanized","DESCRIPTION","MetadataBar","tooltipPlacement","oldSliceName","slice_name","PageHeaderWithActions","editableTitleProps","canEdit","onSave","updateChartTitle","showTitlePanelItems","certificatiedBadgeProps","certifiedBy","certified_by","details","certification_details","showFaveStar","faveStarProps","itemId","fetchFaveStar","saveFaveStar","titlePanelAdditionalItems","chartTitle","rightPanelAdditionalItems","SaveOutlined","iconSize","additionalActionsMenu","menuDropdownProps","onVisibleChange","PropertiesModal","closePropertiesModal","isDatasourceMetaLoading","forcedHeight","impressionId","saveAction","isSaveModalVisible","ExploreContainer","ExplorePanelContainer","updateHistory","datasourceId","isReplace","tabId","payload","params","additionalParam","fromEntries","URL_PARAMS","sliceId","urlParams","RESERVED_CHART_URL_PARAMS","stateModifier","postFormData","getUrlParam","formDataKey","putFormData","mountExploreUrl","warn","ExploreViewContainer","dynamicPlugin","usePluginContext","dynamicPlugins","isDynamicPluginLoading","mounting","wasDynamicPluginLoading","previousControls","lastQueriedControls","setLastQueriedControls","isCollapsed","setIsCollapsed","setShouldForceUpdate","useTabId","defaultSidebarsWidth","controls_width","datasource_width","addHistory","_temp","handlePopstate","setExploreControls","handleKeydown","ctrlKey","metaKey","isEnter","keyCode","isS","saveSlice","add_to_dash","goto_dash","then","slice_url","toggleCollapse","useComponentDidMount","logEvent","LOG_ACTIONS_MOUNT_EXPLORER","useChangeEffect","previous","previousHandlePopstate","removeEventListener","addEventListener","previousHandleKeyDown","dynamicPluginControlsReady","reRenderChart","controlsChanged","newQueryFormData","getFormDataFromControls","_pick","renderTriggered","Date","getTime","fetchDatasourceMetadata","displayControlsChanged","areObjectsEqual","ignoreFields","dontRefreshOnChange","setSaveAction","LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS","controlsWithErrors","errorMessages","errors","Set","flat","_control$validationEr","labels","style","textAlign","renderChartContainer","getSidebarWidths","setSidebarWidths","newDimension","ConnectedExploreChartHeader","reports","Global","Resizable","onResizeStop","defaultSize","minWidth","maxWidth","enable","right","Expand","iconColor","ConnectedControlPanelsContainer","queryController","abort","can_add","cx","_form_data$slice_id","_dataMask$slice_id","_explore$form_data","_datasource$column_fo","_explore$sliceName","_dataMask$slice_id2","charts","dataMask","extra_form_data","mergeExtraFormData","isNaN","SUPERSET_WEBSERVER_TIMEOUT","exploreActions","datasourcesActions","saveModalActions","chartActions","logActions","bindActionCreators","withToasts","fallbackExploreInitialData","dataset","currency_formats","verbose_map","main_dttm_col","datasource_name","removeAdhocFilterDuplicates","isDuplicate","adhocFilter","existingFilter","isFreeFormAdhocFilter","sqlExpression","isSimpleAdhocFilter","isEqual","applyTimeRangeFilters","dashboardFormData","adhocFilters","extraFormData","isExtra","getFormDataWithDashboardContext","exploreFormData","dashboardContextFormData","filterBoxData","mergeFilterBoxToFormData","dateColumns","__time_range","__time_col","__time_grain","__granularity","appliedTimeExtras","extra_filters","val","simpleFilterToAdhoc","applied_time_extras","nativeFiltersData","mergeNativeFiltersToFormData","EXTRA_FORM_DATA_OVERRIDE_REGULAR_MAPPINGS","srcKey","targetKey","time_grain_sqla","granularity_sqla","extras","EXTRA_FORM_DATA_OVERRIDE_EXTRA_KEYS","appendFilters","extraFilter","removeExtraFieldForNewCharts","fetchExploreData","exploreUrlParams","_rv$result3","rv","makeApi","method","isValidResult","_rv$result","_rv$result2","_rv$result2$dataset","responseError","Error","err","clientError","getClientErrorObject","getDashboardContextFormData","dashboardContext","pageId","dashboardPageId","dashboard__explore_context","getDashboardPageContext","labelColors","colorScheme","chartConfiguration","nativeFilters","filterBoxFilters","dashboardContextWithFilters","getFormDataWithExtraFilters","getAppliedFilterValues","allSliceIds","extraControls","assign","ExplorePage","isLoaded","setIsLoaded","isExploreInitialized","useLocation","hydrateExplore","catch","finally","getSharedLabelColor","source","SharedLabelColorSource"],"sourceRoot":""}