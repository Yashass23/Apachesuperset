{"version":3,"file":"ebe8181f34d20910b0a2.chunk.js","mappings":"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","sources":["webpack://superset/./packages/superset-ui-core/src/utils/getSelectedText.ts","webpack://superset/./node_modules/@ant-design/icons/es/icons/PlusSquareOutlined.js","webpack://superset/./node_modules/@ant-design/icons/es/icons/MinusSquareOutlined.js","webpack://superset/./plugins/plugin-chart-pivot-table/src/react-pivottable/utilities.js","webpack://superset/./plugins/plugin-chart-pivot-table/src/react-pivottable/Styles.js","webpack://superset/./plugins/plugin-chart-pivot-table/src/react-pivottable/TableRenderers.jsx","webpack://superset/./plugins/plugin-chart-pivot-table/src/react-pivottable/PivotTable.jsx","webpack://superset/./plugins/plugin-chart-pivot-table/src/PivotTableChart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport const getSelectedText = () => window.getSelection()?.toString();\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusSquareOutlined = function PlusSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusSquareOutlinedSvg\n  }));\n};\nPlusSquareOutlined.displayName = 'PlusSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusSquareOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar MinusSquareOutlined = function MinusSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusSquareOutlinedSvg\n  }));\n};\nMinusSquareOutlined.displayName = 'MinusSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusSquareOutlined);","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\n\nconst addSeparators = function (nStr, thousandsSep, decimalSep) {\n  const x = String(nStr).split('.');\n  let x1 = x[0];\n  const x2 = x.length > 1 ? decimalSep + x[1] : '';\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, `$1${thousandsSep}$2`);\n  }\n  return x1 + x2;\n};\n\nconst numberFormat = function (optsIn) {\n  const defaults = {\n    digitsAfterDecimal: 2,\n    scaler: 1,\n    thousandsSep: ',',\n    decimalSep: '.',\n    prefix: '',\n    suffix: '',\n  };\n  const opts = { ...defaults, ...optsIn };\n  return function (x) {\n    if (Number.isNaN(x) || !Number.isFinite(x)) {\n      return '';\n    }\n    const result = addSeparators(\n      (opts.scaler * x).toFixed(opts.digitsAfterDecimal),\n      opts.thousandsSep,\n      opts.decimalSep,\n    );\n    return `${opts.prefix}${result}${opts.suffix}`;\n  };\n};\n\nconst rx = /(\\d+)|(\\D+)/g;\nconst rd = /\\d/;\nconst rz = /^0/;\nconst naturalSort = (as, bs) => {\n  // nulls first\n  if (bs !== null && as === null) {\n    return -1;\n  }\n  if (as !== null && bs === null) {\n    return 1;\n  }\n\n  // then raw NaNs\n  if (typeof as === 'number' && Number.isNaN(as)) {\n    return -1;\n  }\n  if (typeof bs === 'number' && Number.isNaN(bs)) {\n    return 1;\n  }\n\n  // numbers and numbery strings group together\n  const nas = Number(as);\n  const nbs = Number(bs);\n  if (nas < nbs) {\n    return -1;\n  }\n  if (nas > nbs) {\n    return 1;\n  }\n\n  // within that, true numbers before numbery strings\n  if (typeof as === 'number' && typeof bs !== 'number') {\n    return -1;\n  }\n  if (typeof bs === 'number' && typeof as !== 'number') {\n    return 1;\n  }\n  if (typeof as === 'number' && typeof bs === 'number') {\n    return 0;\n  }\n\n  // 'Infinity' is a textual number, so less than 'A'\n  if (Number.isNaN(nbs) && !Number.isNaN(nas)) {\n    return -1;\n  }\n  if (Number.isNaN(nas) && !Number.isNaN(nbs)) {\n    return 1;\n  }\n\n  // finally, \"smart\" string sorting per http://stackoverflow.com/a/4373421/112871\n  let a = String(as);\n  let b = String(bs);\n  if (a === b) {\n    return 0;\n  }\n  if (!rd.test(a) || !rd.test(b)) {\n    return a > b ? 1 : -1;\n  }\n\n  // special treatment for strings containing digits\n  a = a.match(rx);\n  b = b.match(rx);\n  while (a.length && b.length) {\n    const a1 = a.shift();\n    const b1 = b.shift();\n    if (a1 !== b1) {\n      if (rd.test(a1) && rd.test(b1)) {\n        return a1.replace(rz, '.0') - b1.replace(rz, '.0');\n      }\n      return a1 > b1 ? 1 : -1;\n    }\n  }\n  return a.length - b.length;\n};\n\nconst sortAs = function (order) {\n  const mapping = {};\n\n  // sort lowercased keys similarly\n  const lMapping = {};\n  order.forEach((element, i) => {\n    mapping[element] = i;\n    if (typeof element === 'string') {\n      lMapping[element.toLowerCase()] = i;\n    }\n  });\n  return function (a, b) {\n    if (a in mapping && b in mapping) {\n      return mapping[a] - mapping[b];\n    }\n    if (a in mapping) {\n      return -1;\n    }\n    if (b in mapping) {\n      return 1;\n    }\n    if (a in lMapping && b in lMapping) {\n      return lMapping[a] - lMapping[b];\n    }\n    if (a in lMapping) {\n      return -1;\n    }\n    if (b in lMapping) {\n      return 1;\n    }\n    return naturalSort(a, b);\n  };\n};\n\nconst getSort = function (sorters, attr) {\n  if (sorters) {\n    if (typeof sorters === 'function') {\n      const sort = sorters(attr);\n      if (typeof sort === 'function') {\n        return sort;\n      }\n    } else if (attr in sorters) {\n      return sorters[attr];\n    }\n  }\n  return naturalSort;\n};\n\n// aggregator templates default to US number formatting but this is overridable\nconst usFmt = numberFormat();\nconst usFmtInt = numberFormat({ digitsAfterDecimal: 0 });\nconst usFmtPct = numberFormat({\n  digitsAfterDecimal: 1,\n  scaler: 100,\n  suffix: '%',\n});\n\nconst fmtNonString = formatter => x => typeof x === 'string' ? x : formatter(x);\n\nconst baseAggregatorTemplates = {\n  count(formatter = usFmtInt) {\n    return () =>\n      function () {\n        return {\n          count: 0,\n          push() {\n            this.count += 1;\n          },\n          value() {\n            return this.count;\n          },\n          format: formatter,\n        };\n      };\n  },\n\n  uniques(fn, formatter = usFmtInt) {\n    return function ([attr]) {\n      return function () {\n        return {\n          uniq: [],\n          push(record) {\n            if (!Array.from(this.uniq).includes(record[attr])) {\n              this.uniq.push(record[attr]);\n            }\n          },\n          value() {\n            return fn(this.uniq);\n          },\n          format: fmtNonString(formatter),\n          numInputs: typeof attr !== 'undefined' ? 0 : 1,\n        };\n      };\n    };\n  },\n\n  sum(formatter = usFmt) {\n    return function ([attr]) {\n      return function () {\n        return {\n          sum: 0,\n          push(record) {\n            if (Number.isNaN(Number(record[attr]))) {\n              this.sum = record[attr];\n            } else {\n              this.sum += parseFloat(record[attr]);\n            }\n          },\n          value() {\n            return this.sum;\n          },\n          format: fmtNonString(formatter),\n          numInputs: typeof attr !== 'undefined' ? 0 : 1,\n        };\n      };\n    };\n  },\n\n  extremes(mode, formatter = usFmt) {\n    return function ([attr]) {\n      return function (data) {\n        return {\n          val: null,\n          sorter: getSort(\n            typeof data !== 'undefined' ? data.sorters : null,\n            attr,\n          ),\n          push(record) {\n            const x = record[attr];\n            if (['min', 'max'].includes(mode)) {\n              const coercedValue = Number(x);\n              if (Number.isNaN(coercedValue)) {\n                this.val =\n                  !this.val ||\n                  (mode === 'min' && x < this.val) ||\n                  (mode === 'max' && x > this.val)\n                    ? x\n                    : this.val;\n              } else {\n                this.val = Math[mode](\n                  coercedValue,\n                  this.val !== null ? this.val : coercedValue,\n                );\n              }\n            } else if (\n              mode === 'first' &&\n              this.sorter(x, this.val !== null ? this.val : x) <= 0\n            ) {\n              this.val = x;\n            } else if (\n              mode === 'last' &&\n              this.sorter(x, this.val !== null ? this.val : x) >= 0\n            ) {\n              this.val = x;\n            }\n          },\n          value() {\n            return this.val;\n          },\n          format(x) {\n            if (typeof x === 'number') {\n              return formatter(x);\n            }\n            return x;\n          },\n          numInputs: typeof attr !== 'undefined' ? 0 : 1,\n        };\n      };\n    };\n  },\n\n  quantile(q, formatter = usFmt) {\n    return function ([attr]) {\n      return function () {\n        return {\n          vals: [],\n          strMap: {},\n          push(record) {\n            const val = record[attr];\n            const x = Number(val);\n\n            if (Number.isNaN(x)) {\n              this.strMap[val] = (this.strMap[val] || 0) + 1;\n            } else {\n              this.vals.push(x);\n            }\n          },\n          value() {\n            if (\n              this.vals.length === 0 &&\n              Object.keys(this.strMap).length === 0\n            ) {\n              return null;\n            }\n\n            if (Object.keys(this.strMap).length) {\n              const values = Object.values(this.strMap).sort((a, b) => a - b);\n              const middle = Math.floor(values.length / 2);\n\n              const keys = Object.keys(this.strMap);\n              return keys.length % 2 !== 0\n                ? keys[middle]\n                : (keys[middle - 1] + keys[middle]) / 2;\n            }\n\n            this.vals.sort((a, b) => a - b);\n            const i = (this.vals.length - 1) * q;\n            return (this.vals[Math.floor(i)] + this.vals[Math.ceil(i)]) / 2.0;\n          },\n          format: fmtNonString(formatter),\n          numInputs: typeof attr !== 'undefined' ? 0 : 1,\n        };\n      };\n    };\n  },\n\n  runningStat(mode = 'mean', ddof = 1, formatter = usFmt) {\n    return function ([attr]) {\n      return function () {\n        return {\n          n: 0.0,\n          m: 0.0,\n          s: 0.0,\n          strValue: null,\n          push(record) {\n            const x = Number(record[attr]);\n            if (Number.isNaN(x)) {\n              this.strValue =\n                typeof record[attr] === 'string' ? record[attr] : this.strValue;\n              return;\n            }\n            this.n += 1.0;\n            if (this.n === 1.0) {\n              this.m = x;\n            }\n            const mNew = this.m + (x - this.m) / this.n;\n            this.s += (x - this.m) * (x - mNew);\n            this.m = mNew;\n          },\n          value() {\n            if (this.strValue) {\n              return this.strValue;\n            }\n\n            if (mode === 'mean') {\n              if (this.n === 0) {\n                return 0 / 0;\n              }\n              return this.m;\n            }\n            if (this.n <= ddof) {\n              return 0;\n            }\n            switch (mode) {\n              case 'var':\n                return this.s / (this.n - ddof);\n              case 'stdev':\n                return Math.sqrt(this.s / (this.n - ddof));\n              default:\n                throw new Error('unknown mode for runningStat');\n            }\n          },\n          format: fmtNonString(formatter),\n          numInputs: typeof attr !== 'undefined' ? 0 : 1,\n        };\n      };\n    };\n  },\n\n  sumOverSum(formatter = usFmt) {\n    return function ([num, denom]) {\n      return function () {\n        return {\n          sumNum: 0,\n          sumDenom: 0,\n          push(record) {\n            if (!Number.isNaN(Number(record[num]))) {\n              this.sumNum += parseFloat(record[num]);\n            }\n            if (!Number.isNaN(Number(record[denom]))) {\n              this.sumDenom += parseFloat(record[denom]);\n            }\n          },\n          value() {\n            return this.sumNum / this.sumDenom;\n          },\n          format: formatter,\n          numInputs:\n            typeof num !== 'undefined' && typeof denom !== 'undefined' ? 0 : 2,\n        };\n      };\n    };\n  },\n\n  fractionOf(wrapped, type = 'total', formatter = usFmtPct) {\n    return (...x) =>\n      function (data, rowKey, colKey) {\n        return {\n          selector: { total: [[], []], row: [rowKey, []], col: [[], colKey] }[\n            type\n          ],\n          inner: wrapped(...Array.from(x || []))(data, rowKey, colKey),\n          push(record) {\n            this.inner.push(record);\n          },\n          format: fmtNonString(formatter),\n          value() {\n            const acc = data\n              .getAggregator(...Array.from(this.selector || []))\n              .inner.value();\n\n            if (typeof acc === 'string') {\n              return acc;\n            }\n\n            return this.inner.value() / acc;\n          },\n          numInputs: wrapped(...Array.from(x || []))().numInputs,\n        };\n      };\n  },\n};\n\nconst extendedAggregatorTemplates = {\n  countUnique(f) {\n    return baseAggregatorTemplates.uniques(x => x.length, f);\n  },\n  listUnique(s, f) {\n    return baseAggregatorTemplates.uniques(x => x.join(s), f || (x => x));\n  },\n  max(f) {\n    return baseAggregatorTemplates.extremes('max', f);\n  },\n  min(f) {\n    return baseAggregatorTemplates.extremes('min', f);\n  },\n  first(f) {\n    return baseAggregatorTemplates.extremes('first', f);\n  },\n  last(f) {\n    return baseAggregatorTemplates.extremes('last', f);\n  },\n  median(f) {\n    return baseAggregatorTemplates.quantile(0.5, f);\n  },\n  average(f) {\n    return baseAggregatorTemplates.runningStat('mean', 1, f);\n  },\n  var(ddof, f) {\n    return baseAggregatorTemplates.runningStat('var', ddof, f);\n  },\n  stdev(ddof, f) {\n    return baseAggregatorTemplates.runningStat('stdev', ddof, f);\n  },\n};\n\nconst aggregatorTemplates = {\n  ...baseAggregatorTemplates,\n  ...extendedAggregatorTemplates,\n};\n\n// default aggregators & renderers use US naming and number formatting\nconst aggregators = (tpl => ({\n  Count: tpl.count(usFmtInt),\n  'Count Unique Values': tpl.countUnique(usFmtInt),\n  'List Unique Values': tpl.listUnique(', '),\n  Sum: tpl.sum(usFmt),\n  'Integer Sum': tpl.sum(usFmtInt),\n  Average: tpl.average(usFmt),\n  Median: tpl.median(usFmt),\n  'Sample Variance': tpl.var(1, usFmt),\n  'Sample Standard Deviation': tpl.stdev(1, usFmt),\n  Minimum: tpl.min(usFmt),\n  Maximum: tpl.max(usFmt),\n  First: tpl.first(usFmt),\n  Last: tpl.last(usFmt),\n  'Sum over Sum': tpl.sumOverSum(usFmt),\n  'Sum as Fraction of Total': tpl.fractionOf(tpl.sum(), 'total', usFmtPct),\n  'Sum as Fraction of Rows': tpl.fractionOf(tpl.sum(), 'row', usFmtPct),\n  'Sum as Fraction of Columns': tpl.fractionOf(tpl.sum(), 'col', usFmtPct),\n  'Count as Fraction of Total': tpl.fractionOf(tpl.count(), 'total', usFmtPct),\n  'Count as Fraction of Rows': tpl.fractionOf(tpl.count(), 'row', usFmtPct),\n  'Count as Fraction of Columns': tpl.fractionOf(tpl.count(), 'col', usFmtPct),\n}))(aggregatorTemplates);\n\nconst locales = {\n  en: {\n    aggregators,\n    localeStrings: {\n      renderError: 'An error occurred rendering the PivotTable results.',\n      computeError: 'An error occurred computing the PivotTable results.',\n      uiRenderError: 'An error occurred rendering the PivotTable UI.',\n      selectAll: 'Select All',\n      selectNone: 'Select None',\n      tooMany: '(too many to list)',\n      filterResults: 'Filter values',\n      apply: 'Apply',\n      cancel: 'Cancel',\n      totals: 'Totals',\n      vs: 'vs',\n      by: 'by',\n    },\n  },\n};\n\n// dateFormat deriver l10n requires month and day names to be passed in directly\nconst mthNamesEn = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\nconst dayNamesEn = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst zeroPad = number => `0${number}`.substr(-2, 2); // eslint-disable-line no-magic-numbers\n\nconst derivers = {\n  bin(col, binWidth) {\n    return record => record[col] - (record[col] % binWidth);\n  },\n  dateFormat(\n    col,\n    formatString,\n    utcOutput = false,\n    mthNames = mthNamesEn,\n    dayNames = dayNamesEn,\n  ) {\n    const utc = utcOutput ? 'UTC' : '';\n    return function (record) {\n      const date = new Date(Date.parse(record[col]));\n      if (Number.isNaN(date)) {\n        return '';\n      }\n      return formatString.replace(/%(.)/g, function (m, p) {\n        switch (p) {\n          case 'y':\n            return date[`get${utc}FullYear`]();\n          case 'm':\n            return zeroPad(date[`get${utc}Month`]() + 1);\n          case 'n':\n            return mthNames[date[`get${utc}Month`]()];\n          case 'd':\n            return zeroPad(date[`get${utc}Date`]());\n          case 'w':\n            return dayNames[date[`get${utc}Day`]()];\n          case 'x':\n            return date[`get${utc}Day`]();\n          case 'H':\n            return zeroPad(date[`get${utc}Hours`]());\n          case 'M':\n            return zeroPad(date[`get${utc}Minutes`]());\n          case 'S':\n            return zeroPad(date[`get${utc}Seconds`]());\n          default:\n            return `%${p}`;\n        }\n      });\n    };\n  },\n};\n\n// Given an array of attribute values, convert to a key that\n// can be used in objects.\nconst flatKey = attrVals => attrVals.join(String.fromCharCode(0));\n\n/*\nData Model class\n*/\n\nclass PivotData {\n  constructor(inputProps = {}, subtotals = {}) {\n    this.props = { ...PivotData.defaultProps, ...inputProps };\n    this.processRecord = this.processRecord.bind(this);\n    PropTypes.checkPropTypes(\n      PivotData.propTypes,\n      this.props,\n      'prop',\n      'PivotData',\n    );\n\n    this.aggregator = this.props\n      .aggregatorsFactory(this.props.defaultFormatter)\n      [this.props.aggregatorName](this.props.vals);\n    this.formattedAggregators =\n      this.props.customFormatters &&\n      Object.entries(this.props.customFormatters).reduce(\n        (acc, [key, columnFormatter]) => {\n          acc[key] = {};\n          Object.entries(columnFormatter).forEach(([column, formatter]) => {\n            acc[key][column] = this.props\n              .aggregatorsFactory(formatter)\n              [this.props.aggregatorName](this.props.vals);\n          });\n          return acc;\n        },\n        {},\n      );\n    this.tree = {};\n    this.rowKeys = [];\n    this.colKeys = [];\n    this.rowTotals = {};\n    this.colTotals = {};\n    this.allTotal = this.aggregator(this, [], []);\n    this.subtotals = subtotals;\n    this.sorted = false;\n\n    // iterate through input, accumulating data for cells\n    PivotData.forEachRecord(this.props.data, this.processRecord);\n  }\n\n  getFormattedAggregator(record, totalsKeys) {\n    if (!this.formattedAggregators) {\n      return this.aggregator;\n    }\n    const [groupName, groupValue] =\n      Object.entries(record).find(\n        ([name, value]) =>\n          this.formattedAggregators[name] &&\n          this.formattedAggregators[name][value],\n      ) || [];\n    if (\n      !groupName ||\n      !groupValue ||\n      (totalsKeys && !totalsKeys.includes(groupValue))\n    ) {\n      return this.aggregator;\n    }\n    return this.formattedAggregators[groupName][groupValue] || this.aggregator;\n  }\n\n  arrSort(attrs, partialOnTop, reverse = false) {\n    const sortersArr = attrs.map(a => getSort(this.props.sorters, a));\n    return function (a, b) {\n      const limit = Math.min(a.length, b.length);\n      for (let i = 0; i < limit; i += 1) {\n        const sorter = sortersArr[i];\n        const comparison = reverse ? sorter(b[i], a[i]) : sorter(a[i], b[i]);\n        if (comparison !== 0) {\n          return comparison;\n        }\n      }\n      return partialOnTop ? a.length - b.length : b.length - a.length;\n    };\n  }\n\n  sortKeys() {\n    if (!this.sorted) {\n      this.sorted = true;\n      const v = (r, c) => this.getAggregator(r, c).value();\n      switch (this.props.rowOrder) {\n        case 'key_z_to_a':\n          this.rowKeys.sort(\n            this.arrSort(this.props.rows, this.subtotals.rowPartialOnTop, true),\n          );\n          break;\n        case 'value_a_to_z':\n          this.rowKeys.sort((a, b) => naturalSort(v(a, []), v(b, [])));\n          break;\n        case 'value_z_to_a':\n          this.rowKeys.sort((a, b) => -naturalSort(v(a, []), v(b, [])));\n          break;\n        default:\n          this.rowKeys.sort(\n            this.arrSort(this.props.rows, this.subtotals.rowPartialOnTop),\n          );\n      }\n      switch (this.props.colOrder) {\n        case 'key_z_to_a':\n          this.colKeys.sort(\n            this.arrSort(this.props.cols, this.subtotals.colPartialOnTop, true),\n          );\n          break;\n        case 'value_a_to_z':\n          this.colKeys.sort((a, b) => naturalSort(v([], a), v([], b)));\n          break;\n        case 'value_z_to_a':\n          this.colKeys.sort((a, b) => -naturalSort(v([], a), v([], b)));\n          break;\n        default:\n          this.colKeys.sort(\n            this.arrSort(this.props.cols, this.subtotals.colPartialOnTop),\n          );\n      }\n    }\n  }\n\n  getColKeys() {\n    this.sortKeys();\n    return this.colKeys;\n  }\n\n  getRowKeys() {\n    this.sortKeys();\n    return this.rowKeys;\n  }\n\n  processRecord(record) {\n    // this code is called in a tight loop\n    const colKey = [];\n    const rowKey = [];\n    this.props.cols.forEach(col => {\n      colKey.push(col in record ? record[col] : 'null');\n    });\n    this.props.rows.forEach(row => {\n      rowKey.push(row in record ? record[row] : 'null');\n    });\n\n    this.allTotal.push(record);\n\n    const rowStart = this.subtotals.rowEnabled ? 1 : Math.max(1, rowKey.length);\n    const colStart = this.subtotals.colEnabled ? 1 : Math.max(1, colKey.length);\n\n    let isRowSubtotal;\n    let isColSubtotal;\n    for (let ri = rowStart; ri <= rowKey.length; ri += 1) {\n      isRowSubtotal = ri < rowKey.length;\n      const fRowKey = rowKey.slice(0, ri);\n      const flatRowKey = flatKey(fRowKey);\n      if (!this.rowTotals[flatRowKey]) {\n        this.rowKeys.push(fRowKey);\n        this.rowTotals[flatRowKey] = this.getFormattedAggregator(\n          record,\n          rowKey,\n        )(this, fRowKey, []);\n      }\n      this.rowTotals[flatRowKey].push(record);\n      this.rowTotals[flatRowKey].isSubtotal = isRowSubtotal;\n    }\n\n    for (let ci = colStart; ci <= colKey.length; ci += 1) {\n      isColSubtotal = ci < colKey.length;\n      const fColKey = colKey.slice(0, ci);\n      const flatColKey = flatKey(fColKey);\n      if (!this.colTotals[flatColKey]) {\n        this.colKeys.push(fColKey);\n        this.colTotals[flatColKey] = this.getFormattedAggregator(\n          record,\n          colKey,\n        )(this, [], fColKey);\n      }\n      this.colTotals[flatColKey].push(record);\n      this.colTotals[flatColKey].isSubtotal = isColSubtotal;\n    }\n\n    // And now fill in for all the sub-cells.\n    for (let ri = rowStart; ri <= rowKey.length; ri += 1) {\n      isRowSubtotal = ri < rowKey.length;\n      const fRowKey = rowKey.slice(0, ri);\n      const flatRowKey = flatKey(fRowKey);\n      if (!this.tree[flatRowKey]) {\n        this.tree[flatRowKey] = {};\n      }\n      for (let ci = colStart; ci <= colKey.length; ci += 1) {\n        isColSubtotal = ci < colKey.length;\n        const fColKey = colKey.slice(0, ci);\n        const flatColKey = flatKey(fColKey);\n        if (!this.tree[flatRowKey][flatColKey]) {\n          this.tree[flatRowKey][flatColKey] = this.getFormattedAggregator(\n            record,\n          )(this, fRowKey, fColKey);\n        }\n        this.tree[flatRowKey][flatColKey].push(record);\n\n        this.tree[flatRowKey][flatColKey].isRowSubtotal = isRowSubtotal;\n        this.tree[flatRowKey][flatColKey].isColSubtotal = isColSubtotal;\n        this.tree[flatRowKey][flatColKey].isSubtotal =\n          isRowSubtotal || isColSubtotal;\n      }\n    }\n  }\n\n  getAggregator(rowKey, colKey) {\n    let agg;\n    const flatRowKey = flatKey(rowKey);\n    const flatColKey = flatKey(colKey);\n    if (rowKey.length === 0 && colKey.length === 0) {\n      agg = this.allTotal;\n    } else if (rowKey.length === 0) {\n      agg = this.colTotals[flatColKey];\n    } else if (colKey.length === 0) {\n      agg = this.rowTotals[flatRowKey];\n    } else {\n      agg = this.tree[flatRowKey][flatColKey];\n    }\n    return (\n      agg || {\n        value() {\n          return null;\n        },\n        format() {\n          return '';\n        },\n      }\n    );\n  }\n}\n\n// can handle arrays or jQuery selections of tables\nPivotData.forEachRecord = function (input, processRecord) {\n  if (Array.isArray(input)) {\n    // array of objects\n    return input.map(record => processRecord(record));\n  }\n  throw new Error(t('Unknown input format'));\n};\n\nPivotData.defaultProps = {\n  aggregators,\n  cols: [],\n  rows: [],\n  vals: [],\n  aggregatorName: 'Count',\n  sorters: {},\n  rowOrder: 'key_a_to_z',\n  colOrder: 'key_a_to_z',\n};\n\nPivotData.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.func])\n    .isRequired,\n  aggregatorName: PropTypes.string,\n  cols: PropTypes.arrayOf(PropTypes.string),\n  rows: PropTypes.arrayOf(PropTypes.string),\n  vals: PropTypes.arrayOf(PropTypes.string),\n  valueFilter: PropTypes.objectOf(PropTypes.objectOf(PropTypes.bool)),\n  sorters: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.objectOf(PropTypes.func),\n  ]),\n  derivedAttributes: PropTypes.objectOf(PropTypes.func),\n  rowOrder: PropTypes.oneOf([\n    'key_a_to_z',\n    'key_z_to_a',\n    'value_a_to_z',\n    'value_z_to_a',\n  ]),\n  colOrder: PropTypes.oneOf([\n    'key_a_to_z',\n    'key_z_to_a',\n    'value_a_to_z',\n    'value_z_to_a',\n  ]),\n};\n\nexport {\n  aggregatorTemplates,\n  aggregators,\n  derivers,\n  locales,\n  naturalSort,\n  numberFormat,\n  getSort,\n  sortAs,\n  flatKey,\n  PivotData,\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css, styled } from '@superset-ui/core';\n\nexport const Styles = styled.div`\n  ${({ theme, isDashboardEditMode }) => css`\n    table.pvtTable {\n      position: ${isDashboardEditMode ? 'inherit' : 'relative'};\n      width: calc(100% - ${theme.gridUnit}px);\n      font-size: ${theme.typography.sizes.s}px;\n      text-align: left;\n      margin: ${theme.gridUnit}px;\n      border-collapse: separate;\n      font-family: ${theme.typography.families.sansSerif};\n      line-height: 1.4;\n    }\n\n    table thead {\n      position: ${isDashboardEditMode ? 'inherit' : 'sticky'};\n      top: 0;\n    }\n\n    table tbody tr {\n      font-feature-settings: 'tnum' 1;\n    }\n\n    table.pvtTable thead tr th,\n    table.pvtTable tbody tr th {\n      background-color: ${theme.colors.grayscale.light5};\n      border-top: 1px solid ${theme.colors.grayscale.light2};\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      font-size: ${theme.typography.sizes.s}px;\n      padding: ${theme.gridUnit}px;\n      font-weight: ${theme.typography.weights.normal};\n    }\n\n    table.pvtTable tbody tr.pvtRowTotals {\n      position: ${isDashboardEditMode ? 'inherit' : 'sticky'};\n      bottom: 0;\n    }\n\n    table.pvtTable thead tr:last-of-type th,\n    table.pvtTable thead tr:first-of-type th.pvtTotalLabel,\n    table.pvtTable thead tr:nth-last-of-type(2) th.pvtColLabel,\n    table.pvtTable thead th.pvtSubtotalLabel,\n    table.pvtTable tbody tr:last-of-type th,\n    table.pvtTable tbody tr:last-of-type td {\n      border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    }\n\n    table.pvtTable\n      thead\n      tr:last-of-type:not(:only-child)\n      th.pvtAxisLabel\n      ~ th.pvtColLabel,\n    table.pvtTable tbody tr:first-of-type th,\n    table.pvtTable tbody tr:first-of-type td {\n      border-top: none;\n    }\n\n    table.pvtTable tbody tr td:last-of-type,\n    table.pvtTable thead tr th:last-of-type:not(.pvtSubtotalLabel) {\n      border-right: 1px solid ${theme.colors.grayscale.light2};\n    }\n\n    table.pvtTable\n      thead\n      tr:last-of-type:not(:only-child)\n      th.pvtAxisLabel\n      + .pvtTotalLabel {\n      border-right: none;\n    }\n\n    table.pvtTable tr th.active {\n      background-color: ${theme.colors.primary.light3};\n    }\n\n    table.pvtTable .pvtTotalLabel {\n      text-align: right;\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    table.pvtTable .pvtSubtotalLabel {\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    table.pvtTable tbody tr td {\n      color: ${theme.colors.primary.dark2};\n      padding: ${theme.gridUnit}px;\n      background-color: ${theme.colors.grayscale.light5};\n      border-top: 1px solid ${theme.colors.grayscale.light2};\n      border-left: 1px solid ${theme.colors.grayscale.light2};\n      vertical-align: top;\n      text-align: right;\n    }\n\n    table.pvtTable tbody tr th.pvtRowLabel {\n      vertical-align: baseline;\n    }\n\n    .pvtTotal,\n    .pvtGrandTotal {\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    table.pvtTable tbody tr td.pvtRowTotal {\n      vertical-align: middle;\n    }\n\n    .toggle-wrapper {\n      white-space: nowrap;\n    }\n\n    .toggle-wrapper > .toggle-val {\n      white-space: normal;\n    }\n\n    .toggle {\n      padding-right: ${theme.gridUnit}px;\n      cursor: pointer;\n    }\n\n    .hoverable:hover {\n      background-color: ${theme.colors.primary.light4};\n      cursor: pointer;\n    }\n  `}\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport PropTypes from 'prop-types';\nimport { PivotData, flatKey } from './utilities';\nimport { Styles } from './Styles';\n\nconst parseLabel = value => {\n  if (typeof value === 'string') {\n    if (value === 'metric') return t('metric');\n    return value;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return String(value);\n};\n\nfunction displayHeaderCell(\n  needToggle,\n  ArrowIcon,\n  onArrowClick,\n  value,\n  namesMapping,\n) {\n  const name = namesMapping[value] || value;\n  return needToggle ? (\n    <span className=\"toggle-wrapper\">\n      <span\n        role=\"button\"\n        tabIndex=\"0\"\n        className=\"toggle\"\n        onClick={onArrowClick}\n      >\n        {ArrowIcon}\n      </span>\n      <span className=\"toggle-val\">{parseLabel(name)}</span>\n    </span>\n  ) : (\n    parseLabel(name)\n  );\n}\n\nexport class TableRenderer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // We need state to record which entries are collapsed and which aren't.\n    // This is an object with flat-keys indicating if the corresponding rows\n    // should be collapsed.\n    this.state = { collapsedRows: {}, collapsedCols: {} };\n\n    this.clickHeaderHandler = this.clickHeaderHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  getBasePivotSettings() {\n    // One-time extraction of pivot settings that we'll use throughout the render.\n\n    const { props } = this;\n    const colAttrs = props.cols;\n    const rowAttrs = props.rows;\n\n    const tableOptions = {\n      rowTotals: true,\n      colTotals: true,\n      ...props.tableOptions,\n    };\n    const rowTotals = tableOptions.rowTotals || colAttrs.length === 0;\n    const colTotals = tableOptions.colTotals || rowAttrs.length === 0;\n\n    const namesMapping = props.namesMapping || {};\n    const subtotalOptions = {\n      arrowCollapsed: '\\u25B2',\n      arrowExpanded: '\\u25BC',\n      ...props.subtotalOptions,\n    };\n\n    const colSubtotalDisplay = {\n      displayOnTop: false,\n      enabled: tableOptions.colSubTotals,\n      hideOnExpand: false,\n      ...subtotalOptions.colSubtotalDisplay,\n    };\n\n    const rowSubtotalDisplay = {\n      displayOnTop: false,\n      enabled: tableOptions.rowSubTotals,\n      hideOnExpand: false,\n      ...subtotalOptions.rowSubtotalDisplay,\n    };\n\n    const pivotData = new PivotData(props, {\n      rowEnabled: rowSubtotalDisplay.enabled,\n      colEnabled: colSubtotalDisplay.enabled,\n      rowPartialOnTop: rowSubtotalDisplay.displayOnTop,\n      colPartialOnTop: colSubtotalDisplay.displayOnTop,\n    });\n    const rowKeys = pivotData.getRowKeys();\n    const colKeys = pivotData.getColKeys();\n\n    // Also pre-calculate all the callbacks for cells, etc... This is nice to have to\n    // avoid re-calculations of the call-backs on cell expansions, etc...\n    const cellCallbacks = {};\n    const rowTotalCallbacks = {};\n    const colTotalCallbacks = {};\n    let grandTotalCallback = null;\n    if (tableOptions.clickCallback) {\n      rowKeys.forEach(rowKey => {\n        const flatRowKey = flatKey(rowKey);\n        if (!(flatRowKey in cellCallbacks)) {\n          cellCallbacks[flatRowKey] = {};\n        }\n        colKeys.forEach(colKey => {\n          cellCallbacks[flatRowKey][flatKey(colKey)] = this.clickHandler(\n            pivotData,\n            rowKey,\n            colKey,\n          );\n        });\n      });\n\n      // Add in totals as well.\n      if (rowTotals) {\n        rowKeys.forEach(rowKey => {\n          rowTotalCallbacks[flatKey(rowKey)] = this.clickHandler(\n            pivotData,\n            rowKey,\n            [],\n          );\n        });\n      }\n      if (colTotals) {\n        colKeys.forEach(colKey => {\n          colTotalCallbacks[flatKey(colKey)] = this.clickHandler(\n            pivotData,\n            [],\n            colKey,\n          );\n        });\n      }\n      if (rowTotals && colTotals) {\n        grandTotalCallback = this.clickHandler(pivotData, [], []);\n      }\n    }\n\n    return {\n      pivotData,\n      colAttrs,\n      rowAttrs,\n      colKeys,\n      rowKeys,\n      rowTotals,\n      colTotals,\n      arrowCollapsed: subtotalOptions.arrowCollapsed,\n      arrowExpanded: subtotalOptions.arrowExpanded,\n      colSubtotalDisplay,\n      rowSubtotalDisplay,\n      cellCallbacks,\n      rowTotalCallbacks,\n      colTotalCallbacks,\n      grandTotalCallback,\n      namesMapping,\n    };\n  }\n\n  clickHandler(pivotData, rowValues, colValues) {\n    const colAttrs = this.props.cols;\n    const rowAttrs = this.props.rows;\n    const value = pivotData.getAggregator(rowValues, colValues).value();\n    const filters = {};\n    const colLimit = Math.min(colAttrs.length, colValues.length);\n    for (let i = 0; i < colLimit; i += 1) {\n      const attr = colAttrs[i];\n      if (colValues[i] !== null) {\n        filters[attr] = colValues[i];\n      }\n    }\n    const rowLimit = Math.min(rowAttrs.length, rowValues.length);\n    for (let i = 0; i < rowLimit; i += 1) {\n      const attr = rowAttrs[i];\n      if (rowValues[i] !== null) {\n        filters[attr] = rowValues[i];\n      }\n    }\n    return e =>\n      this.props.tableOptions.clickCallback(e, value, filters, pivotData);\n  }\n\n  clickHeaderHandler(\n    pivotData,\n    values,\n    attrs,\n    attrIdx,\n    callback,\n    isSubtotal = false,\n    isGrandTotal = false,\n  ) {\n    const filters = {};\n    for (let i = 0; i <= attrIdx; i += 1) {\n      const attr = attrs[i];\n      filters[attr] = values[i];\n    }\n    return e =>\n      callback(\n        e,\n        values[attrIdx],\n        filters,\n        pivotData,\n        isSubtotal,\n        isGrandTotal,\n      );\n  }\n\n  collapseAttr(rowOrCol, attrIdx, allKeys) {\n    return e => {\n      // Collapse an entire attribute.\n      e.stopPropagation();\n      const keyLen = attrIdx + 1;\n      const collapsed = allKeys.filter(k => k.length === keyLen).map(flatKey);\n\n      const updates = {};\n      collapsed.forEach(k => {\n        updates[k] = true;\n      });\n\n      if (rowOrCol) {\n        this.setState(state => ({\n          collapsedRows: { ...state.collapsedRows, ...updates },\n        }));\n      } else {\n        this.setState(state => ({\n          collapsedCols: { ...state.collapsedCols, ...updates },\n        }));\n      }\n    };\n  }\n\n  expandAttr(rowOrCol, attrIdx, allKeys) {\n    return e => {\n      // Expand an entire attribute. This implicitly implies expanding all of the\n      // parents as well. It's a bit inefficient but ah well...\n      e.stopPropagation();\n      const updates = {};\n      allKeys.forEach(k => {\n        for (let i = 0; i <= attrIdx; i += 1) {\n          updates[flatKey(k.slice(0, i + 1))] = false;\n        }\n      });\n\n      if (rowOrCol) {\n        this.setState(state => ({\n          collapsedRows: { ...state.collapsedRows, ...updates },\n        }));\n      } else {\n        this.setState(state => ({\n          collapsedCols: { ...state.collapsedCols, ...updates },\n        }));\n      }\n    };\n  }\n\n  toggleRowKey(flatRowKey) {\n    return e => {\n      e.stopPropagation();\n      this.setState(state => ({\n        collapsedRows: {\n          ...state.collapsedRows,\n          [flatRowKey]: !state.collapsedRows[flatRowKey],\n        },\n      }));\n    };\n  }\n\n  toggleColKey(flatColKey) {\n    return e => {\n      e.stopPropagation();\n      this.setState(state => ({\n        collapsedCols: {\n          ...state.collapsedCols,\n          [flatColKey]: !state.collapsedCols[flatColKey],\n        },\n      }));\n    };\n  }\n\n  calcAttrSpans(attrArr, numAttrs) {\n    // Given an array of attribute values (i.e. each element is another array with\n    // the value at every level), compute the spans for every attribute value at\n    // every level. The return value is a nested array of the same shape. It has\n    // -1's for repeated values and the span number otherwise.\n\n    const spans = [];\n    // Index of the last new value\n    const li = Array(numAttrs).map(() => 0);\n    let lv = Array(numAttrs).map(() => null);\n    for (let i = 0; i < attrArr.length; i += 1) {\n      // Keep increasing span values as long as the last keys are the same. For\n      // the rest, record spans of 1. Update the indices too.\n      const cv = attrArr[i];\n      const ent = [];\n      let depth = 0;\n      const limit = Math.min(lv.length, cv.length);\n      while (depth < limit && lv[depth] === cv[depth]) {\n        ent.push(-1);\n        spans[li[depth]][depth] += 1;\n        depth += 1;\n      }\n      while (depth < cv.length) {\n        li[depth] = i;\n        ent.push(1);\n        depth += 1;\n      }\n      spans.push(ent);\n      lv = cv;\n    }\n    return spans;\n  }\n\n  renderColHeaderRow(attrName, attrIdx, pivotSettings) {\n    // Render a single row in the column header at the top of the pivot table.\n\n    const {\n      rowAttrs,\n      colAttrs,\n      colKeys,\n      visibleColKeys,\n      colAttrSpans,\n      rowTotals,\n      arrowExpanded,\n      arrowCollapsed,\n      colSubtotalDisplay,\n      maxColVisible,\n      pivotData,\n      namesMapping,\n    } = pivotSettings;\n    const {\n      highlightHeaderCellsOnHover,\n      omittedHighlightHeaderGroups = [],\n      highlightedHeaderCells,\n      dateFormatters,\n    } = this.props.tableOptions;\n\n    const spaceCell =\n      attrIdx === 0 && rowAttrs.length !== 0 ? (\n        <th\n          key=\"padding\"\n          colSpan={rowAttrs.length}\n          rowSpan={colAttrs.length}\n          aria-hidden=\"true\"\n        />\n      ) : null;\n\n    const needToggle =\n      colSubtotalDisplay.enabled && attrIdx !== colAttrs.length - 1;\n    let arrowClickHandle = null;\n    let subArrow = null;\n    if (needToggle) {\n      arrowClickHandle =\n        attrIdx + 1 < maxColVisible\n          ? this.collapseAttr(false, attrIdx, colKeys)\n          : this.expandAttr(false, attrIdx, colKeys);\n      subArrow = attrIdx + 1 < maxColVisible ? arrowExpanded : arrowCollapsed;\n    }\n    const attrNameCell = (\n      <th key=\"label\" className=\"pvtAxisLabel\">\n        {displayHeaderCell(\n          needToggle,\n          subArrow,\n          arrowClickHandle,\n          attrName,\n          namesMapping,\n        )}\n      </th>\n    );\n\n    const attrValueCells = [];\n    const rowIncrSpan = rowAttrs.length !== 0 ? 1 : 0;\n    // Iterate through columns. Jump over duplicate values.\n    let i = 0;\n    while (i < visibleColKeys.length) {\n      let handleContextMenu;\n      const colKey = visibleColKeys[i];\n      const colSpan = attrIdx < colKey.length ? colAttrSpans[i][attrIdx] : 1;\n      let colLabelClass = 'pvtColLabel';\n      if (attrIdx < colKey.length) {\n        if (!omittedHighlightHeaderGroups.includes(colAttrs[attrIdx])) {\n          if (highlightHeaderCellsOnHover) {\n            colLabelClass += ' hoverable';\n          }\n          handleContextMenu = e =>\n            this.props.onContextMenu(e, colKey, undefined, {\n              [attrName]: colKey[attrIdx],\n            });\n        }\n        if (\n          highlightedHeaderCells &&\n          Array.isArray(highlightedHeaderCells[colAttrs[attrIdx]]) &&\n          highlightedHeaderCells[colAttrs[attrIdx]].includes(colKey[attrIdx])\n        ) {\n          colLabelClass += ' active';\n        }\n\n        const rowSpan = 1 + (attrIdx === colAttrs.length - 1 ? rowIncrSpan : 0);\n        const flatColKey = flatKey(colKey.slice(0, attrIdx + 1));\n        const onArrowClick = needToggle ? this.toggleColKey(flatColKey) : null;\n\n        const headerCellFormattedValue =\n          dateFormatters &&\n          dateFormatters[attrName] &&\n          typeof dateFormatters[attrName] === 'function'\n            ? dateFormatters[attrName](colKey[attrIdx])\n            : colKey[attrIdx];\n        attrValueCells.push(\n          <th\n            className={colLabelClass}\n            key={`colKey-${flatColKey}`}\n            colSpan={colSpan}\n            rowSpan={rowSpan}\n            onClick={this.clickHeaderHandler(\n              pivotData,\n              colKey,\n              this.props.cols,\n              attrIdx,\n              this.props.tableOptions.clickColumnHeaderCallback,\n            )}\n            onContextMenu={handleContextMenu}\n          >\n            {displayHeaderCell(\n              needToggle,\n              this.state.collapsedCols[flatColKey]\n                ? arrowCollapsed\n                : arrowExpanded,\n              onArrowClick,\n              headerCellFormattedValue,\n              namesMapping,\n            )}\n          </th>,\n        );\n      } else if (attrIdx === colKey.length) {\n        const rowSpan = colAttrs.length - colKey.length + rowIncrSpan;\n        attrValueCells.push(\n          <th\n            className={`${colLabelClass} pvtSubtotalLabel`}\n            key={`colKeyBuffer-${flatKey(colKey)}`}\n            colSpan={colSpan}\n            rowSpan={rowSpan}\n            onClick={this.clickHeaderHandler(\n              pivotData,\n              colKey,\n              this.props.cols,\n              attrIdx,\n              this.props.tableOptions.clickColumnHeaderCallback,\n              true,\n            )}\n          >\n            {t('Subtotal')}\n          </th>,\n        );\n      }\n      // The next colSpan columns will have the same value anyway...\n      i += colSpan;\n    }\n\n    const totalCell =\n      attrIdx === 0 && rowTotals ? (\n        <th\n          key=\"total\"\n          className=\"pvtTotalLabel\"\n          rowSpan={colAttrs.length + Math.min(rowAttrs.length, 1)}\n          onClick={this.clickHeaderHandler(\n            pivotData,\n            [],\n            this.props.cols,\n            attrIdx,\n            this.props.tableOptions.clickColumnHeaderCallback,\n            false,\n            true,\n          )}\n        >\n          {t('Total (%(aggregatorName)s)', {\n            aggregatorName: t(this.props.aggregatorName),\n          })}\n        </th>\n      ) : null;\n\n    const cells = [spaceCell, attrNameCell, ...attrValueCells, totalCell];\n    return <tr key={`colAttr-${attrIdx}`}>{cells}</tr>;\n  }\n\n  renderRowHeaderRow(pivotSettings) {\n    // Render just the attribute names of the rows (the actual attribute values\n    // will show up in the individual rows).\n\n    const {\n      rowAttrs,\n      colAttrs,\n      rowKeys,\n      arrowCollapsed,\n      arrowExpanded,\n      rowSubtotalDisplay,\n      maxRowVisible,\n      pivotData,\n      namesMapping,\n    } = pivotSettings;\n    return (\n      <tr key=\"rowHdr\">\n        {rowAttrs.map((r, i) => {\n          const needLabelToggle =\n            rowSubtotalDisplay.enabled && i !== rowAttrs.length - 1;\n          let arrowClickHandle = null;\n          let subArrow = null;\n          if (needLabelToggle) {\n            arrowClickHandle =\n              i + 1 < maxRowVisible\n                ? this.collapseAttr(true, i, rowKeys)\n                : this.expandAttr(true, i, rowKeys);\n            subArrow = i + 1 < maxRowVisible ? arrowExpanded : arrowCollapsed;\n          }\n          return (\n            <th className=\"pvtAxisLabel\" key={`rowAttr-${i}`}>\n              {displayHeaderCell(\n                needLabelToggle,\n                subArrow,\n                arrowClickHandle,\n                r,\n                namesMapping,\n              )}\n            </th>\n          );\n        })}\n        <th\n          className=\"pvtTotalLabel\"\n          key=\"padding\"\n          onClick={this.clickHeaderHandler(\n            pivotData,\n            [],\n            this.props.rows,\n            0,\n            this.props.tableOptions.clickRowHeaderCallback,\n            false,\n            true,\n          )}\n        >\n          {colAttrs.length === 0\n            ? t('Total (%(aggregatorName)s)', {\n                aggregatorName: t(this.props.aggregatorName),\n              })\n            : null}\n        </th>\n      </tr>\n    );\n  }\n\n  renderTableRow(rowKey, rowIdx, pivotSettings) {\n    // Render a single row in the pivot table.\n\n    const {\n      rowAttrs,\n      colAttrs,\n      rowAttrSpans,\n      visibleColKeys,\n      pivotData,\n      rowTotals,\n      rowSubtotalDisplay,\n      arrowExpanded,\n      arrowCollapsed,\n      cellCallbacks,\n      rowTotalCallbacks,\n      namesMapping,\n    } = pivotSettings;\n\n    const {\n      highlightHeaderCellsOnHover,\n      omittedHighlightHeaderGroups = [],\n      highlightedHeaderCells,\n      cellColorFormatters,\n      dateFormatters,\n    } = this.props.tableOptions;\n    const flatRowKey = flatKey(rowKey);\n\n    const colIncrSpan = colAttrs.length !== 0 ? 1 : 0;\n    const attrValueCells = rowKey.map((r, i) => {\n      let handleContextMenu;\n      let valueCellClassName = 'pvtRowLabel';\n      if (!omittedHighlightHeaderGroups.includes(rowAttrs[i])) {\n        if (highlightHeaderCellsOnHover) {\n          valueCellClassName += ' hoverable';\n        }\n        handleContextMenu = e =>\n          this.props.onContextMenu(e, undefined, rowKey, {\n            [rowAttrs[i]]: r,\n          });\n      }\n      if (\n        highlightedHeaderCells &&\n        Array.isArray(highlightedHeaderCells[rowAttrs[i]]) &&\n        highlightedHeaderCells[rowAttrs[i]].includes(r)\n      ) {\n        valueCellClassName += ' active';\n      }\n      const rowSpan = rowAttrSpans[rowIdx][i];\n      if (rowSpan > 0) {\n        const flatRowKey = flatKey(rowKey.slice(0, i + 1));\n        const colSpan = 1 + (i === rowAttrs.length - 1 ? colIncrSpan : 0);\n        const needRowToggle =\n          rowSubtotalDisplay.enabled && i !== rowAttrs.length - 1;\n        const onArrowClick = needRowToggle\n          ? this.toggleRowKey(flatRowKey)\n          : null;\n\n        const headerCellFormattedValue =\n          dateFormatters && dateFormatters[rowAttrs[i]]\n            ? dateFormatters[rowAttrs[i]](r)\n            : r;\n        return (\n          <th\n            key={`rowKeyLabel-${i}`}\n            className={valueCellClassName}\n            rowSpan={rowSpan}\n            colSpan={colSpan}\n            onClick={this.clickHeaderHandler(\n              pivotData,\n              rowKey,\n              this.props.rows,\n              i,\n              this.props.tableOptions.clickRowHeaderCallback,\n            )}\n            onContextMenu={handleContextMenu}\n          >\n            {displayHeaderCell(\n              needRowToggle,\n              this.state.collapsedRows[flatRowKey]\n                ? arrowCollapsed\n                : arrowExpanded,\n              onArrowClick,\n              headerCellFormattedValue,\n              namesMapping,\n            )}\n          </th>\n        );\n      }\n      return null;\n    });\n\n    const attrValuePaddingCell =\n      rowKey.length < rowAttrs.length ? (\n        <th\n          className=\"pvtRowLabel pvtSubtotalLabel\"\n          key=\"rowKeyBuffer\"\n          colSpan={rowAttrs.length - rowKey.length + colIncrSpan}\n          rowSpan={1}\n          onClick={this.clickHeaderHandler(\n            pivotData,\n            rowKey,\n            this.props.rows,\n            rowKey.length,\n            this.props.tableOptions.clickRowHeaderCallback,\n            true,\n          )}\n        >\n          {t('Subtotal')}\n        </th>\n      ) : null;\n\n    const rowClickHandlers = cellCallbacks[flatRowKey] || {};\n    const valueCells = visibleColKeys.map(colKey => {\n      const flatColKey = flatKey(colKey);\n      const agg = pivotData.getAggregator(rowKey, colKey);\n      const aggValue = agg.value();\n\n      const keys = [...rowKey, ...colKey];\n      let backgroundColor;\n      if (cellColorFormatters) {\n        Object.values(cellColorFormatters).forEach(cellColorFormatter => {\n          if (Array.isArray(cellColorFormatter)) {\n            keys.forEach(key => {\n              if (backgroundColor) {\n                return;\n              }\n              cellColorFormatter\n                .filter(formatter => formatter.column === key)\n                .forEach(formatter => {\n                  const formatterResult = formatter.getColorFromValue(aggValue);\n                  if (formatterResult) {\n                    backgroundColor = formatterResult;\n                  }\n                });\n            });\n          }\n        });\n      }\n\n      const style = agg.isSubtotal\n        ? { fontWeight: 'bold' }\n        : { backgroundColor };\n\n      return (\n        <td\n          role=\"gridcell\"\n          className=\"pvtVal\"\n          key={`pvtVal-${flatColKey}`}\n          onClick={rowClickHandlers[flatColKey]}\n          onContextMenu={e => this.props.onContextMenu(e, colKey, rowKey)}\n          style={style}\n        >\n          {agg.format(aggValue)}\n        </td>\n      );\n    });\n\n    let totalCell = null;\n    if (rowTotals) {\n      const agg = pivotData.getAggregator(rowKey, []);\n      const aggValue = agg.value();\n      totalCell = (\n        <td\n          role=\"gridcell\"\n          key=\"total\"\n          className=\"pvtTotal\"\n          onClick={rowTotalCallbacks[flatRowKey]}\n          onContextMenu={e => this.props.onContextMenu(e, undefined, rowKey)}\n        >\n          {agg.format(aggValue)}\n        </td>\n      );\n    }\n\n    const rowCells = [\n      ...attrValueCells,\n      attrValuePaddingCell,\n      ...valueCells,\n      totalCell,\n    ];\n\n    return <tr key={`keyRow-${flatRowKey}`}>{rowCells}</tr>;\n  }\n\n  renderTotalsRow(pivotSettings) {\n    // Render the final totals rows that has the totals for all the columns.\n\n    const {\n      rowAttrs,\n      colAttrs,\n      visibleColKeys,\n      rowTotals,\n      pivotData,\n      colTotalCallbacks,\n      grandTotalCallback,\n    } = pivotSettings;\n\n    const totalLabelCell = (\n      <th\n        key=\"label\"\n        className=\"pvtTotalLabel pvtRowTotalLabel\"\n        colSpan={rowAttrs.length + Math.min(colAttrs.length, 1)}\n        onClick={this.clickHeaderHandler(\n          pivotData,\n          [],\n          this.props.rows,\n          0,\n          this.props.tableOptions.clickRowHeaderCallback,\n          false,\n          true,\n        )}\n      >\n        {t('Total (%(aggregatorName)s)', {\n          aggregatorName: t(this.props.aggregatorName),\n        })}\n      </th>\n    );\n\n    const totalValueCells = visibleColKeys.map(colKey => {\n      const flatColKey = flatKey(colKey);\n      const agg = pivotData.getAggregator([], colKey);\n      const aggValue = agg.value();\n\n      return (\n        <td\n          role=\"gridcell\"\n          className=\"pvtTotal pvtRowTotal\"\n          key={`total-${flatColKey}`}\n          onClick={colTotalCallbacks[flatColKey]}\n          onContextMenu={e => this.props.onContextMenu(e, colKey, undefined)}\n          style={{ padding: '5px' }}\n        >\n          {agg.format(aggValue)}\n        </td>\n      );\n    });\n\n    let grandTotalCell = null;\n    if (rowTotals) {\n      const agg = pivotData.getAggregator([], []);\n      const aggValue = agg.value();\n      grandTotalCell = (\n        <td\n          role=\"gridcell\"\n          key=\"total\"\n          className=\"pvtGrandTotal pvtRowTotal\"\n          onClick={grandTotalCallback}\n          onContextMenu={e => this.props.onContextMenu(e, undefined, undefined)}\n        >\n          {agg.format(aggValue)}\n        </td>\n      );\n    }\n\n    const totalCells = [totalLabelCell, ...totalValueCells, grandTotalCell];\n\n    return (\n      <tr key=\"total\" className=\"pvtRowTotals\">\n        {totalCells}\n      </tr>\n    );\n  }\n\n  visibleKeys(keys, collapsed, numAttrs, subtotalDisplay) {\n    return keys.filter(\n      key =>\n        // Is the key hidden by one of its parents?\n        !key.some((k, j) => collapsed[flatKey(key.slice(0, j))]) &&\n        // Leaf key.\n        (key.length === numAttrs ||\n          // Children hidden. Must show total.\n          flatKey(key) in collapsed ||\n          // Don't hide totals.\n          !subtotalDisplay.hideOnExpand),\n    );\n  }\n\n  isDashboardEditMode() {\n    return document.contains(document.querySelector('.dashboard--editing'));\n  }\n\n  render() {\n    if (this.cachedProps !== this.props) {\n      this.cachedProps = this.props;\n      this.cachedBasePivotSettings = this.getBasePivotSettings();\n    }\n    const {\n      colAttrs,\n      rowAttrs,\n      rowKeys,\n      colKeys,\n      colTotals,\n      rowSubtotalDisplay,\n      colSubtotalDisplay,\n    } = this.cachedBasePivotSettings;\n\n    // Need to account for exclusions to compute the effective row\n    // and column keys.\n    const visibleRowKeys = this.visibleKeys(\n      rowKeys,\n      this.state.collapsedRows,\n      rowAttrs.length,\n      rowSubtotalDisplay,\n    );\n    const visibleColKeys = this.visibleKeys(\n      colKeys,\n      this.state.collapsedCols,\n      colAttrs.length,\n      colSubtotalDisplay,\n    );\n\n    const pivotSettings = {\n      visibleRowKeys,\n      maxRowVisible: Math.max(...visibleRowKeys.map(k => k.length)),\n      visibleColKeys,\n      maxColVisible: Math.max(...visibleColKeys.map(k => k.length)),\n      rowAttrSpans: this.calcAttrSpans(visibleRowKeys, rowAttrs.length),\n      colAttrSpans: this.calcAttrSpans(visibleColKeys, colAttrs.length),\n      ...this.cachedBasePivotSettings,\n    };\n\n    return (\n      <Styles isDashboardEditMode={this.isDashboardEditMode()}>\n        <table className=\"pvtTable\" role=\"grid\">\n          <thead>\n            {colAttrs.map((c, j) =>\n              this.renderColHeaderRow(c, j, pivotSettings),\n            )}\n            {rowAttrs.length !== 0 && this.renderRowHeaderRow(pivotSettings)}\n          </thead>\n          <tbody>\n            {visibleRowKeys.map((r, i) =>\n              this.renderTableRow(r, i, pivotSettings),\n            )}\n            {colTotals && this.renderTotalsRow(pivotSettings)}\n          </tbody>\n        </table>\n      </Styles>\n    );\n  }\n}\n\nTableRenderer.propTypes = {\n  ...PivotData.propTypes,\n  tableOptions: PropTypes.object,\n  onContextMenu: PropTypes.func,\n};\nTableRenderer.defaultProps = { ...PivotData.defaultProps, tableOptions: {} };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { TableRenderer } from './TableRenderers';\n\nclass PivotTable extends React.PureComponent {\n  render() {\n    return <TableRenderer {...this.props} />;\n  }\n}\n\nPivotTable.propTypes = TableRenderer.propTypes;\nPivotTable.defaultProps = TableRenderer.defaultProps;\n\nexport default PivotTable;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useMemo } from 'react';\nimport { MinusSquareOutlined, PlusSquareOutlined } from '@ant-design/icons';\nimport {\n  AdhocMetric,\n  BinaryQueryObjectFilterClause,\n  CurrencyFormatter,\n  DataRecordValue,\n  FeatureFlag,\n  getColumnLabel,\n  getNumberFormatter,\n  getSelectedText,\n  isAdhocColumn,\n  isFeatureEnabled,\n  isPhysicalColumn,\n  NumberFormatter,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { aggregatorTemplates, PivotTable, sortAs } from './react-pivottable';\nimport {\n  FilterType,\n  MetricsLayoutEnum,\n  PivotTableProps,\n  PivotTableStylesProps,\n  SelectedFiltersType,\n} from './types';\n\nconst Styles = styled.div<PivotTableStylesProps>`\n  ${({ height, width, margin }) => `\n      margin: ${margin}px;\n      height: ${height - margin * 2}px;\n      width: ${\n        typeof width === 'string' ? parseInt(width, 10) : width - margin * 2\n      }px;\n `}\n`;\n\nconst PivotTableWrapper = styled.div`\n  height: 100%;\n  max-width: inherit;\n  overflow: auto;\n`;\n\nconst METRIC_KEY = t('Metric');\nconst vals = ['value'];\n\nconst StyledPlusSquareOutlined = styled(PlusSquareOutlined)`\n  stroke: ${({ theme }) => theme.colors.grayscale.light2};\n  stroke-width: 16px;\n`;\n\nconst StyledMinusSquareOutlined = styled(MinusSquareOutlined)`\n  stroke: ${({ theme }) => theme.colors.grayscale.light2};\n  stroke-width: 16px;\n`;\n\nconst aggregatorsFactory = (formatter: NumberFormatter) => ({\n  Count: aggregatorTemplates.count(formatter),\n  'Count Unique Values': aggregatorTemplates.countUnique(formatter),\n  'List Unique Values': aggregatorTemplates.listUnique(', ', formatter),\n  Sum: aggregatorTemplates.sum(formatter),\n  Average: aggregatorTemplates.average(formatter),\n  Median: aggregatorTemplates.median(formatter),\n  'Sample Variance': aggregatorTemplates.var(1, formatter),\n  'Sample Standard Deviation': aggregatorTemplates.stdev(1, formatter),\n  Minimum: aggregatorTemplates.min(formatter),\n  Maximum: aggregatorTemplates.max(formatter),\n  First: aggregatorTemplates.first(formatter),\n  Last: aggregatorTemplates.last(formatter),\n  'Sum as Fraction of Total': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.sum(),\n    'total',\n    formatter,\n  ),\n  'Sum as Fraction of Rows': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.sum(),\n    'row',\n    formatter,\n  ),\n  'Sum as Fraction of Columns': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.sum(),\n    'col',\n    formatter,\n  ),\n  'Count as Fraction of Total': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.count(),\n    'total',\n    formatter,\n  ),\n  'Count as Fraction of Rows': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.count(),\n    'row',\n    formatter,\n  ),\n  'Count as Fraction of Columns': aggregatorTemplates.fractionOf(\n    aggregatorTemplates.count(),\n    'col',\n    formatter,\n  ),\n});\n\n/* If you change this logic, please update the corresponding Python\n * function (https://github.com/apache/superset/blob/master/superset/charts/post_processing.py),\n * or reach out to @betodealmeida.\n */\nexport default function PivotTableChart(props: PivotTableProps) {\n  const {\n    data,\n    height,\n    width,\n    groupbyRows: groupbyRowsRaw,\n    groupbyColumns: groupbyColumnsRaw,\n    metrics,\n    colOrder,\n    rowOrder,\n    aggregateFunction,\n    transposePivot,\n    combineMetric,\n    rowSubtotalPosition,\n    colSubtotalPosition,\n    colTotals,\n    colSubTotals,\n    rowTotals,\n    rowSubTotals,\n    valueFormat,\n    currencyFormat,\n    emitCrossFilters,\n    setDataMask,\n    selectedFilters,\n    verboseMap,\n    columnFormats,\n    currencyFormats,\n    metricsLayout,\n    metricColorFormatters,\n    dateFormatters,\n    onContextMenu,\n    timeGrainSqla,\n  } = props;\n\n  const theme = useTheme();\n  const defaultFormatter = useMemo(\n    () =>\n      currencyFormat?.symbol\n        ? new CurrencyFormatter({\n            currency: currencyFormat,\n            d3Format: valueFormat,\n          })\n        : getNumberFormatter(valueFormat),\n    [valueFormat, currencyFormat],\n  );\n  const customFormatsArray = useMemo(\n    () =>\n      Array.from(\n        new Set([\n          ...Object.keys(columnFormats || {}),\n          ...Object.keys(currencyFormats || {}),\n        ]),\n      ).map(metricName => [\n        metricName,\n        columnFormats[metricName] || valueFormat,\n        currencyFormats[metricName] || currencyFormat,\n      ]),\n    [columnFormats, currencyFormat, currencyFormats, valueFormat],\n  );\n  const hasCustomMetricFormatters = customFormatsArray.length > 0;\n  const metricFormatters = useMemo(\n    () =>\n      hasCustomMetricFormatters\n        ? {\n            [METRIC_KEY]: Object.fromEntries(\n              customFormatsArray.map(([metric, d3Format, currency]) => [\n                metric,\n                currency\n                  ? new CurrencyFormatter({\n                      currency,\n                      d3Format,\n                    })\n                  : getNumberFormatter(d3Format),\n              ]),\n            ),\n          }\n        : undefined,\n    [customFormatsArray, hasCustomMetricFormatters],\n  );\n\n  const metricNames = useMemo(\n    () =>\n      metrics.map((metric: string | AdhocMetric) =>\n        typeof metric === 'string' ? metric : (metric.label as string),\n      ),\n    [metrics],\n  );\n\n  const unpivotedData = useMemo(\n    () =>\n      data.reduce(\n        (acc: Record<string, any>[], record: Record<string, any>) => [\n          ...acc,\n          ...metricNames\n            .map((name: string) => ({\n              ...record,\n              [METRIC_KEY]: name,\n              value: record[name],\n            }))\n            .filter(record => record.value !== null),\n        ],\n        [],\n      ),\n    [data, metricNames],\n  );\n  const groupbyRows = useMemo(\n    () => groupbyRowsRaw.map(getColumnLabel),\n    [groupbyRowsRaw],\n  );\n  const groupbyColumns = useMemo(\n    () => groupbyColumnsRaw.map(getColumnLabel),\n    [groupbyColumnsRaw],\n  );\n\n  const sorters = useMemo(\n    () => ({\n      [METRIC_KEY]: sortAs(metricNames),\n    }),\n    [metricNames],\n  );\n\n  const [rows, cols] = useMemo(() => {\n    let [rows_, cols_] = transposePivot\n      ? [groupbyColumns, groupbyRows]\n      : [groupbyRows, groupbyColumns];\n\n    if (metricsLayout === MetricsLayoutEnum.ROWS) {\n      rows_ = combineMetric ? [...rows_, METRIC_KEY] : [METRIC_KEY, ...rows_];\n    } else {\n      cols_ = combineMetric ? [...cols_, METRIC_KEY] : [METRIC_KEY, ...cols_];\n    }\n    return [rows_, cols_];\n  }, [\n    combineMetric,\n    groupbyColumns,\n    groupbyRows,\n    metricsLayout,\n    transposePivot,\n  ]);\n\n  const handleChange = useCallback(\n    (filters: SelectedFiltersType) => {\n      const filterKeys = Object.keys(filters);\n      const groupby = [...groupbyRowsRaw, ...groupbyColumnsRaw];\n      setDataMask({\n        extraFormData: {\n          filters:\n            filterKeys.length === 0\n              ? undefined\n              : filterKeys.map(key => {\n                  const val = filters?.[key];\n                  const col =\n                    groupby.find(item => {\n                      if (isPhysicalColumn(item)) {\n                        return item === key;\n                      }\n                      if (isAdhocColumn(item)) {\n                        return item.label === key;\n                      }\n                      return false;\n                    }) ?? '';\n                  if (val === null || val === undefined)\n                    return {\n                      col,\n                      op: 'IS NULL',\n                    };\n                  return {\n                    col,\n                    op: 'IN',\n                    val: val as (string | number | boolean)[],\n                  };\n                }),\n        },\n        filterState: {\n          value:\n            filters && Object.keys(filters).length\n              ? Object.values(filters)\n              : null,\n          selectedFilters:\n            filters && Object.keys(filters).length ? filters : null,\n        },\n      });\n    },\n    [groupbyColumnsRaw, groupbyRowsRaw, setDataMask],\n  );\n\n  const getCrossFilterDataMask = useCallback(\n    (value: { [key: string]: string }) => {\n      const isActiveFilterValue = (key: string, val: DataRecordValue) =>\n        !!selectedFilters && selectedFilters[key]?.includes(val);\n\n      if (!value) {\n        return undefined;\n      }\n\n      const [key, val] = Object.entries(value)[0];\n      let values = { ...selectedFilters };\n      if (isActiveFilterValue(key, val)) {\n        values = {};\n      } else {\n        values = { [key]: [val] };\n      }\n\n      const filterKeys = Object.keys(values);\n      const groupby = [...groupbyRowsRaw, ...groupbyColumnsRaw];\n      return {\n        dataMask: {\n          extraFormData: {\n            filters:\n              filterKeys.length === 0\n                ? undefined\n                : filterKeys.map(key => {\n                    const val = values?.[key];\n                    const col =\n                      groupby.find(item => {\n                        if (isPhysicalColumn(item)) {\n                          return item === key;\n                        }\n                        if (isAdhocColumn(item)) {\n                          return item.label === key;\n                        }\n                        return false;\n                      }) ?? '';\n                    if (val === null || val === undefined)\n                      return {\n                        col,\n                        op: 'IS NULL' as const,\n                      };\n                    return {\n                      col,\n                      op: 'IN' as const,\n                      val: val as (string | number | boolean)[],\n                    };\n                  }),\n          },\n          filterState: {\n            value:\n              values && Object.keys(values).length\n                ? Object.values(values)\n                : null,\n            selectedFilters:\n              values && Object.keys(values).length ? values : null,\n          },\n        },\n        isCurrentValueSelected: isActiveFilterValue(key, val),\n      };\n    },\n    [groupbyColumnsRaw, groupbyRowsRaw, selectedFilters],\n  );\n\n  const toggleFilter = useCallback(\n    (\n      e: MouseEvent,\n      value: string,\n      filters: FilterType,\n      pivotData: Record<string, any>,\n      isSubtotal: boolean,\n      isGrandTotal: boolean,\n    ) => {\n      if (isSubtotal || isGrandTotal || !emitCrossFilters) {\n        return;\n      }\n\n      // allow selecting text in a cell\n      if (getSelectedText()) {\n        return;\n      }\n\n      const isActiveFilterValue = (key: string, val: DataRecordValue) =>\n        !!selectedFilters && selectedFilters[key]?.includes(val);\n\n      const filtersCopy = { ...filters };\n      delete filtersCopy[METRIC_KEY];\n\n      const filtersEntries = Object.entries(filtersCopy);\n      if (filtersEntries.length === 0) {\n        return;\n      }\n\n      const [key, val] = filtersEntries[filtersEntries.length - 1];\n\n      let updatedFilters = { ...(selectedFilters || {}) };\n      // multi select\n      // if (selectedFilters && isActiveFilterValue(key, val)) {\n      //   updatedFilters[key] = selectedFilters[key].filter((x: DataRecordValue) => x !== val);\n      // } else {\n      //   updatedFilters[key] = [...(selectedFilters?.[key] || []), val];\n      // }\n      // single select\n      if (selectedFilters && isActiveFilterValue(key, val)) {\n        updatedFilters = {};\n      } else {\n        updatedFilters = {\n          [key]: [val],\n        };\n      }\n      if (\n        Array.isArray(updatedFilters[key]) &&\n        updatedFilters[key].length === 0\n      ) {\n        delete updatedFilters[key];\n      }\n      handleChange(updatedFilters);\n    },\n    [emitCrossFilters, selectedFilters, handleChange],\n  );\n\n  const tableOptions = useMemo(\n    () => ({\n      clickRowHeaderCallback: toggleFilter,\n      clickColumnHeaderCallback: toggleFilter,\n      colTotals,\n      colSubTotals,\n      rowTotals,\n      rowSubTotals,\n      highlightHeaderCellsOnHover:\n        emitCrossFilters ||\n        isFeatureEnabled(FeatureFlag.DRILL_BY) ||\n        isFeatureEnabled(FeatureFlag.DRILL_TO_DETAIL),\n      highlightedHeaderCells: selectedFilters,\n      omittedHighlightHeaderGroups: [METRIC_KEY],\n      cellColorFormatters: { [METRIC_KEY]: metricColorFormatters },\n      dateFormatters,\n    }),\n    [\n      colTotals,\n      colSubTotals,\n      dateFormatters,\n      emitCrossFilters,\n      metricColorFormatters,\n      rowTotals,\n      rowSubTotals,\n      selectedFilters,\n      toggleFilter,\n    ],\n  );\n\n  const subtotalOptions = useMemo(\n    () => ({\n      colSubtotalDisplay: { displayOnTop: colSubtotalPosition },\n      rowSubtotalDisplay: { displayOnTop: rowSubtotalPosition },\n      arrowCollapsed: <StyledPlusSquareOutlined />,\n      arrowExpanded: <StyledMinusSquareOutlined />,\n    }),\n    [colSubtotalPosition, rowSubtotalPosition],\n  );\n\n  const handleContextMenu = useCallback(\n    (\n      e: MouseEvent,\n      colKey: (string | number | boolean)[] | undefined,\n      rowKey: (string | number | boolean)[] | undefined,\n      dataPoint: { [key: string]: string },\n    ) => {\n      if (onContextMenu) {\n        e.preventDefault();\n        e.stopPropagation();\n        const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n        if (colKey && colKey.length > 1) {\n          colKey.forEach((val, i) => {\n            const col = cols[i];\n            const formatter = dateFormatters[col];\n            const formattedVal = formatter?.(val as number) || String(val);\n            if (i > 0) {\n              drillToDetailFilters.push({\n                col,\n                op: '==',\n                val,\n                formattedVal,\n                grain: formatter ? timeGrainSqla : undefined,\n              });\n            }\n          });\n        }\n        if (rowKey) {\n          rowKey.forEach((val, i) => {\n            const col = rows[i];\n            const formatter = dateFormatters[col];\n            const formattedVal = formatter?.(val as number) || String(val);\n            drillToDetailFilters.push({\n              col,\n              op: '==',\n              val,\n              formattedVal,\n              grain: formatter ? timeGrainSqla : undefined,\n            });\n          });\n        }\n        onContextMenu(e.clientX, e.clientY, {\n          drillToDetail: drillToDetailFilters,\n          crossFilter: getCrossFilterDataMask(dataPoint),\n          drillBy: dataPoint && {\n            filters: [\n              {\n                col: Object.keys(dataPoint)[0],\n                op: '==',\n                val: Object.values(dataPoint)[0],\n              },\n            ],\n            groupbyFieldName: rowKey ? 'groupbyRows' : 'groupbyColumns',\n          },\n        });\n      }\n    },\n    [\n      cols,\n      dateFormatters,\n      getCrossFilterDataMask,\n      onContextMenu,\n      rows,\n      timeGrainSqla,\n    ],\n  );\n\n  return (\n    <Styles height={height} width={width} margin={theme.gridUnit * 4}>\n      <PivotTableWrapper>\n        <PivotTable\n          data={unpivotedData}\n          rows={rows}\n          cols={cols}\n          aggregatorsFactory={aggregatorsFactory}\n          defaultFormatter={defaultFormatter}\n          customFormatters={metricFormatters}\n          aggregatorName={aggregateFunction}\n          vals={vals}\n          colOrder={colOrder}\n          rowOrder={rowOrder}\n          sorters={sorters}\n          tableOptions={tableOptions}\n          subtotalOptions={subtotalOptions}\n          namesMapping={verboseMap}\n          onContextMenu={handleContextMenu}\n        />\n      </PivotTableWrapper>\n    </Styles>\n  );\n}\n"],"names":["getSelectedText","_window$getSelection","window","getSelection","toString","PlusSquareOutlined","props","ref","AntdIcon","icon","displayName","MinusSquareOutlined","numberFormat","optsIn","opts","digitsAfterDecimal","scaler","thousandsSep","decimalSep","prefix","suffix","x","Number","isNaN","isFinite","result","nStr","String","split","x1","x2","length","rgx","test","replace","addSeparators","toFixed","rx","rd","rz","naturalSort","as","bs","nas","nbs","a","b","match","a1","shift","b1","sortAs","order","mapping","lMapping","forEach","element","i","toLowerCase","getSort","sorters","attr","sort","usFmt","usFmtInt","usFmtPct","fmtNonString","formatter","baseAggregatorTemplates","count","push","this","value","format","uniques","fn","_ref","uniq","record","Array","from","includes","numInputs","sum","_ref2","parseFloat","extremes","mode","_ref3","data","val","sorter","coercedValue","Math","quantile","q","_ref4","vals","strMap","Object","keys","values","middle","floor","ceil","runningStat","ddof","_ref5","n","m","s","strValue","mNew","sqrt","Error","sumOverSum","_ref6","num","denom","sumNum","sumDenom","fractionOf","wrapped","type","_len","arguments","_key","rowKey","colKey","selector","total","row","col","inner","acc","getAggregator","extendedAggregatorTemplates","countUnique","f","listUnique","join","max","min","first","last","median","average","var","stdev","aggregatorTemplates","aggregators","Count","tpl","Sum","Average","Median","Minimum","Maximum","First","Last","flatKey","attrVals","fromCharCode","PivotData","constructor","inputProps","subtotals","defaultProps","processRecord","bind","PropTypes","propTypes","aggregator","aggregatorsFactory","defaultFormatter","aggregatorName","formattedAggregators","customFormatters","entries","reduce","_ref7","key","columnFormatter","_ref8","column","tree","rowKeys","colKeys","rowTotals","colTotals","allTotal","sorted","forEachRecord","getFormattedAggregator","totalsKeys","groupName","groupValue","find","_ref9","name","arrSort","attrs","partialOnTop","reverse","sortersArr","map","limit","comparison","sortKeys","v","r","c","rowOrder","rows","rowPartialOnTop","colOrder","cols","colPartialOnTop","getColKeys","getRowKeys","rowStart","rowEnabled","colStart","colEnabled","isRowSubtotal","isColSubtotal","ri","fRowKey","slice","flatRowKey","isSubtotal","ci","fColKey","flatColKey","agg","input","isArray","t","isRequired","valueFilter","derivedAttributes","Styles","styled","div","theme","isDashboardEditMode","css","gridUnit","typography","sizes","families","sansSerif","colors","grayscale","light5","light2","weights","normal","primary","light3","bold","dark2","light4","parseLabel","displayHeaderCell","needToggle","ArrowIcon","onArrowClick","namesMapping","___EmotionJSX","className","role","tabIndex","onClick","TableRenderer","React","super","state","collapsedRows","collapsedCols","clickHeaderHandler","clickHandler","getBasePivotSettings","colAttrs","rowAttrs","tableOptions","subtotalOptions","arrowCollapsed","arrowExpanded","colSubtotalDisplay","displayOnTop","enabled","colSubTotals","hideOnExpand","rowSubtotalDisplay","rowSubTotals","pivotData","cellCallbacks","rowTotalCallbacks","colTotalCallbacks","grandTotalCallback","clickCallback","rowValues","colValues","filters","colLimit","rowLimit","e","attrIdx","callback","isGrandTotal","collapseAttr","rowOrCol","allKeys","stopPropagation","keyLen","collapsed","filter","k","updates","setState","expandAttr","toggleRowKey","toggleColKey","calcAttrSpans","attrArr","numAttrs","spans","li","lv","cv","ent","depth","renderColHeaderRow","attrName","pivotSettings","visibleColKeys","colAttrSpans","maxColVisible","highlightHeaderCellsOnHover","omittedHighlightHeaderGroups","highlightedHeaderCells","dateFormatters","spaceCell","colSpan","rowSpan","arrowClickHandle","subArrow","attrNameCell","attrValueCells","rowIncrSpan","handleContextMenu","colLabelClass","onContextMenu","undefined","headerCellFormattedValue","clickColumnHeaderCallback","totalCell","cells","renderRowHeaderRow","maxRowVisible","needLabelToggle","clickRowHeaderCallback","renderTableRow","rowIdx","rowAttrSpans","cellColorFormatters","colIncrSpan","valueCellClassName","needRowToggle","attrValuePaddingCell","rowClickHandlers","valueCells","aggValue","backgroundColor","cellColorFormatter","formatterResult","getColorFromValue","style","fontWeight","rowCells","renderTotalsRow","totalLabelCell","totalValueCells","padding","grandTotalCell","totalCells","visibleKeys","subtotalDisplay","some","j","document","contains","querySelector","render","cachedProps","cachedBasePivotSettings","visibleRowKeys","PivotTable","height","width","margin","parseInt","PivotTableWrapper","METRIC_KEY","StyledPlusSquareOutlined","StyledMinusSquareOutlined","PivotTableChart","groupbyRows","groupbyRowsRaw","groupbyColumns","groupbyColumnsRaw","metrics","aggregateFunction","transposePivot","combineMetric","rowSubtotalPosition","colSubtotalPosition","valueFormat","currencyFormat","emitCrossFilters","setDataMask","selectedFilters","verboseMap","columnFormats","currencyFormats","metricsLayout","metricColorFormatters","timeGrainSqla","useTheme","useMemo","symbol","CurrencyFormatter","currency","d3Format","getNumberFormatter","customFormatsArray","Set","metricName","hasCustomMetricFormatters","metricFormatters","fromEntries","metric","metricNames","label","unpivotedData","getColumnLabel","rows_","cols_","MetricsLayoutEnum","ROWS","handleChange","useCallback","filterKeys","groupby","extraFormData","_groupby$find","item","isPhysicalColumn","isAdhocColumn","op","filterState","getCrossFilterDataMask","isActiveFilterValue","_selectedFilters$key","dataMask","_values","_groupby$find2","isCurrentValueSelected","toggleFilter","filtersCopy","filtersEntries","updatedFilters","_selectedFilters$key2","isFeatureEnabled","FeatureFlag","DRILL_BY","DRILL_TO_DETAIL","dataPoint","preventDefault","drillToDetailFilters","formattedVal","grain","clientX","clientY","drillToDetail","crossFilter","drillBy","groupbyFieldName"],"sourceRoot":""}