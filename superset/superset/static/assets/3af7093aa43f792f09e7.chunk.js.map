{"version":3,"file":"3af7093aa43f792f09e7.chunk.js","mappings":"yNAyBO,MAAMA,EAAiB,CAC5BC,WAAWC,EAAAA,EAAAA,GAAE,SACbC,aAAaD,EAAAA,EAAAA,GAAE,eACfE,gBAAgBF,EAAAA,EAAAA,GAAE,0BAClBG,qBAAqBH,EAAAA,EAAAA,GAAE,oBACvBI,eAAeJ,EAAAA,EAAAA,GAAE,yBACjBK,oBAAoBL,EAAAA,EAAAA,GAAE,mBACtBM,YAAYN,EAAAA,EAAAA,GAAE,cACdO,cAAcP,EAAAA,EAAAA,GAAE,gBAChBQ,2BAA2BR,EAAAA,EAAAA,GAAE,SAC7BS,YAAYT,EAAAA,EAAAA,GAAE,QACdU,aAAaV,EAAAA,EAAAA,GAAE,SACfW,YAAYX,EAAAA,EAAAA,GAAE,QACdY,WAAWZ,EAAAA,EAAAA,GAAE,OACba,YAAYb,EAAAA,EAAAA,GAAE,QACdc,cAAcd,EAAAA,EAAAA,GAAE,UAChBe,cAAcf,EAAAA,EAAAA,GAAE,UAChBgB,cAAchB,EAAAA,EAAAA,GAAE,SAChBiB,cAAcjB,EAAAA,EAAAA,GAAE,MAChBkB,iBAAiBlB,EAAAA,EAAAA,GAAE,MACnBmB,gBAAgBnB,EAAAA,EAAAA,GAAE,MAClBoB,qCAAqCpB,EAAAA,EAAAA,GAAE,OACvCqB,aAAarB,EAAAA,EAAAA,GAAE,MACfsB,eAAetB,EAAAA,EAAAA,GAAE,KACjBuB,4BAA4BvB,EAAAA,EAAAA,GAAE,MAC9BwB,4BAA4BxB,EAAAA,EAAAA,GAAE,aAC9ByB,kBAAkBzB,EAAAA,EAAAA,GAAE,2BACpB0B,iBAAiB1B,EAAAA,EAAAA,GAAE,SACnB2B,SAAU,EAER3B,EAAAA,EAAAA,GAAE,WACFA,EAAAA,EAAAA,GAAE,WACFA,EAAAA,EAAAA,GAAE,YACFA,EAAAA,EAAAA,GAAE,cACFA,EAAAA,EAAAA,GAAE,aACFA,EAAAA,EAAAA,GAAE,WACFA,EAAAA,EAAAA,GAAE,aAEJ4B,OAAQ,EAEN5B,EAAAA,EAAAA,GAAE,YACFA,EAAAA,EAAAA,GAAE,aACFA,EAAAA,EAAAA,GAAE,UACFA,EAAAA,EAAAA,GAAE,UACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,SACFA,EAAAA,EAAAA,GAAE,SACFA,EAAAA,EAAAA,GAAE,WACFA,EAAAA,EAAAA,GAAE,cACFA,EAAAA,EAAAA,GAAE,YACFA,EAAAA,EAAAA,GAAE,aACFA,EAAAA,EAAAA,GAAE,aAGJ6B,YAAa,EACX7B,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QAGJ8B,UAAW,EACT9B,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,SAIO+B,GAAaC,EAAAA,EAAAA,KAAQC,IAChCC,EAAAA,EAAAA,IAACC,EAAAA,GAAc,CACbC,kBAAmBC,GAAWA,EAAQC,gBAEtCJ,EAAAA,EAAAA,IAACK,EAAAA,SAAeC,EAAAA,EAAAA,GAAA,CAACC,OAAQ3C,GAAYmC,MAEvC;;;;;;qBAMmBS,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,QAAQ;wBAC1BC,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAC5BF,EAAMG,OAAOC,UAAUC,MAAM;;;qBAGdC,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMC,QAAQ;;;;;;;;kFCpGlD,MAAMM,GAAelB,EAAAA,EAAAA,IAAOmB,EAAAA,EAAW;;wBAEfT,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMG,OAAOM,QAAQC,IAAI;;EAInDC,EAAUrB,IAAuBC,EAAAA,EAAAA,IAACgB,EAAiBjB,E,sGCJhE,MAAMsB,EACE,oBAIFC,EAAmB,QAEnBC,EAAgB,CACpB,WAAY,CAAC,wBAAyB,yBACtC,WAAY,CAAC,wBAAyB,yBACtC,WAAY,CAAC,yBAA0B,0BACvC,WAAY,CACV,mCACA,oCAEF,WAAY,CAAC,wBAAyB,yBACtC,WAAY,CAAC,uBAAwB,wBACrC,WAAY,CAAC,uBAAwB,wBACrC,MAAS,CAAC,wBAAyB,kCACnC,KAAM,CAACF,EAAuBA,GAC9B,MAAO,CAAC,6BAA8B,wBAGlCG,EAAcC,MACdC,EAAUD,IAAO,CAAC,KAAM,IACxBE,EAAOF,IAAO,CAAC,KAAM,IAErBG,EAAgBC,GACpBH,EAAQI,GAAGD,GAAME,YAAYC,WAC7BL,EAAKG,GAAGD,GAAME,YAAYC,WAEtBC,EAAmBJ,IAAgB,IAAAK,EAAAC,EACvC,MAAMC,EAAUR,EAAaC,GAC7B,OACGL,EAAYM,GAAGD,GAAMQ,QACI,OADGH,EACzBX,EAAca,SAAQ,EAAtBF,EAAyB,GACH,OADKC,EAC3BZ,EAAca,SAAQ,EAAtBD,EAAyB,KAAON,CAAI,EAItCS,EAAYb,IAAAA,GACfc,YACAC,KAAIC,GAAWhB,IAAAA,GAAUiB,gBAAgBD,GAAS,KAClDE,OAEGC,EAAuC,GAC7CN,EAAUO,SAAQC,IAEbF,EAAUG,MACTC,GAAUpB,EAAaoB,EAAOnB,QAAUD,EAAakB,EAAKjB,SAG5De,EAAUK,KAAKH,E,IAInB,MAAMI,EAAmBN,EAAUJ,KAAIM,IAAI,CACzCK,MAAO,OAAO1B,IAAAA,GACRD,EAAasB,EAAKjB,MACrBuB,OAAO,SAASnB,EAAgBa,EAAKjB,SACxCwB,MAAOP,EAAKjB,KACZO,QAASR,EAAakB,EAAKjB,MAC3ByB,aAAcR,EAAKjB,SAGf0B,EAAmCA,CACvCC,EACAC,IAEAhC,IAAAA,GAAUD,EAAagC,EAAEF,cAAcvB,YACvCN,IAAAA,GAAUD,EAAaiC,EAAEH,cAAcvB,YAGzCmB,EAAiBQ,KAAKH,GAEtB,MAAMI,EAA0BC,IAAgB,IAAAC,EAAA,OAC4B,OAA1EA,EAAAX,EAAiBH,MAAKC,GAAUA,EAAOZ,UAAYR,EAAagC,WAAU,EAA1EC,EACIR,QA3EG,gBA2E4B,EAQvB,SAAUS,EAAgBtD,GAIhB,IAJiB,iBACvCuD,EAAgB,SAChBH,EAAQ,SACRI,EAAW1C,GACWd,EACtB,MAAMyD,GAAgBC,EAAAA,EAAAA,UACpB,IAAMP,EAAuBC,GAAYnC,IAAAA,GAAU0C,UACnD,CAACP,IAUH,OANAQ,EAAAA,EAAAA,YAAU,KACJR,IAAaK,GACfF,EAAiBE,E,GAElB,CAACA,EAAeF,EAAkBH,KAGnC5D,EAAAA,EAAAA,IAACqE,EAAAA,GAAM,CACLC,WAAWxG,EAAAA,EAAAA,GAAE,qBACbyG,KAAGC,EAAAA,EAAAA,IAAE,CAAER,YAAU,OACjBS,SAAU3C,GAAMiC,EAAiBjC,GACjCuB,MAAOY,EACPS,QAASxB,EACTyB,eAAgBpB,GAGtB,C,4TCxGO,MAAMqB,EACXpE,IAAwB,IAAvB,MAAE6C,EAAK,SAAEoB,GAAUjE,EAClB,MAAMC,GAAQoE,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,QAAkB,OAC5BC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAC1C,UAGIC,GAA0BC,EAAAA,EAAAA,cAC7BC,GAAwBJ,EAAkBI,EAAEC,OAAOjC,QACpD,IAGIkC,GAAiBH,EAAAA,EAAAA,cACpBI,IAAoB,IAAAC,EACnBhB,EAASe,GACO,OAAhBC,EAAAX,EAASY,UAATD,EAAkBE,SAASH,EAAS,GAEtC,CAACV,EAAUL,IAGPmB,GAAaR,EAAAA,EAAAA,cAChBS,IACCpB,EAASoB,EAAMP,OAAOjC,MAAM,GAE9B,CAACoB,IAGGqB,GAAmBV,EAAAA,EAAAA,cAAY,KAAK,IAAAW,EACxCtB,GAAyB,OAAhBsB,EAAAjB,EAASY,cAAO,EAAhBK,EAAkBC,MAAM3C,QAAS,GAAG,GAC5C,CAACoB,KAEGwB,EAAOC,IAAWhB,EAAAA,EAAAA,YAEzB,OACElF,EAAAA,EAAAA,IAAAmG,EAAAA,SAAA,MACEnG,EAAAA,EAAAA,IAACoG,EAAAA,EAAMC,MAAK,CAAC5B,SAAUU,EAAyB9B,MAAO2B,IACrDhF,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,gCACbtG,EAAAA,EAAAA,IAACoG,EAAAA,EAAK,CAAoB/C,MAAM,YAChCrD,EAAAA,EAAAA,IAACH,EAAAA,WAAU,CACT0G,aAAa,EACblD,MAAOA,EACPsC,SAAUJ,EACViB,SAA6B,WAAnBxB,EACVyB,aAAiC,WAAnBzB,EACdkB,QAASA,MAGblG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,gCACbtG,EAAAA,EAAAA,IAACoG,EAAAA,EAAK,CAAmB/C,MAAM,WAC/BrD,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,gBAAexI,EAAAA,EAAAA,GAAE,mBACjCkC,EAAAA,EAAAA,IAAC0G,EAAoB,CAEnBJ,UAAU,iBAEVtG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAAC2G,EAAAA,GAAK,CACJC,KAAK,OACL/E,KAAK,UACLgF,IAAK/B,EACLgC,MAAOb,EAAQ,CAAEc,YAAatG,EAAMG,OAAOqF,MAAM9E,MAAS,CAAC,EAC3D6F,aAAalJ,EAAAA,EAAAA,GAAE,mBACf0I,SAA6B,UAAnBxB,EACViC,OAAQrB,EACRsB,aAAcpB,QAMvB,EC7EHqB,EAA2BrH,EAAAA,GAAOsH,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;EAwC9BC,EAAiE7G,IAKzE,IAL0E,QAC7E8G,EAAU,KAAI,MACdC,EAAK,SACLC,EAAQ,SACRC,GACDjH,EACC,MAAM,OAAEkH,EAAM,WAAEC,EAAU,QAAEjD,GAAY4C,GAAW,CAAC,GAC7CM,EAAgBC,IAAqB3C,EAAAA,EAAAA,UAC1CyC,GAAc,IAEVlH,GAAQoE,EAAAA,EAAAA,MAEd,OAAKyC,GAoCCK,GAAcC,IAAmBD,GACrCE,EAAkBF,IAIlB3H,EAAAA,EAAAA,IAACmH,EAAwB,MACvBnH,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,qBACbtG,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAACqE,EAAAA,GAAM,CACLC,WAAWxG,EAAAA,EAAAA,GAAE,mBAEb2G,SA5CYiD,IAGtB,GADAG,EAAkB,IACdL,EAAU,CACZ,MAAMM,EAAiB,IAClBR,EACHI,SACAC,WAAY,IAGdH,EAASD,EAAOO,E,GAmCRd,aAAalJ,EAAAA,EAAAA,GAAE,0BACf4G,SAAUA,GAAW,IAAIlC,KACtBkF,IAAqC,CACpCvE,MAAOuE,EACPrE,MAAOqE,MAGXrE,MAAOqE,WAIDK,IAAXL,GAA0BD,GACzBzH,EAAAA,EAAAA,IAAA,QACEgI,KAAK,SACLC,SAAU,EACV3B,UAAU,gBACV4B,QAASA,IAAMT,EAASF,KAExBvH,EAAAA,EAAAA,IAACmI,EAAAA,EAAMC,MAAK,CAACC,UAAW5H,EAAMG,OAAOC,UAAUM,QAE/C,WAEM4G,IAAXL,GACC1H,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,kBAAiBxI,EAAAA,EAAAA,GAAE4J,KAClC1H,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAAA,YACE6B,KAAK,aACLwB,MAAOuE,EACPnD,SA3DVoB,IAEA,MAAM,OAAEP,GAAWO,EAInB,GAFAgC,EAAkBvC,EAAOjC,OAErBmE,EAAU,CACZ,MAAMM,EAAiB,IAClBR,EACHK,WAAYrC,EAAOjC,OAGrBmE,EAASD,EAAOO,E,OAkDZ9H,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,WACZxI,EAAAA,EAAAA,GAAE,4CAGL,OApFC,IAqFoB,EC/FzBwK,EAAiC,CACrC,iBACA,QACA,gBAsBIC,EAA2D,CAAC,SAC5DC,EAA8B,MAC9BC,EAAa,CACjB,CACEtF,OAAOrF,EAAAA,EAAAA,GAAE,oBACTuF,MAAO,KAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,mBACTuF,MAAO,KAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,yBACTuF,MAAO,MAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,wBACTuF,MAAO,MAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,iBACTuF,MAAO,MAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,qBACTuF,MAAO,MAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,YACTuF,MAAO,aAILqF,EAAoB,CACxB,CACEvF,OAAOrF,EAAAA,EAAAA,GAAE,QACTuF,MAAO,GAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,WACTuF,MAAO,IAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,WACTuF,MAAO,IAET,CACEF,OAAOrF,EAAAA,EAAAA,GAAE,WACTuF,MAAO,KAILsF,GAAc7I,EAAAA,EAAAA,IAAO8I,EAAAA,QAAM;;;;;;;EAS3BC,GAAgB/I,EAAAA,EAAAA,IAAOgJ,EAAAA,EAAuB;iBACnCtI,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,QAAQ;EAGxCqI,EAActI,GAAyB8D,EAAAA,EAAG;iBACd,EAAjB9D,EAAMC;WACZD,EAAMG,OAAOC,UAAUM;EAG5B6H,EAAyBlJ,EAAAA,GAAOsH,GAAG;;;;;kBAKvBzG,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAAKF,EAAMC,QAAQ;;;;;;;;eAQhCK,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAsB,EAAjBN,EAAMC,QAAY;+BACjBuI,IAAA,IAAC,MAAExI,GAAOwI,EAAA,OAAKxI,EAAMG,OAAOC,UAAUqI,MAAM;;;;;;;;;iCAS1CC,IAAA,IAAC,MAAE1I,GAAO0I,EAAA,OAAsB,EAAjB1I,EAAMC,QAAY;iBACjD0I,IAAA,IAAC,MAAE3I,GAAO2I,EAAA,OAAsB,EAAjB3I,EAAMC,QAAY;;;;;;;kCAOhB2I,IAAA,IAAC,MAAE5I,GAAO4I,EAAA,OAAK5I,EAAMG,OAAOC,UAAUqI,MAAM;;;;iCAI7CI,IAAA,IAAC,MAAE7I,GAAO6I,EAAA,OAAK7I,EAAMG,OAAOC,UAAUqI,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BvEK,EAAqBzJ,EAAAA,GAAOsH,GAAG;;;YAGzBoC,IAAA,IAAC,MAAE/I,GAAO+I,EAAA,OAAsB,EAAjB/I,EAAMC,QAAY;MACvC+I,IAAA,IAAC,MAAEhJ,GAAOgJ,EAAA,OAAsB,EAAjBhJ,EAAMC,QAAY;;;;;;;mBAOpBgJ,IAAA,IAAC,MAAEjJ,GAAOiJ,EAAA,OAAKjJ,EAAMC,QAAQ;aACnCiJ,IAAA,IAAC,MAAElJ,GAAOkJ,EAAA,OAAKlJ,EAAMG,OAAOqF,MAAM9E,IAAI;;EAI7CyI,EAAwB9J,EAAAA,GAAOsH,GAAG;;;;;;;;EAU3BV,EAAuB5G,EAAAA,GAAOsH,GAAG;;;;;;;;;;;;;;;aAejCyC,IAAA,IAAC,MAAEpJ,GAAOoJ,EAAA,OAAKpJ,EAAMG,OAAOC,UAAUM,IAAI;iBACtC2I,IAAA,IAAC,MAAErJ,GAAOqJ,EAAA,OAAKrJ,EAAMsJ,WAAWC,MAAMC,CAAC;eACzCC,IAAA,IAAC,MAAEzJ,GAAOyJ,EAAA,OAAKzJ,EAAMC,QAAQ;;;;;mBAKzByJ,IAAA,IAAC,MAAE1J,GAAO0J,EAAA,OAAK1J,EAAMC,SAAW,CAAC;aACvC0J,IAAA,IAAC,MAAE3J,GAAO2J,EAAA,OAAK3J,EAAMG,OAAOqF,MAAM9E,IAAI;;;;;;;;;;;;;sBAa7BkJ,IAAA,IAAC,MAAE5J,GAAO4J,EAAA,OAAsB,EAAjB5J,EAAMC,QAAY;;;;kBAIrC4J,IAAA,IAAC,MAAE7J,GAAO6J,EAAA,OAAK7J,EAAMC,QAAQ;;;;;;;;;;aAUlC6J,IAAA,IAAC,MAAE9J,GAAO8J,EAAA,OAAK9J,EAAMG,OAAOC,UAAUM,IAAI;;;;;;;;;;aAU1CqJ,IAAA,IAAC,MAAE/J,GAAO+J,EAAA,OAAK/J,EAAMG,OAAOC,UAAU4J,MAAM;;;;;;eAM1CC,IAAA,IAAC,MAAEjK,GAAOiK,EAAA,OAAKjK,EAAMC,QAAQ;QACpCiK,IAAA,IAAC,MAAElK,GAAOkK,EAAA,OAAsB,EAAjBlK,EAAMC,QAAY;;wBAEjBkK,IAAA,IAAC,MAAEnK,GAAOmK,EAAA,OAAKnK,EAAMG,OAAOC,UAAUqI,MAAM;qBAC/C2B,IAAA,IAAC,MAAEpK,GAAOoK,EAAA,OAAKpK,EAAMC,QAAQ;;;;;;;;;;EAY5CoK,GAAchL,EAAAA,EAAAA,IAAOsG,EAAAA,EAAM;;iBAEhB2E,IAAA,IAAC,MAAEtK,GAAOsK,EAAA,OAAsB,EAAjBtK,EAAMC,QAAY;EAG5CsK,GAAmBlL,EAAAA,EAAAA,IAAOsG,EAAAA,EAAMC,MAAM;iBAC3B4E,IAAA,IAAC,MAAExK,GAAOwK,EAAA,OAAsB,IAAjBxK,EAAMC,QAAc;EAG9CwK,GAAiBpL,EAAAA,EAAAA,IAAOqL,EAAAA,GAAa;gBAC3BC,IAAA,IAAC,MAAE3K,GAAO2K,EAAA,OAAsB,EAAjB3K,EAAMC,QAAY;EAI3C2K,EAA8BvL,EAAAA,GAAOsH,GAAG;WACnCkE,IAAA,IAAC,MAAE7K,GAAO6K,EAAA,OAAK7K,EAAMG,OAAOM,QAAQqK,KAAK;;;;oBAIhCC,IAAA,IAAC,MAAE/K,GAAO+K,EAAA,OAAsB,EAAjB/K,EAAMC,QAAY;;;;aAIxC+K,IAAA,IAAC,MAAEhL,GAAOgL,EAAA,OAAKhL,EAAMG,OAAOC,UAAU4J,MAAM;;;EAKnDiB,EAAkC5L,EAAAA,GAAOsH,GAAG;;;;EAU5CuE,EAAelL,GAAyB8D,EAAAA,EAAG;kBACd,EAAjB9D,EAAMC;EAUXkL,EAAe,CAC1BC,8BAA8B/N,EAAAA,EAAAA,GAAE,2BAChCgO,0BAA0BhO,EAAAA,EAAAA,GAAE,uBAC5BiO,WAAWjO,EAAAA,EAAAA,GAAE,QACbkO,UAAUlO,EAAAA,EAAAA,GAAE,OACZmO,kBAAkBnO,EAAAA,EAAAA,GAAE,eACpBoO,iBAAiBpO,EAAAA,EAAAA,GAAE,cACnBqO,iBAAiBrO,EAAAA,EAAAA,GAAE,cACnBsO,gBAAgBtO,EAAAA,EAAAA,GAAE,aAClBuO,kBAAkBvO,EAAAA,EAAAA,GAAE,eACpBwO,iBAAiBxO,EAAAA,EAAAA,GAAE,cACnByO,aAAazO,EAAAA,EAAAA,GAAE,UACf0O,kBAAkB1O,EAAAA,EAAAA,GAAE,eACpB2O,aAAa3O,EAAAA,EAAAA,GAAE,UACf4O,sBAAsB5O,EAAAA,EAAAA,GAAE,mBACxB6O,eAAe7O,EAAAA,EAAAA,GAAE,YACjB8O,gBAAgB9O,EAAAA,EAAAA,GAAE,aAClB+O,mBAAmB/O,EAAAA,EAAAA,GACjB,4DAEFgP,uBAAuBhP,EAAAA,EAAAA,GAAE,uBACzBiP,gBAAgBjP,EAAAA,EAAAA,GAAE,aAClBkP,YAAYlP,EAAAA,EAAAA,GAAE,SACdmP,sBAAsBnP,EAAAA,EAAAA,GAAE,mBACxBoP,+BAA+BpP,EAAAA,EAAAA,GAAE,4BACjCqP,eAAerP,EAAAA,EAAAA,GAAE,YACjBsP,wBAAwBtP,EAAAA,EAAAA,GAAE,qBAC1BuP,oBAAoBvP,EAAAA,EAAAA,GAAE,iBACtBwP,sBAAsBxP,EAAAA,EAAAA,GAAE,mBACxByP,sBAAsBzP,EAAAA,EAAAA,GAAE,mBACxB0P,cAAc1P,EAAAA,EAAAA,GAAE,WAChB2P,mBAAmB3P,EAAAA,EAAAA,GAAE,gBACrB4P,sBAAsB5P,EAAAA,EAAAA,GAAE,mBACxB6P,gBAAgB7P,EAAAA,EAAAA,GAAE,aAClB8P,YAAY9P,EAAAA,EAAAA,GAAE,SACd+P,kBAAkB/P,EAAAA,EAAAA,GAAE,eACpBgQ,kBAAkBhQ,EAAAA,EAAAA,GAAE,eACpBiQ,cAAcjQ,EAAAA,EAAAA,GAAE,gBAChBkQ,mBAAmBlQ,EAAAA,EAAAA,GAAE,uCACrBmQ,8BAA8BnQ,EAAAA,EAAAA,GAAE,oBAChCoQ,0CAA0CpQ,EAAAA,EAAAA,GAAE,gCAC5CqQ,0BAA0BrQ,EAAAA,EAAAA,GAAE,wBAGxBsQ,EAAuEC,IAGxE,IAHyE,OAC5EC,EAAS,SAAQ,QACjBpG,GACDmG,EACC,MAAe,WAAXC,EACK,MAUPtO,EAAAA,EAAAA,IAACqL,EAA2B,CAAC/E,UAAWgI,EAAQpG,QAP9BqG,KACH,aAAXD,GACFpG,G,IAMAlI,EAAAA,EAAAA,IAAA,KAAGsG,UAAU,eAAgB,IACjB,WAAXgI,EACG1C,EAAaC,6BACbD,EAAaE,yBACW,EA0lClC,GAAe0C,EAAAA,EAAAA,KAhlCoDC,IAQ9D,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAR+D,eAClEC,EAAc,MACdC,EAAK,OACLC,EAAM,KACNC,EAAI,MACJC,EAAQ,KAAI,SACZC,GAAW,EAAK,gBAChBC,IACDf,EACC,MAAMgB,IAAcC,EAAAA,EAAAA,KAClBC,GAASA,EAAMC,OAEXC,IAAOC,EAAAA,EAAAA,KACPC,IACA,MAAJF,QAAI,EAAJA,GAAMG,qCAAsCzH,GAEvC0H,GAAaC,KAAkBhL,EAAAA,EAAAA,WAAkB,IACjDiL,GAAcC,KACnBlL,EAAAA,EAAAA,aACKmL,GAAUC,KAAepL,EAAAA,EAAAA,WAAkB,IAC3CqL,GAAaC,KAAkBtL,EAAAA,EAAAA,UAAiB,cAChDuL,GAAcC,KAAmBxL,EAAAA,EAAAA,UACtCsD,IAEKmI,GAAiBC,KAAsB1L,EAAAA,EAAAA,WAAkB,IAEzD2L,GAAcC,KAAmB5L,EAAAA,EAAAA,WAAkB,IAC1Dd,EAAAA,EAAAA,YAAU,KACR0M,GACkB,cAAhBP,IACmB,UAAhBA,IAA4C,QAAjBE,GAC/B,GACA,CAACF,GAAaE,KAGjB,MAAOM,GAAkBC,KAAuB9L,EAAAA,EAAAA,WAAkB,IAC3D+L,GAAeC,KAAoBhM,EAAAA,EAAAA,UAAuB,KAC1DiM,GAAkBC,KAAuBlM,EAAAA,EAAAA,UAAuB,KAChEmM,GAAcC,KAAmBpM,EAAAA,EAAAA,UAAuB,KAGxDqM,GAAcC,KAAmBtM,EAAAA,EAAAA,UAAiB,IAEnDuM,GAAuB,OAAVnC,EACboC,GACY,UAAhBnB,MACCoB,EAAAA,EAAAA,IAAiBC,EAAAA,GAAYC,wBAA0BtC,IAEnDuC,GAAsBC,KAC3B7M,EAAAA,EAAAA,UAAgC,WAC3B8M,GAAsBC,KAA2B/M,EAAAA,EAAAA,UAEtD,KAkBI,sCACJgN,GAAqC,iCACrCC,GAAgC,gCAChCC,KACE1C,EAAAA,EAAAA,KAAsCC,IAAQ,IAAA0C,EAAAC,EAAAC,EAAAC,EAChD,MAAM3C,EAAmB,OAAfwC,EAAG1C,EAAM8C,aAAM,EAAZJ,EAAcxC,KAC3B,MAAO,CACLqC,sCAC6C,OADRI,EAC/B,MAAJzC,OAAI,EAAJA,EAAMqC,uCAAqCI,EAjcnB,KAkc1BH,iCACwC,OADRI,EAC1B,MAAJ1C,OAAI,EAAJA,EAAMsC,kCAAgCI,EAlcnB,YAmcrBH,gCACuC,OADRI,EACzB,MAAJ3C,OAAI,EAAJA,EAAMuC,iCAA+BI,EAncnB,GAocrB,IAGGE,GAAe,CACnBC,QAAQ,EACRC,gBAAiB,iBACjBC,QAASV,GACTW,cAAeV,GACfW,gBAAiBb,GACjBrQ,KAAM,GACNmR,OAAQ,GACRrL,WAAY,GACZsL,IAAK,GACLC,sBAAuB,CAAC,EACxBC,eAAgB,GAChBC,kBAAkB,EAClBC,kBAActL,GAGVuL,GAA4BA,CAChC/L,EACAD,KAEA,MAAMiM,EAAWvB,GAAqBwB,QAEtCD,EAAShM,GAASD,EAClB2K,GAAwBsB,QAEDxL,IAAnBT,EAAQI,QAAiD,WAAzBoK,IAClCC,GAAwB,S,EAItB0B,GAA6BlM,IACjC,MAAMgM,EAAWvB,GAAqBwB,QAEtCD,EAASG,OAAOnM,EAAO,GACvB0K,GAAwBsB,GACxBxB,GAAwB,SAAS,GAKjCpC,OAAO,QAAEgE,GAAO,SAAEC,GAAU3N,MAAO4N,IAAY,cAC/CC,GAAa,eACbC,GAAc,eACdC,GAAc,WACdC,KACEC,EAAAA,EAAAA,IAAmC,UAAUpW,EAAAA,EAAAA,GAAE,UAAWoR,GAGxDiF,GAAOA,KACXF,KACA3D,IAAY,GACZlB,IACA6C,GAAwB,IACxB7B,GAAgB,IAAKsC,KACrBX,GAAwB,SAAS,EA6F7BqC,IAAmBlQ,EAAAA,EAAAA,UACvB,IACE,SAAC8B,EAAYqO,EAAcC,QAArB,IAALtO,IAAAA,EAAQ,IACP,MAAMuO,EAAQC,IAAAA,OAAa,CACzBC,OAAQzO,EACRqO,OACAK,UAAWJ,IAEb,OAAOK,EAAAA,EAAeC,IAAI,CACxBC,SAAU,uCAAuCN,MAChDO,MAAKC,IAAQ,CACdC,KAAMD,EAASE,KAAKC,OAAO1S,KACxB2S,IAA0C,CACzC9R,MAAO8R,EAAK9R,MACZF,MAAOgS,EAAKC,SAGhBC,WAAYN,EAASE,KAAKK,SAE9B,GACF,IAGIC,IAAgBnQ,EAAAA,EAAAA,cACnBoQ,IACC,MAAMC,EAAWD,IAAkB,MAAZrF,QAAY,EAAZA,GAAcsF,UAErC,IAAKA,GAAYA,EAAStS,MACxB,OAAO,KAGT,IAAI+R,EASJ,OANAjE,GAAcpO,SAAQ6S,IAChBA,EAAOrS,QAAUoS,EAASpS,OAASqS,EAAOrS,QAAUoS,EAASE,KAC/DT,EAASQ,E,IAINR,CAAM,GAEf,CAAa,MAAZ/E,QAAY,EAAZA,GAAcsF,SAAUxE,KAIrB2E,GAAmBA,CAAC/T,EAAcwB,KACtC+M,IAAgByF,IAAgB,IAC3BA,EACH,CAAChU,GAAOwB,KACP,EAGCyS,IAAoB5R,EAAAA,EAAAA,UACxB,IACE,SAAC8B,EAAYqO,EAAcC,QAArB,IAALtO,IAAAA,EAAQ,IACP,MAAMuO,EAAQC,IAAAA,OAAa,CACzBC,OAAQzO,EACRqO,OACAK,UAAWJ,IAEb,OAAOK,EAAAA,EAAeC,IAAI,CACxBC,SAAU,qCAAqCN,MAC9CO,MAAKC,IACN,MAAMgB,EAAOhB,EAASE,KAAKC,OAAO1S,KAC/B2S,IAA0C,CACzC9R,MAAO8R,EAAK9R,MACZF,MAAOgS,EAAKC,SAIhB,OADAlE,GAAiB6E,GACV,CAAEf,KAAMe,EAAMV,WAAYN,EAASE,KAAKK,MAAO,GAE1D,GACF,IAGIU,IAA4B,MAAZ7F,QAAY,EAAZA,GAAcsF,YAAatF,GAAasF,SAAStS,OACvEiB,EAAAA,EAAAA,YAAU,KAEJ4R,IACFJ,GAAiB,WAAYL,K,GAE9B,CAACS,GAAeT,KAEnB,MAAMU,IAAuB/R,EAAAA,EAAAA,UAC3B,IACE,SAAC8B,EAAYqO,EAAcC,QAArB,IAALtO,IAAAA,EAAQ,IACP,MAAMuO,EAAQC,IAAAA,WAAiB,CAC7BC,OAAQzO,EACRqO,OACAK,UAAWJ,IAEb,OAAOK,EAAAA,EAAeC,IAAI,CACxBC,SAAU,sCAAsCN,MAC/CO,MAAKC,IACN,MAAMgB,EAAOhB,EAASE,KAAKC,OAAO1S,KAC/B2S,IAA0C,CACzC9R,MAAO8R,EAAK9R,MACZF,MAAOgS,EAAKC,SAIhB,OADAhE,GAAoB2E,GACb,CAAEf,KAAMe,EAAMV,WAAYN,EAASE,KAAKK,MAAO,GAE1D,GACF,IAGIY,GAAoBV,IACxB,MAAMW,EAAYX,IAAkB,MAAZrF,QAAY,EAAZA,GAAcgG,WAEtC,IAAKA,GAAaA,EAAUhT,MAC1B,OAAO,KAGT,IAAI+R,EASJ,OANA/D,GAAiBtO,SAAQuT,IACnBA,EAAK/S,QAAU8S,EAAU9S,OAAS+S,EAAK/S,QAAU8S,EAAUR,KAC7DT,EAASkB,E,IAINlB,CAAM,EAGTmB,IAAejR,EAAAA,EAAAA,cAClBkR,IACC,MAAMC,EAAQD,IAAyB,MAAZnG,QAAY,EAAZA,GAAcoG,OAEzC,IAAKA,GAASA,EAAMpT,MAClB,OAAO,KAGT,IAAI+R,EASJ,OANA7D,GAAaxO,SAAQ2Q,IACfA,EAAMnQ,QAAUkT,EAAMlT,OAASmQ,EAAMnQ,QAAUkT,EAAMZ,KACvDT,EAAS1B,E,IAIN0B,CAAM,GAEf,CAAC7D,GAA0B,MAAZlB,QAAY,EAAZA,GAAcoG,QAGzBC,IAA2B,MAAZrG,QAAY,EAAZA,GAAcoG,UAAsB,MAAZpG,IAAAA,GAAcoG,MAAMpT,QACjEiB,EAAAA,EAAAA,YAAU,KAEJoS,IACFZ,GAAiB,QAASS,K,GAE3B,CAACA,GAAcG,KAElB,MAAMC,IAAmBvS,EAAAA,EAAAA,UACvB,IACE,SAAC8B,EAAYqO,EAAcC,QAArB,IAALtO,IAAAA,EAAQ,IACP,MAAMuO,EAAQC,IAAAA,WAAiB,CAC7BC,OAAQzO,EACRqO,OACAK,UAAWJ,IAEb,OAAOK,EAAAA,EAAeC,IAAI,CACxBC,SAAU,kCAAkCN,MAC3CO,MAAKC,IACN,MAAMgB,EAAOhB,EAASE,KAAKC,OAAO1S,KAC/B2S,IAA0C,CACzC9R,MAAO8R,EAAK9R,MACZF,MAAOgS,EAAKC,SAKhB,OADA9D,GAAgByE,GACT,CAAEf,KAAMe,EAAMV,WAAYN,EAASE,KAAKK,MAAO,GAE1D,GACF,IASIoB,GACJ7Q,IAEA,MACEP,QAAQ,KAAEsB,EAAI,MAAEvD,EAAK,KAAExB,IACrBgE,EACE8Q,EAAuB,WAAT/P,EAAoBgQ,SAASvT,EAAO,KAAO,KAAOA,EAEtEuS,GAAiB/T,EAAM8U,EAAY,EAO/BE,GACJhR,IAEA,MAAM,OAAEP,GAAWO,EACbxC,GAASiC,EAAOjC,MAIpBuS,GAAiBtQ,EAAOzD,KADZ,IAAVwB,OAC4B0E,EAI5B1E,EAAQyT,KAAKC,IAAI1T,EA10BL,GA00B2BA,E,GAgI7Ce,EAAAA,EAAAA,YAAU,KACR,GACEqN,KACc,MAAZtB,KAAAA,GAAcwF,KAAW,MAALrG,OAAK,EAALA,EAAOqG,MAAOxF,GAAawF,IAAOtF,IAAYhB,IAEpE,GAAkB,QAAT,MAALC,OAAK,EAALA,EAAOqG,MAAgBhC,KAAYE,GAAY,CACjD,MAAM8B,EAAKrG,EAAMqG,IAAM,EACvB7B,GAAc6B,E,OAGflE,MACCtB,IAAgBA,GAAawF,IAAOtF,IAAYhB,KAElDe,GAAgB,IACXsC,GACHM,OAAQvD,GACJ,CACE,CACEpM,MAAOoM,GAAYuH,OACnB7T,MAAO,GAAGsM,GAAYwH,aAAaxH,GAAYyH,aAGnD,KAENjF,GAAwB,IACxBF,GAAwB,U,GAEzB,CAACzC,KAEJlL,EAAAA,EAAAA,YAAU,KACR,GAAIwP,GAAU,CAEZ,MAAML,GAAYK,GAASjM,YAAc,IAAInF,KAAI8E,IAC/C,MAAM6P,EACqC,iBAAlC7P,EAAQ8P,sBACXC,KAAKC,MAAMhQ,EAAQ8P,uBACnB,CAAC,EACP,MAAO,CACL1P,OAAQJ,EAAQV,KAEhBe,WAAYwP,EAAO7R,QAAUgC,EAAQ8P,sBACrC1S,QAASqL,GACV,IAGHkC,GAAwBsB,GACxBxB,GACEwB,EAASgE,SAAWxH,GAA2BwH,OAC3C,SACA,UAEN/G,GAAeoD,GAAS2C,MAAQ,QAAU,aAC1C7F,GACEkD,GAAS2C,OACL3C,GAAS4D,eACThP,GAEN,MAAMiP,EACsC,iBAAnC7D,GAASV,sBACZmE,KAAKC,MAAM1D,GAASV,uBACpBU,GAASV,sBAEflC,GAAgD,aAA5B4C,GAAST,gBAEzBS,GAAS2C,OACX/E,GAAiBoC,GAAS2C,MAAsBmB,UAElD9G,GAAmBgD,GAASR,kBAE5BhD,GAAgB,IACXwD,GACH2C,MAAO3C,GAAS2C,MACZF,GAAazC,GAAS2C,QAAU,CAC9BlT,MAAQuQ,GAAS2C,MAAsBZ,GACvCxS,MAAQyQ,GAAS2C,MAAsBoB,iBAEzC5P,EACJoO,UAAWvC,GAASuC,UAChBD,GAAiBtC,GAASuC,YAAc,CACtC9S,MAAQuQ,GAASuC,UAA8BR,GAC/CxS,MAAQyQ,GAASuC,UAA8ByB,sBAEjD7P,EACJ0N,SAAU7B,GAAS6B,SACfF,GAAc3B,GAAS6B,WAAa,CAClCpS,MAAQuQ,GAAS6B,SAA4BE,GAC7CxS,MAAQyQ,GAAS6B,SAA4BoC,oBAE/C9P,EACJiL,SAAc,MAAL1D,OAAK,EAALA,EAAO0D,SAAU,IAAIxQ,KAAIsV,IAAK,CACrCzU,MAAQyU,EAAqBzU,OAASyU,EAAMnC,GAC5CxS,MACG2U,EAAqB3U,OACtB,GAAI2U,EAAgBC,cAAeD,EAAgBE,gBAGvD9E,sBAC8B,aAA5BU,GAAST,eACL,CACE8E,GAAI,YAENR,G,IAGT,CAAC7D,KAGJ,MAAMsE,GAAmB/H,IAAgB,CAAC,EAuB1C,OAtBA/L,EAAAA,EAAAA,YAAU,KAzIO+T,IAAKC,EAAAC,EAAAC,EASlBC,EAAAC,EAAAC,EAPY,MAAZtI,IAAkB,OAANiI,EAAZjI,GAActO,OAAduW,EAAoBb,QACR,MAAZpH,IAAoB,OAARkI,EAAZlI,GAAc6C,SAAdqF,EAAsBd,QACV,MAAZpH,IAAqB,OAATmI,EAAZnI,GAAc0C,UAAdyF,EAAuBf,aACWxP,KAAtB,MAAZoI,QAAY,EAAZA,GAAc4C,mBACI,cAAhBxC,IAA6C,MAAZJ,IAAAA,GAAcgG,WAC9B,UAAhB5F,IAAyC,MAAZJ,IAAAA,GAAcoG,QAvBhBmC,MAChC,IAAK1G,GAAqBuF,OACxB,OAAO,EAGT,IAAIoB,GAAU,EAQd,OANA3G,GAAqBnP,SAAQyE,IAAU,IAAAsR,EAC/BtR,EAAQI,QAA4B,OAAtBkR,EAAItR,EAAQK,aAARiR,EAAoBrB,SAC1CoB,GAAU,E,IAIPA,CAAO,EAWZD,KAEInJ,GAGAY,GAAasF,UACC,OADO8C,EACvBpI,GAAa8C,MAAbsF,EAAkBhB,SACjBxG,IAAwD,OAAnCyH,EAACrI,GAAa+C,wBAAbsF,EAAoCP,MAC1DlH,SACmDhJ,KAAhB,OAAlC0Q,EAAAtI,GAAa+C,4BAAqB,EAAlCuF,EAAoCI,aANtC3I,IAAe,GAajBA,IAAe,EAkHP,GACT,CACDgI,GAAiBrW,KACjBqW,GAAiBlF,OACjBkF,GAAiBzC,SACjByC,GAAiBjF,IACjBiF,GAAiBhF,sBACjBgF,GAAiBrF,QACjBqF,GAAiBnF,gBACjBmF,GAAiB/B,UACjB+B,GAAiB3B,MACjBhG,GACAyB,GACAjB,KAIEV,IAAYhB,GACdiB,IAAY,IAIZtQ,EAAAA,EAAAA,IAAC2I,EAAW,CACVrC,UAAU,qBACVwS,YAAU,EACVC,qBAAsB9I,GACtB+I,uBAzjBWC,KAAK,IAAAC,EAAAC,EAAAC,EAElB,MAAMzR,EAA0B,GAEhCqK,GAAqBnP,SAAQyE,IACvBA,EAAQI,QAAUJ,EAAQK,WAAW4P,QACvC5P,EAAW1E,KAAK,CACdmU,sBAAuB,CACrB9R,OAAQgC,EAAQK,YAElBf,KAAMU,EAAQI,Q,IAKpB,MAAM2R,EAA8C,UAAhB9I,KAA4BhB,EAC1DyF,EAAY,IACb7E,GACHvJ,KAAM2I,EAAW,SAAW,QAC5B6D,iBAAkBiG,GAA+B1I,GACjDwC,eAAgBpC,GAAmB,WAAa,WAChDmC,sBAAuBnC,GACnB,CAAC,EACW,MAAZZ,QAAY,EAAZA,GAAc+C,sBAClBqD,MAAuB,UAAhBhG,GAAsC,MAAZJ,IAAmB,OAAP+I,EAAZ/I,GAAcoG,YAAF,EAAZ2C,EAAqB7V,MAAQ,KAC9D8S,UACkB,cAAhB5F,GAA0C,MAAZJ,IAAuB,OAAXgJ,EAAZhJ,GAAcgG,gBAAF,EAAZgD,EAAyB9V,MAAQ,KACjEiW,aAAczI,GAA2B,MAAZV,QAAY,EAAZA,GAAcmJ,kBAAevR,EAC1D0N,SAAsB,MAAZtF,IAAsB,OAAViJ,EAAZjJ,GAAcsF,eAAF,EAAZ2D,EAAwB/V,MAClC2P,SAAqB,MAAZ7C,QAAY,EAAZA,GAAc6C,SAAU,IAAIxQ,KACnCsV,GAAUA,EAAqBzU,OAASyU,EAAMnC,KAEhDhO,aACA6P,cACkB,cAAhBjH,GACI/H,EACAiI,IAAgBjI,GASxB,GANIwM,EAAKrN,aAAeqN,EAAKrN,WAAW4P,eAC/BvC,EAAKrN,WAGdqN,EAAKuE,iBAAmB,SAEpB9H,IAEF,GAAgB,MAAZtB,IAAAA,GAAcwF,GAAI,CACpB,MAAM6D,EAAYrJ,GAAawF,UAExBX,EAAKW,UACLX,EAAKyE,kBACLzE,EAAK0E,sBACL1E,EAAK2E,kBACL3E,EAAK4E,kBACL5E,EAAK6E,oBAEZ7F,GAAewF,EAAWxE,GAAMF,MAAKC,IAC9BA,IAILvF,IAAgB1R,EAAAA,EAAAA,GAAE,aAAckX,EAAKpO,OAEjCuI,GACFA,IAGFgF,KAAM,G,OAGDhE,IAET4D,GAAeiB,GAAMF,MAAKC,IACnBA,IAILvF,IAAgB1R,EAAAA,EAAAA,GAAE,aAAckX,EAAKpO,OAEjCuI,GACFA,EAAM4F,GAGRZ,KAAM,G,EAseR/E,OAAQ+E,GACR2F,kBACErI,GAAa7F,EAAaG,UAAYH,EAAaI,SAErDqD,KAAMA,EACN0K,MAAM,OACNC,SAAS,SACTC,OACEja,EAAAA,EAAAA,IAAA,UACGyR,IACCzR,EAAAA,EAAAA,IAACmI,EAAAA,EAAM+R,QAAO,CAAC3V,IAAKwE,KAEpB/I,EAAAA,EAAAA,IAACmI,EAAAA,EAAMgS,UAAS,CAAC5V,IAAKwE,IAEvB0I,IAAclC,EACX3D,EAAaK,iBACbwF,GACA7F,EAAaM,gBACbqD,EACA3D,EAAaO,gBACbP,EAAaQ,kBAIrBpM,EAAAA,EAAAA,IAACgJ,EAAsB,MACrBhJ,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,mBACbtG,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBACZiJ,EACG3D,EAAaS,iBACbT,EAAaU,iBACjBtM,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAAA,SACE4G,KAAK,OACL/E,KAAK,OACLwB,MAAO8M,GAAeA,GAAatO,KAAO,GAC1CmF,YACEuI,EACI3D,EAAaS,iBACbT,EAAaU,gBAEnB7H,SAAUiS,GACVnS,IAAKoH,OAIX3L,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBACZsF,EAAaW,aACdvM,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAA,OAA+BsG,UAAU,oBACvCtG,EAAAA,EAAAA,IAACoa,EAAAA,GAAW,CACV9V,UAAWsH,EAAaW,YACxB8N,YAAU,EACVxY,KAAK,SACLyY,KAAK,WACLjX,OACe,MAAZ8M,QAAY,EAAZA,GAAc6C,SAGP,GAEVtO,QAAS0P,GACT3P,SAjUUpB,IACtBuS,GAAiB,SAAUvS,GAAS,GAAG,EAiU3BkB,IAAKoH,OAIX3L,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBAAiBsF,EAAaY,mBAC7CxM,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAAA,SACE4G,KAAK,OACL/E,KAAK,cACLwB,MAAO8M,IAAeA,GAAaoK,aAAoB,GACvDvT,YAAa4E,EAAaY,iBAC1B/H,SAAUiS,GACVnS,IAAKoH,OAIX3L,EAAAA,EAAAA,IAAC4J,EAAqB,MACpB5J,EAAAA,EAAAA,IAACoB,EAAAA,EAAM,CACLqD,SAlUY+V,IACtB5E,GAAiB,SAAU4E,EAAQ,EAkUzBA,SAASrK,IAAeA,GAAawC,UAEvC3S,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,gBAAgBsF,EAAaa,gBAGhDzM,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,mBACXiJ,IACAvP,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,qBACbtG,EAAAA,EAAAA,IAACuJ,EAAkB,MACjBvJ,EAAAA,EAAAA,IAAA,UAAK4L,EAAac,wBAEpB1M,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBACZsF,EAAae,eACd3M,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAACoa,EAAAA,GAAW,CACV9V,UAAWsH,EAAae,cACxB9K,KAAK,SACLwB,MACc,MAAZ8M,IAAsB,OAAVzB,EAAZyB,GAAcsF,WAAd/G,EAAwBvL,OACZ,MAAZgN,IAAsB,OAAVxB,EAAZwB,GAAcsF,WAAd9G,EAAwBtL,MACpB,CACEA,MAAO8M,GAAasF,SAASpS,MAC7BF,MAAOgN,GAAasF,SAAStS,YAE/B4E,EAENrD,QAASoR,GACTrR,SAhXMpB,IACtBuS,GAAiB,WAAYvS,GAAS,GAAG,OAmX/BrD,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBACZsF,EAAagB,gBACd5M,EAAAA,EAAAA,IAAC6I,EAAa,CAAC4R,QAAS7O,EAAaiB,qBACrC7M,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAC0a,EAAAA,EAAe,CACd7Y,KAAK,MACL8Y,SAAS,MACTC,kBAAkB,EAClBC,SAAU,GACVC,SAAU,GACVrW,SAxYKpB,IACnBuS,GAAiB,MAAOvS,GAAS,GAAG,EAwYtB0X,UAAU,EACVC,aAAsB,MAARpH,QAAQ,EAARA,GAAUX,IACxBgI,IAAiB,MAAZ9K,QAAY,EAAZA,GAAcwF,OAGvB3V,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,0BACbtG,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,gBAAgB/B,IAAKoH,GACjCC,EAAakB,uBACd9M,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAACqE,EAAAA,GAAM,CACLC,UAAWsH,EAAamB,eACxBtI,SA5XOwT,IAAgB,IAAAiD,EACzClK,GAA2B,aAAPiH,GAEpB,MAAMd,EAAS,CACbc,KACAY,UAAW1I,GAC2B,OADf+K,EACnB/K,GAAa+C,4BAAqB,EAAlCgI,EAAoCrC,eACpC9Q,GAGN6N,GAAiB,wBAAyBuB,EAAO,EAmX/BnQ,YAAY,YACZ3D,OACc,MAAZ8M,IAAmC,OAAvBvB,EAAZuB,GAAc+C,4BAAF,EAAZtE,EAAqCqJ,UAAMlQ,EAE7CrD,QAAS+D,EACTlE,IAAKoH,OAIX3L,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBACZsF,EAAaoB,YACdhN,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAAA,SACE4G,KAAK,SACL/E,KAAK,YACL2E,SAAUuK,GACV1N,WAEE0E,KADY,MAAZoI,IAAmC,OAAvBtB,EAAZsB,GAAc+C,4BAAF,EAAZrE,EAAqCgK,WAEjC1I,GAAa+C,sBAAsB2F,UACnC,GAEN7R,YAAa4E,EAAaoB,WAC1BvI,SA1YOoB,IAA8C,IAAAsV,EACvE,MAAM,OAAE7V,GAAWO,EAEbsR,EAAS,CACbc,GAAI9H,GAAiD,OAArCgL,EAAGhL,GAAa+C,4BAAqB,EAAlCiI,EAAoClD,QAAKlQ,EAC5D8Q,UAAWvT,EAAOjC,OAGpBuS,GAAiB,wBAAyBuB,EAAO,SAyY3CnX,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAACuJ,EAAkB,MACjBvJ,EAAAA,EAAAA,IAAA,UACGuP,EACG3D,EAAaqB,qBACbrB,EAAasB,gCAEnBlN,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAC4E,EAAwB,CACvBvB,OAAmB,MAAZ8M,QAAY,EAAZA,GAAc0C,UAAW,GAChCpO,SAAU2W,GAAUxF,GAAiB,UAAWwF,MAElDpb,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBAAiBsF,EAAauB,gBAC7CnN,EAAAA,EAAAA,IAAA,OACEsG,UAAU,kBACV/B,IAAM9D,GAx+BQ4a,CAAC5a,GAAyB8D,EAAAA,EAAG;YAC5B,EAAjB9D,EAAMC;EAu+B2B2a,CAAoB5a,KAEnDT,EAAAA,EAAAA,IAAC8D,EAAAA,EAAgB,CACfC,iBArZYH,IACxBgS,GAAiB,WAAYhS,EAAS,EAqZ1BA,SAAsB,MAAZuM,QAAY,EAAZA,GAAcvM,SACxBI,SAAS,WAGbhE,EAAAA,EAAAA,IAACuJ,EAAkB,MACjBvJ,EAAAA,EAAAA,IAAA,UAAK4L,EAAawB,0BAEpBpN,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBACZsF,EAAayB,oBACdrN,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAACqE,EAAAA,GAAM,CACLC,UAAWsH,EAAayB,mBACxBrG,YAAa4E,EAAayB,mBAC1B5I,SA1ac6W,IAC5B1F,GAAiB,gBAAiB0F,EAAU,EA0a9BjY,MACyC,iBAApB,MAAZ8M,QAAY,EAAZA,GAAc2C,eACL,MAAZ3C,QAAY,EAAZA,GAAc2C,cACdV,GAEN1N,QAASgE,EACT/D,gBAAgB4W,EAAAA,EAAAA,IAAmB,cAIzCvb,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBACZsF,EAAa0B,sBACdtN,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAAA,SACE4G,KAAK,SACL4U,IAAI,IACJ3Z,KAAK,kBACLwB,OAAmB,MAAZ8M,QAAY,EAAZA,GAAc4C,kBAAmB,GACxC/L,YAAa4E,EAAa2B,qBAC1B9I,SAAUoS,MAEZ7W,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,eAAesF,EAAa4B,iBAG9C+B,IACAvP,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,iBACZsF,EAAa6B,oBAEhBzN,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAAA,SACE4G,KAAK,SACL4U,IAAI,IACJ3Z,KAAK,eACLwB,OAAmB,MAAZ8M,QAAY,EAAZA,GAAckD,eAAgB,GACrCrM,YAAa4E,EAAa2B,qBAC1B9I,SAAUoS,MAEZ7W,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,eACbsF,EAAa4B,kBAMxBxN,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,mBACbtG,EAAAA,EAAAA,IAACuJ,EAAkB,MACjBvJ,EAAAA,EAAAA,IAAA,UAAK4L,EAAa8B,uBAClB1N,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,OAE7BtG,EAAAA,EAAAA,IAACoG,EAAAA,EAAMC,MAAK,CAAC5B,SAxdMoB,IAC3B,MAAM,OAAEP,GAAWO,EAEnB+K,IAAmB,GAEnB6K,YAAW,IAAMjL,GAAelL,EAAOjC,QAAQ,IAAI,EAmdCA,MAAOkN,KACjDvQ,EAAAA,EAAAA,IAAC8K,EAAW,CAACzH,MAAM,aAChBuI,EAAa+B,iBAEhB3N,EAAAA,EAAAA,IAAC8K,EAAW,CAACzH,MAAM,SAASuI,EAAagC,aAE1B,UAAhB2C,IACCvQ,EAAAA,EAAAA,IAACoa,EAAAA,GAAW,CACV9V,UAAWsH,EAAagC,WACxB/L,KAAK,QACLwB,MACc,MAAZ8M,IAAmB,OAAPrB,EAAZqB,GAAcoG,QAAdzH,EAAqB3L,OAAqB,MAAZgN,IAAmB,OAAPpB,EAAZoB,GAAcoG,QAAdxH,EAAqB1L,MAC/C,CACEA,MAAO8M,GAAaoG,MAAMlT,MAC1BF,MAAOgN,GAAaoG,MAAMpT,YAE5B4E,EAENrD,QAAS+R,GACThS,SArhBS8R,IAvDWmF,CAACnF,IACjC5B,EAAAA,EAAeC,IAAI,CACjBC,SAAU,iBAAiB0B,EAAMlT,UAChCyR,MAAKC,GAAYvD,GAAgBuD,EAASE,KAAKC,OAAOwC,WAAU,EAqDnEgE,CAA0BnF,GAC1BX,GAAiB,QAASW,QAASxO,GACnC6N,GAAiB,YAAa,KAAK,KAqhBzB5V,EAAAA,EAAAA,IAACoa,EAAAA,GAAW,CACV9V,UAAWsH,EAAa+B,eACxB9L,KAAK,YACLwB,MACc,MAAZ8M,IAAuB,OAAXnB,EAAZmB,GAAcgG,YAAdnH,EAAyB7L,OACb,MAAZgN,IAAuB,OAAXlB,EAAZkB,GAAcgG,YAAdlH,EAAyB5L,MACrB,CACEA,MAAO8M,GAAagG,UAAU9S,MAC9BF,MAAOgN,GAAagG,UAAUhT,YAEhC4E,EAENrD,QAASuR,GACTxR,SA1iBa0R,IACzBP,GAAiB,YAAaO,QAAapO,GAC3C6N,GAAiB,QAAS,KAAK,IA2iBtBlE,KACC1R,EAAAA,EAAAA,IAAAmG,EAAAA,SAAA,MACEnG,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,qBACbtG,EAAAA,EAAAA,IAACgL,EAAgB,CACfvG,SA1fMoB,IACtB,MAAM,OAAEP,GAAWO,EAEnB6K,GAAgBpL,EAAOjC,MAAM,EAwfbA,MAAOoN,KAEPzQ,EAAAA,EAAAA,IAAC8K,EAAW,CAACzH,MAAM,OAChBuI,EAAaiC,mBAEhB7N,EAAAA,EAAAA,IAAC8K,EAAW,CAACzH,MAAM,OAChBuI,EAAakC,kBAEfxF,EAA+BqT,SAASpK,MACvCvR,EAAAA,EAAAA,IAAC8K,EAAW,CAACzH,MAAM,QAChBuI,EAAamC,iBAOzB8C,KACC7Q,EAAAA,EAAAA,IAAC0G,EAAoB,MACnB1G,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,gBAAgB/B,IAAKqX,EAAAA,IACjChQ,EAAaqC,+BAEhBjO,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,oBACbtG,EAAAA,EAAAA,IAAC6b,EAAAA,GAAW,CACVjV,KAAK,SACL/E,KAAK,eACLwB,OAAmB,MAAZ8M,QAAY,EAAZA,GAAcmJ,oBAAgBvR,EACrCyT,IAAK,IACLzE,IAAK,KACL/P,YACE4E,EAAasC,yCAEfzJ,SAnnBWpB,IAC3BuS,GAAiB,eAAgBvS,EAAM,OAunB7BkM,GAA4B,cAAhBgB,MACZvQ,EAAAA,EAAAA,IAAA,OAAKsG,UAAU,qBACbtG,EAAAA,EAAAA,IAACkL,EAAc,CAEb5E,UAAU,WACVkU,QAAS7J,GACTlM,SAhiBiBoB,IAC/B+K,GAAmB/K,EAAMP,OAAOkV,QAAQ,GAiiBzB5O,EAAaoC,qBAIpBhO,EAAAA,EAAAA,IAACuJ,EAAkB,MACjBvJ,EAAAA,EAAAA,IAAA,UAAK4L,EAAauC,2BAClBnO,EAAAA,EAAAA,IAAA,QAAMsG,UAAU,YAAW,MAE5B0L,GAAqBxP,KAAI,CAACsZ,EAAqBC,KAC9C/b,EAAAA,EAAAA,IAAC0L,EAA+B,MAC9B1L,EAAAA,EAAAA,IAACqH,EAAkB,CACjBC,QAASwU,EACTvU,MAAOwU,EACPd,IAAK,sBAAsBc,IAC3BvU,SAAU8L,GACV7L,SAAUgM,SAIhBzT,EAAAA,EAAAA,IAACoO,EAAqB,CAEpBE,OAAQwD,GACR5J,QAjhCc8T,KACxB,MAAMzI,EAAkCvB,GAAqBwB,QAE7DD,EAAStQ,KAAK,CACZ0E,WAAY,GACZjD,QAASqL,KAGXkC,GAAwBsB,GACxBxB,GACEwB,EAASgE,SAAWxH,GAA2BwH,OAC3C,SACA,WACL,OAygCa,G,+OC//CX,MAAM5O,GAAc7I,EAAAA,EAAAA,IAAO8I,EAAAA,QAAM;;;;EAM3BqT,EAAmBnc,EAAAA,GAAOsH,GAAG;aAC7B5G,IAAA,IAAC,MAAEC,GAAOD,EAAA,MACnB,GAAoB,EAAjBC,EAAMC,cAAmC,EAAjBD,EAAMC,cAAmC,EAAjBD,EAAMC,YAAgB;;iBAE5DC,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAAKF,EAAMsJ,WAAWC,MAAMC,CAAC;aAC3ClJ,IAAA,IAAC,MAAEN,GAAOM,EAAA,OAAKN,EAAMG,OAAOC,UAAU4J,MAAM;;EAI5CyR,EAAsBpc,EAAAA,GAAOsH,GAAG;0BACnB6B,IAAA,IAAC,MAAExI,GAAOwI,EAAA,OAAKxI,EAAMG,OAAOC,UAAUqI,MAAM;aACzDC,IAAA,IAAC,MAAE1I,GAAO0I,EAAA,MACnB,GAAoB,EAAjB1I,EAAMC,cAAmC,EAAjBD,EAAMC,cAAmC,EAAjBD,EAAMC,YAAgB;;;;;iBAK5D0I,IAAA,IAAC,MAAE3I,GAAO2I,EAAA,OAAK3I,EAAMsJ,WAAWC,MAAMC,CAAC;aAC3CZ,IAAA,IAAC,MAAE5I,GAAO4I,EAAA,OAAK5I,EAAMG,OAAOC,UAAU4J,MAAM;;EAI5C0R,EAAoBrc,EAAAA,GAAOsc,IAAI;;oBAExB9S,IAAA,IAAC,MAAE7I,GAAO6I,EAAA,OAAsB,EAAjB7I,EAAMC,QAAY;;;;;;EAQxC2b,EAAsBvc,EAAAA,GAAOsH,GAAG;mBAC1BoC,IAAA,IAAC,MAAE/I,GAAO+I,EAAA,OAAsB,EAAjB/I,EAAMC,QAAY;;;qBAG/B+I,IAAA,IAAC,MAAEhJ,GAAOgJ,EAAA,OAAsB,EAAjBhJ,EAAMC,QAAY;;EAIzC4b,GAAmBxc,EAAAA,EAAAA,IAAOD,EAAAA,WAAW;mBAC/B6J,IAAA,IAAC,MAAEjJ,GAAOiJ,EAAA,OAAsB,EAAjBjJ,EAAMC,QAAY;WACzCiJ,IAAA,IAAC,MAAElJ,GAAOkJ,EAAA,OAAsB,IAAjBlJ,EAAMC,QAAc;EAGjC6b,EAAkBzc,EAAAA,GAAO0c,CAAC;WAC5B3S,IAAA,IAAC,MAAEpJ,GAAOoJ,EAAA,OAAKpJ,EAAMG,OAAOqF,MAAM9E,IAAI;EAGpCsb,EAAiBlY,EAAAA,EAAG;;EAIpBmY,GAAqB5c,EAAAA,EAAAA,IAAO6c,EAAAA,EAAO;WACrC7S,IAAA,IAAC,MAAErJ,GAAOqJ,EAAA,OAAsB,GAAjBrJ,EAAMC,QAAa;EAGhCkc,EAAuBnc,GAAyB8D,EAAAA,EAAG;YACnC,EAAjB9D,EAAMC,gBAAqC,EAAjBD,EAAMC;EAG/Bkb,EAA0Bnb,GAAyB8D,EAAAA,EAAG;YACtC,EAAjB9D,EAAMC,gBAAqC,EAAjBD,EAAMC;EAG/Bmc,EAAsBpc,GAAyB8D,EAAAA,EAAG;YAClC,EAAjB9D,EAAMC;EAGLoc,EAA4Bhd,EAAAA,GAAOsH,GAAG;YACvC8C,IAAA,IAAC,MAAEzJ,GAAOyJ,EAAA,OAAsB,EAAjBzJ,EAAMC,QAAY;MACvCyJ,IAAA,IAAC,MAAE1J,GAAO0J,EAAA,OAAsB,EAAjB1J,EAAMC,QAAY;EAG1BoK,GAAchL,EAAAA,EAAAA,IAAOsG,EAAAA,EAAM;;iBAEvBgE,IAAA,IAAC,MAAE3J,GAAO2J,EAAA,OAAsB,EAAjB3J,EAAMC,QAAY;EAGrCsK,GAAmBlL,EAAAA,EAAAA,IAAOsG,EAAAA,EAAMC,MAAM;iBAClCgE,IAAA,IAAC,MAAE5J,GAAO4J,EAAA,MAAsB,GAAjB5J,EAAMC,QAAc;EAGvCqc,EAAwBtc,GAAyB8D,EAAAA,EAAG;YACrD9D,EAAMG,OAAOqF,MAAM9E;aACD,EAAjBV,EAAMC;YACU,EAAjBD,EAAMC;;WAEPD,EAAMG,OAAOqF,MAAM+W;;iBAEbvc,EAAMsJ,WAAWC,MAAMiT;;;;iBAIvBxc,EAAMsJ,WAAWC,MAAMiT;mBACJ,EAAjBxc,EAAMC;;sBAEc,IAAjBD,EAAMC;mBACTD,EAAMsJ,WAAWC,MAAMkT;;aAE7Bzc,EAAMC,SAAW","sources":["webpack://superset/./src/components/CronPicker/CronPicker.tsx","webpack://superset/./src/components/Switch/index.tsx","webpack://superset/./src/components/TimezoneSelector/index.tsx","webpack://superset/./src/features/alerts/components/AlertReportCronScheduler.tsx","webpack://superset/./src/features/alerts/components/NotificationMethod.tsx","webpack://superset/./src/features/alerts/AlertReportModal.tsx","webpack://superset/./src/features/reports/ReportModal/styles.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { ConfigProvider } from 'antd';\nimport { styled, t } from '@superset-ui/core';\nimport ReactCronPicker, { Locale, CronProps } from 'react-js-cron';\n\nexport * from 'react-js-cron';\n\nexport const LOCALE: Locale = {\n  everyText: t('every'),\n  emptyMonths: t('every month'),\n  emptyMonthDays: t('every day of the month'),\n  emptyMonthDaysShort: t('day of the month'),\n  emptyWeekDays: t('every day of the week'),\n  emptyWeekDaysShort: t('day of the week'),\n  emptyHours: t('every hour'),\n  emptyMinutes: t('every minute'),\n  emptyMinutesForHourPeriod: t('every'),\n  yearOption: t('year'),\n  monthOption: t('month'),\n  weekOption: t('week'),\n  dayOption: t('day'),\n  hourOption: t('hour'),\n  minuteOption: t('minute'),\n  rebootOption: t('reboot'),\n  prefixPeriod: t('Every'),\n  prefixMonths: t('in'),\n  prefixMonthDays: t('on'),\n  prefixWeekDays: t('on'),\n  prefixWeekDaysForMonthAndYearPeriod: t('and'),\n  prefixHours: t('at'),\n  prefixMinutes: t(':'),\n  prefixMinutesForHourPeriod: t('at'),\n  suffixMinutesForHourPeriod: t('minute(s)'),\n  errorInvalidCron: t('Invalid cron expression'),\n  clearButtonText: t('Clear'),\n  weekDays: [\n    // Order is important, the index will be used as value\n    t('Sunday'), // Sunday must always be first, it's \"0\"\n    t('Monday'),\n    t('Tuesday'),\n    t('Wednesday'),\n    t('Thursday'),\n    t('Friday'),\n    t('Saturday'),\n  ],\n  months: [\n    // Order is important, the index will be used as value\n    t('January'),\n    t('February'),\n    t('March'),\n    t('April'),\n    t('May'),\n    t('June'),\n    t('July'),\n    t('August'),\n    t('September'),\n    t('October'),\n    t('November'),\n    t('December'),\n  ],\n  // Order is important, the index will be used as value\n  altWeekDays: [\n    t('SUN'), // Sunday must always be first, it's \"0\"\n    t('MON'),\n    t('TUE'),\n    t('WED'),\n    t('THU'),\n    t('FRI'),\n    t('SAT'),\n  ],\n  // Order is important, the index will be used as value\n  altMonths: [\n    t('JAN'),\n    t('FEB'),\n    t('MAR'),\n    t('APR'),\n    t('MAY'),\n    t('JUN'),\n    t('JUL'),\n    t('AUG'),\n    t('SEP'),\n    t('OCT'),\n    t('NOV'),\n    t('DEC'),\n  ],\n};\n\nexport const CronPicker = styled((props: CronProps) => (\n  <ConfigProvider\n    getPopupContainer={trigger => trigger.parentElement as HTMLElement}\n  >\n    <ReactCronPicker locale={LOCALE} {...props} />\n  </ConfigProvider>\n))`\n  .react-js-cron-field {\n    margin-bottom: 0px;\n  }\n  .react-js-cron-select:not(.react-js-cron-custom-select) > div:first-of-type,\n  .react-js-cron-custom-select {\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n    background-color: ${({ theme }) =>\n      theme.colors.grayscale.light4} !important;\n  }\n  .react-js-cron-custom-select > div:first-of-type {\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n  }\n  .react-js-cron-custom-select .ant-select-selection-placeholder {\n    flex: auto;\n  }\n  .react-js-cron-custom-select .ant-select-selection-overflow-item {\n    align-self: center;\n  }\n`;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport BaseSwitch, { SwitchProps } from 'antd/lib/switch';\n\nconst StyledSwitch = styled(BaseSwitch)`\n  .ant-switch-checked {\n    background-color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\n\nexport const Switch = (props: SwitchProps) => <StyledSwitch {...props} />;\nexport type { SwitchProps };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useMemo } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\n\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan', // timezones are deduped by the first alphabetical value\n};\n\nconst MIN_SELECT_WIDTH = '400px';\n\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n    'Mountain Standard Time - Phoenix',\n    'Mountain Standard Time - Phoenix',\n  ],\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'],\n};\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\n\nconst getOffsetKey = (name: string) =>\n  JANUARY.tz(name).utcOffset().toString() +\n  JULY.tz(name).utcOffset().toString();\n\nconst getTimezoneName = (name: string) => {\n  const offsets = getOffsetKey(name);\n  return (\n    (currentDate.tz(name).isDST()\n      ? offsetsToName[offsets]?.[1]\n      : offsetsToName[offsets]?.[0]) || name\n  );\n};\n\nconst ALL_ZONES = moment.tz\n  .countries()\n  .map(country => moment.tz.zonesForCountry(country, true))\n  .flat();\n\nconst TIMEZONES: moment.MomentZoneOffset[] = [];\nALL_ZONES.forEach(zone => {\n  if (\n    !TIMEZONES.find(\n      option => getOffsetKey(option.name) === getOffsetKey(zone.name),\n    )\n  ) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\n\nconst TIMEZONE_OPTIONS = TIMEZONES.map(zone => ({\n  label: `GMT ${moment\n    .tz(currentDate, zone.name)\n    .format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n  timezoneName: zone.name,\n}));\n\nconst TIMEZONE_OPTIONS_SORT_COMPARATOR = (\n  a: typeof TIMEZONE_OPTIONS[number],\n  b: typeof TIMEZONE_OPTIONS[number],\n) =>\n  moment.tz(currentDate, a.timezoneName).utcOffset() -\n  moment.tz(currentDate, b.timezoneName).utcOffset();\n\n// pre-sort timezone options by time offset\nTIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\n\nconst matchTimezoneToOptions = (timezone: string) =>\n  TIMEZONE_OPTIONS.find(option => option.offsets === getOffsetKey(timezone))\n    ?.value || DEFAULT_TIMEZONE.value;\n\nexport type TimezoneSelectorProps = {\n  onTimezoneChange: (value: string) => void;\n  timezone?: string | null;\n  minWidth?: string;\n};\n\nexport default function TimezoneSelector({\n  onTimezoneChange,\n  timezone,\n  minWidth = MIN_SELECT_WIDTH, // smallest size for current values\n}: TimezoneSelectorProps) {\n  const validTimezone = useMemo(\n    () => matchTimezoneToOptions(timezone || moment.tz.guess()),\n    [timezone],\n  );\n\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n\n  return (\n    <Select\n      ariaLabel={t('Timezone selector')}\n      css={{ minWidth }}\n      onChange={tz => onTimezoneChange(tz as string)}\n      value={validTimezone}\n      options={TIMEZONE_OPTIONS}\n      sortComparator={TIMEZONE_OPTIONS_SORT_COMPARATOR}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useCallback, useRef, FocusEvent } from 'react';\nimport { t, useTheme } from '@superset-ui/core';\n\nimport { AntdInput, RadioChangeEvent } from 'src/components';\nimport { Input } from 'src/components/Input';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker, CronError } from 'src/components/CronPicker';\nimport { StyledInputContainer } from '../AlertReportModal';\n\nexport interface AlertReportCronSchedulerProps {\n  value: string;\n  onChange: (change: string) => any;\n}\n\nexport const AlertReportCronScheduler: React.FC<AlertReportCronSchedulerProps> =\n  ({ value, onChange }) => {\n    const theme = useTheme();\n    const inputRef = useRef<AntdInput>(null);\n    const [scheduleFormat, setScheduleFormat] = useState<'picker' | 'input'>(\n      'picker',\n    );\n\n    const handleRadioButtonChange = useCallback(\n      (e: RadioChangeEvent) => setScheduleFormat(e.target.value),\n      [],\n    );\n\n    const customSetValue = useCallback(\n      (newValue: string) => {\n        onChange(newValue);\n        inputRef.current?.setValue(newValue);\n      },\n      [inputRef, onChange],\n    );\n\n    const handleBlur = useCallback(\n      (event: FocusEvent<HTMLInputElement>) => {\n        onChange(event.target.value);\n      },\n      [onChange],\n    );\n\n    const handlePressEnter = useCallback(() => {\n      onChange(inputRef.current?.input.value || '');\n    }, [onChange]);\n\n    const [error, onError] = useState<CronError>();\n\n    return (\n      <>\n        <Radio.Group onChange={handleRadioButtonChange} value={scheduleFormat}>\n          <div className=\"inline-container add-margin\">\n            <Radio data-test=\"picker\" value=\"picker\" />\n            <CronPicker\n              clearButton={false}\n              value={value}\n              setValue={customSetValue}\n              disabled={scheduleFormat !== 'picker'}\n              displayError={scheduleFormat === 'picker'}\n              onError={onError}\n            />\n          </div>\n          <div className=\"inline-container add-margin\">\n            <Radio data-test=\"input\" value=\"input\" />\n            <span className=\"input-label\">{t('CRON Schedule')}</span>\n            <StyledInputContainer\n              data-test=\"input-content\"\n              className=\"styled-input\"\n            >\n              <div className=\"input-container\">\n                <Input\n                  type=\"text\"\n                  name=\"crontab\"\n                  ref={inputRef}\n                  style={error ? { borderColor: theme.colors.error.base } : {}}\n                  placeholder={t('CRON expression')}\n                  disabled={scheduleFormat !== 'input'}\n                  onBlur={handleBlur}\n                  onPressEnter={handlePressEnter}\n                />\n              </div>\n            </StyledInputContainer>\n          </div>\n        </Radio.Group>\n      </>\n    );\n  };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { Select } from 'src/components';\nimport Icons from 'src/components/Icons';\nimport { NotificationMethodOption } from '../types';\nimport { StyledInputContainer } from '../AlertReportModal';\n\nconst StyledNotificationMethod = styled.div`\n  margin-bottom: 10px;\n\n  .input-container {\n    textarea {\n      height: auto;\n    }\n  }\n\n  .inline-container {\n    margin-bottom: 10px;\n\n    .input-container {\n      margin-left: 10px;\n    }\n\n    > div {\n      margin: 0;\n    }\n\n    .delete-button {\n      margin-left: 10px;\n      padding-top: 3px;\n    }\n  }\n`;\n\ntype NotificationSetting = {\n  method?: NotificationMethodOption;\n  recipients: string;\n  options: NotificationMethodOption[];\n};\n\ninterface NotificationMethodProps {\n  setting?: NotificationSetting | null;\n  index: number;\n  onUpdate?: (index: number, updatedSetting: NotificationSetting) => void;\n  onRemove?: (index: number) => void;\n}\n\nexport const NotificationMethod: FunctionComponent<NotificationMethodProps> = ({\n  setting = null,\n  index,\n  onUpdate,\n  onRemove,\n}) => {\n  const { method, recipients, options } = setting || {};\n  const [recipientValue, setRecipientValue] = useState<string>(\n    recipients || '',\n  );\n  const theme = useTheme();\n\n  if (!setting) {\n    return null;\n  }\n\n  const onMethodChange = (method: NotificationMethodOption) => {\n    // Since we're swapping the method, reset the recipients\n    setRecipientValue('');\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        method,\n        recipients: '',\n      };\n\n      onUpdate(index, updatedSetting);\n    }\n  };\n\n  const onRecipientsChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { target } = event;\n\n    setRecipientValue(target.value);\n\n    if (onUpdate) {\n      const updatedSetting = {\n        ...setting,\n        recipients: target.value,\n      };\n\n      onUpdate(index, updatedSetting);\n    }\n  };\n\n  // Set recipients\n  if (!!recipients && recipientValue !== recipients) {\n    setRecipientValue(recipients);\n  }\n\n  return (\n    <StyledNotificationMethod>\n      <div className=\"inline-container\">\n        <StyledInputContainer>\n          <div className=\"input-container\">\n            <Select\n              ariaLabel={t('Delivery method')}\n              data-test=\"select-delivery-method\"\n              onChange={onMethodChange}\n              placeholder={t('Select Delivery Method')}\n              options={(options || []).map(\n                (method: NotificationMethodOption) => ({\n                  label: method,\n                  value: method,\n                }),\n              )}\n              value={method}\n            />\n          </div>\n        </StyledInputContainer>\n        {method !== undefined && !!onRemove ? (\n          <span\n            role=\"button\"\n            tabIndex={0}\n            className=\"delete-button\"\n            onClick={() => onRemove(index)}\n          >\n            <Icons.Trash iconColor={theme.colors.grayscale.base} />\n          </span>\n        ) : null}\n      </div>\n      {method !== undefined ? (\n        <StyledInputContainer>\n          <div className=\"control-label\">{t(method)}</div>\n          <div className=\"input-container\">\n            <textarea\n              name=\"recipients\"\n              value={recipientValue}\n              onChange={onRecipientsChange}\n            />\n          </div>\n          <div className=\"helper\">\n            {t('Recipients are separated by \",\" or \";\"')}\n          </div>\n        </StyledInputContainer>\n      ) : null}\n    </StyledNotificationMethod>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  FunctionComponent,\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport {\n  css,\n  isFeatureEnabled,\n  FeatureFlag,\n  styled,\n  SupersetClient,\n  SupersetTheme,\n  t,\n} from '@superset-ui/core';\nimport rison from 'rison';\nimport { useSingleViewResource } from 'src/views/CRUD/hooks';\n\nimport Icons from 'src/components/Icons';\nimport { InputNumber } from 'src/components/Input';\nimport { Switch } from 'src/components/Switch';\nimport Modal from 'src/components/Modal';\nimport TimezoneSelector from 'src/components/TimezoneSelector';\nimport { Radio } from 'src/components/Radio';\nimport { propertyComparator } from 'src/components/Select/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Owner from 'src/types/Owner';\nimport { AntdCheckbox, AsyncSelect, Select } from 'src/components';\nimport TextAreaControl from 'src/explore/components/controls/TextAreaControl';\nimport { useCommonConf } from 'src/features/databases/state';\nimport { CustomWidthHeaderStyle } from 'src/features/reports/ReportModal/styles';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport {\n  NotificationMethodOption,\n  AlertObject,\n  ChartObject,\n  DashboardObject,\n  DatabaseObject,\n  MetaObject,\n  Operator,\n  Recipient,\n  AlertsReportsConfig,\n} from 'src/features/alerts/types';\nimport { useSelector } from 'react-redux';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { AlertReportCronScheduler } from './components/AlertReportCronScheduler';\nimport { NotificationMethod } from './components/NotificationMethod';\n\nconst TIMEOUT_MIN = 1;\nconst TEXT_BASED_VISUALIZATION_TYPES = [\n  'pivot_table_v2',\n  'table',\n  'paired_ttest',\n];\n\ntype SelectValue = {\n  value: string;\n  label: string;\n};\n\ninterface AlertReportModalProps {\n  addSuccessToast: (msg: string) => void;\n  addDangerToast: (msg: string) => void;\n  alert?: AlertObject | null;\n  isReport?: boolean;\n  onAdd?: (alert?: AlertObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst DEFAULT_WORKING_TIMEOUT = 3600;\nconst DEFAULT_CRON_VALUE = '0 * * * *'; // every hour\nconst DEFAULT_RETENTION = 90;\n\nconst DEFAULT_NOTIFICATION_METHODS: NotificationMethodOption[] = ['Email'];\nconst DEFAULT_NOTIFICATION_FORMAT = 'PNG';\nconst CONDITIONS = [\n  {\n    label: t('< (Smaller than)'),\n    value: '<',\n  },\n  {\n    label: t('> (Larger than)'),\n    value: '>',\n  },\n  {\n    label: t('<= (Smaller or equal)'),\n    value: '<=',\n  },\n  {\n    label: t('>= (Larger or equal)'),\n    value: '>=',\n  },\n  {\n    label: t('== (Is equal)'),\n    value: '==',\n  },\n  {\n    label: t('!= (Is not equal)'),\n    value: '!=',\n  },\n  {\n    label: t('Not null'),\n    value: 'not null',\n  },\n];\n\nconst RETENTION_OPTIONS = [\n  {\n    label: t('None'),\n    value: 0,\n  },\n  {\n    label: t('30 days'),\n    value: 30,\n  },\n  {\n    label: t('60 days'),\n    value: 60,\n  },\n  {\n    label: t('90 days'),\n    value: 90,\n  },\n];\n\nconst StyledModal = styled(Modal)`\n  max-width: 1200px;\n  width: 100%;\n\n  .ant-modal-body {\n    overflow: initial;\n  }\n`;\n\nconst StyledTooltip = styled(InfoTooltipWithTrigger)`\n  margin-left: ${({ theme }) => theme.gridUnit}px;\n`;\n\nconst StyledIcon = (theme: SupersetTheme) => css`\n  margin: auto ${theme.gridUnit * 2}px auto 0;\n  color: ${theme.colors.grayscale.base};\n`;\n\nconst StyledSectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  .control-label {\n    margin-top: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  .header-section {\n    display: flex;\n    flex: 0 0 auto;\n    align-items: center;\n    width: 100%;\n    padding: ${({ theme }) => theme.gridUnit * 4}px;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  }\n\n  .column-section {\n    display: flex;\n    flex: 1 1 auto;\n\n    .column {\n      flex: 1 1 auto;\n      min-width: calc(33.33% - ${({ theme }) => theme.gridUnit * 8}px);\n      padding: ${({ theme }) => theme.gridUnit * 4}px;\n\n      .async-select {\n        margin: 10px 0 20px;\n      }\n\n      &.condition {\n        border-right: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n      }\n\n      &.message {\n        border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n      }\n    }\n  }\n\n  .inline-container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    &.wrap {\n      flex-wrap: wrap;\n    }\n\n    > div {\n      flex: 1 1 auto;\n    }\n\n    &.add-margin {\n      margin-bottom: 5px;\n    }\n\n    .styled-input {\n      margin: 0 0 0 10px;\n\n      input {\n        flex: 0 0 auto;\n      }\n    }\n  }\n`;\n\nconst StyledSectionTitle = styled.div`\n  display: flex;\n  align-items: center;\n  margin: ${({ theme }) => theme.gridUnit * 2}px auto\n    ${({ theme }) => theme.gridUnit * 4}px auto;\n\n  h4 {\n    margin: 0;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n`;\n\nconst StyledSwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n\n  .switch-label {\n    margin-left: 10px;\n  }\n`;\n\nexport const StyledInputContainer = styled.div`\n  flex: 1;\n  margin-top: 0;\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  .helper {\n    display: block;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    padding: ${({ theme }) => theme.gridUnit}px 0;\n    text-align: left;\n  }\n\n  .required {\n    margin-left: ${({ theme }) => theme.gridUnit / 2}px;\n    color: ${({ theme }) => theme.colors.error.base};\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    > div {\n      width: 100%;\n    }\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  input[disabled] {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n\n  textarea {\n    height: 300px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='description'] {\n      flex: 1 1 auto;\n    }\n  }\n\n  .input-label {\n    margin-left: 10px;\n  }\n`;\n\nconst StyledRadio = styled(Radio)`\n  display: block;\n  line-height: ${({ theme }) => theme.gridUnit * 7}px;\n`;\n\nconst StyledRadioGroup = styled(Radio.Group)`\n  margin-left: ${({ theme }) => theme.gridUnit * 5.5}px;\n`;\n\nconst StyledCheckbox = styled(AntdCheckbox)`\n  margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\n// Notification Method components\nconst StyledNotificationAddButton = styled.div`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  cursor: pointer;\n\n  i {\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &.disabled {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    cursor: default;\n  }\n`;\n\nconst StyledNotificationMethodWrapper = styled.div`\n  .inline-container .input-container {\n    margin-left: 0;\n  }\n`;\n\nconst timezoneHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0;\n`;\n\nconst inputSpacer = (theme: SupersetTheme) => css`\n  margin-right: ${theme.gridUnit * 3}px;\n`;\n\ntype NotificationAddStatus = 'active' | 'disabled' | 'hidden';\n\ninterface NotificationMethodAddProps {\n  status: NotificationAddStatus;\n  onClick: () => void;\n}\n\nexport const TRANSLATIONS = {\n  ADD_NOTIFICATION_METHOD_TEXT: t('Add notification method'),\n  ADD_DELIVERY_METHOD_TEXT: t('Add delivery method'),\n  SAVE_TEXT: t('Save'),\n  ADD_TEXT: t('Add'),\n  EDIT_REPORT_TEXT: t('Edit Report'),\n  EDIT_ALERT_TEXT: t('Edit Alert'),\n  ADD_REPORT_TEXT: t('Add Report'),\n  ADD_ALERT_TEXT: t('Add Alert'),\n  REPORT_NAME_TEXT: t('Report name'),\n  ALERT_NAME_TEXT: t('Alert name'),\n  OWNERS_TEXT: t('Owners'),\n  DESCRIPTION_TEXT: t('Description'),\n  ACTIVE_TEXT: t('Active'),\n  ALERT_CONDITION_TEXT: t('Alert condition'),\n  DATABASE_TEXT: t('Database'),\n  SQL_QUERY_TEXT: t('SQL Query'),\n  SQL_QUERY_TOOLTIP: t(\n    'The result of this query should be a numeric-esque value',\n  ),\n  TRIGGER_ALERT_IF_TEXT: t('Trigger Alert If...'),\n  CONDITION_TEXT: t('Condition'),\n  VALUE_TEXT: t('Value'),\n  REPORT_SCHEDULE_TEXT: t('Report schedule'),\n  ALERT_CONDITION_SCHEDULE_TEXT: t('Alert condition schedule'),\n  TIMEZONE_TEXT: t('Timezone'),\n  SCHEDULE_SETTINGS_TEXT: t('Schedule settings'),\n  LOG_RETENTION_TEXT: t('Log retention'),\n  WORKING_TIMEOUT_TEXT: t('Working timeout'),\n  TIME_IN_SECONDS_TEXT: t('Time in seconds'),\n  SECONDS_TEXT: t('seconds'),\n  GRACE_PERIOD_TEXT: t('Grace period'),\n  MESSAGE_CONTENT_TEXT: t('Message content'),\n  DASHBOARD_TEXT: t('Dashboard'),\n  CHART_TEXT: t('Chart'),\n  SEND_AS_PNG_TEXT: t('Send as PNG'),\n  SEND_AS_CSV_TEXT: t('Send as CSV'),\n  SEND_AS_TEXT: t('Send as text'),\n  IGNORE_CACHE_TEXT: t('Ignore cache when generating report'),\n  CUSTOM_SCREENSHOT_WIDTH_TEXT: t('Screenshot width'),\n  CUSTOM_SCREENSHOT_WIDTH_PLACEHOLDER_TEXT: t('Input custom width in pixels'),\n  NOTIFICATION_METHOD_TEXT: t('Notification method'),\n};\n\nconst NotificationMethodAdd: FunctionComponent<NotificationMethodAddProps> = ({\n  status = 'active',\n  onClick,\n}) => {\n  if (status === 'hidden') {\n    return null;\n  }\n\n  const checkStatus = () => {\n    if (status !== 'disabled') {\n      onClick();\n    }\n  };\n\n  return (\n    <StyledNotificationAddButton className={status} onClick={checkStatus}>\n      <i className=\"fa fa-plus\" />{' '}\n      {status === 'active'\n        ? TRANSLATIONS.ADD_NOTIFICATION_METHOD_TEXT\n        : TRANSLATIONS.ADD_DELIVERY_METHOD_TEXT}\n    </StyledNotificationAddButton>\n  );\n};\n\ntype NotificationSetting = {\n  method?: NotificationMethodOption;\n  recipients: string;\n  options: NotificationMethodOption[];\n};\n\nconst AlertReportModal: FunctionComponent<AlertReportModalProps> = ({\n  addDangerToast,\n  onAdd,\n  onHide,\n  show,\n  alert = null,\n  isReport = false,\n  addSuccessToast,\n}) => {\n  const currentUser = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const conf = useCommonConf();\n  const allowedNotificationMethods: NotificationMethodOption[] =\n    conf?.ALERT_REPORTS_NOTIFICATION_METHODS || DEFAULT_NOTIFICATION_METHODS;\n\n  const [disableSave, setDisableSave] = useState<boolean>(true);\n  const [currentAlert, setCurrentAlert] =\n    useState<Partial<AlertObject> | null>();\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [contentType, setContentType] = useState<string>('dashboard');\n  const [reportFormat, setReportFormat] = useState<string>(\n    DEFAULT_NOTIFICATION_FORMAT,\n  );\n  const [forceScreenshot, setForceScreenshot] = useState<boolean>(false);\n\n  const [isScreenshot, setIsScreenshot] = useState<boolean>(false);\n  useEffect(() => {\n    setIsScreenshot(\n      contentType === 'dashboard' ||\n        (contentType === 'chart' && reportFormat === 'PNG'),\n    );\n  }, [contentType, reportFormat]);\n\n  // Dropdown options\n  const [conditionNotNull, setConditionNotNull] = useState<boolean>(false);\n  const [sourceOptions, setSourceOptions] = useState<MetaObject[]>([]);\n  const [dashboardOptions, setDashboardOptions] = useState<MetaObject[]>([]);\n  const [chartOptions, setChartOptions] = useState<MetaObject[]>([]);\n\n  // Chart metadata\n  const [chartVizType, setChartVizType] = useState<string>('');\n\n  const isEditMode = alert !== null;\n  const formatOptionEnabled =\n    contentType === 'chart' &&\n    (isFeatureEnabled(FeatureFlag.ALERTS_ATTACH_REPORTS) || isReport);\n\n  const [notificationAddState, setNotificationAddState] =\n    useState<NotificationAddStatus>('active');\n  const [notificationSettings, setNotificationSettings] = useState<\n    NotificationSetting[]\n  >([]);\n\n  const onNotificationAdd = () => {\n    const settings: NotificationSetting[] = notificationSettings.slice();\n\n    settings.push({\n      recipients: '',\n      options: allowedNotificationMethods,\n    });\n\n    setNotificationSettings(settings);\n    setNotificationAddState(\n      settings.length === allowedNotificationMethods.length\n        ? 'hidden'\n        : 'disabled',\n    );\n  };\n\n  const {\n    ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT,\n    ALERT_REPORTS_DEFAULT_CRON_VALUE,\n    ALERT_REPORTS_DEFAULT_RETENTION,\n  } = useSelector<any, AlertsReportsConfig>(state => {\n    const conf = state.common?.conf;\n    return {\n      ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT:\n        conf?.ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT ?? DEFAULT_WORKING_TIMEOUT,\n      ALERT_REPORTS_DEFAULT_CRON_VALUE:\n        conf?.ALERT_REPORTS_DEFAULT_CRON_VALUE ?? DEFAULT_CRON_VALUE,\n      ALERT_REPORTS_DEFAULT_RETENTION:\n        conf?.ALERT_REPORTS_DEFAULT_RETENTION ?? DEFAULT_RETENTION,\n    };\n  });\n\n  const defaultAlert = {\n    active: true,\n    creation_method: 'alerts_reports',\n    crontab: ALERT_REPORTS_DEFAULT_CRON_VALUE,\n    log_retention: ALERT_REPORTS_DEFAULT_RETENTION,\n    working_timeout: ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT,\n    name: '',\n    owners: [],\n    recipients: [],\n    sql: '',\n    validator_config_json: {},\n    validator_type: '',\n    force_screenshot: false,\n    grace_period: undefined,\n  };\n\n  const updateNotificationSetting = (\n    index: number,\n    setting: NotificationSetting,\n  ) => {\n    const settings = notificationSettings.slice();\n\n    settings[index] = setting;\n    setNotificationSettings(settings);\n\n    if (setting.method !== undefined && notificationAddState !== 'hidden') {\n      setNotificationAddState('active');\n    }\n  };\n\n  const removeNotificationSetting = (index: number) => {\n    const settings = notificationSettings.slice();\n\n    settings.splice(index, 1);\n    setNotificationSettings(settings);\n    setNotificationAddState('active');\n  };\n\n  // Alert fetch logic\n  const {\n    state: { loading, resource, error: fetchError },\n    fetchResource,\n    createResource,\n    updateResource,\n    clearError,\n  } = useSingleViewResource<AlertObject>('report', t('report'), addDangerToast);\n\n  // Functions\n  const hide = () => {\n    clearError();\n    setIsHidden(true);\n    onHide();\n    setNotificationSettings([]);\n    setCurrentAlert({ ...defaultAlert });\n    setNotificationAddState('active');\n  };\n\n  const onSave = () => {\n    // Notification Settings\n    const recipients: Recipient[] = [];\n\n    notificationSettings.forEach(setting => {\n      if (setting.method && setting.recipients.length) {\n        recipients.push({\n          recipient_config_json: {\n            target: setting.recipients,\n          },\n          type: setting.method,\n        });\n      }\n    });\n\n    const shouldEnableForceScreenshot = contentType === 'chart' && !isReport;\n    const data: any = {\n      ...currentAlert,\n      type: isReport ? 'Report' : 'Alert',\n      force_screenshot: shouldEnableForceScreenshot || forceScreenshot,\n      validator_type: conditionNotNull ? 'not null' : 'operator',\n      validator_config_json: conditionNotNull\n        ? {}\n        : currentAlert?.validator_config_json,\n      chart: contentType === 'chart' ? currentAlert?.chart?.value : null,\n      dashboard:\n        contentType === 'dashboard' ? currentAlert?.dashboard?.value : null,\n      custom_width: isScreenshot ? currentAlert?.custom_width : undefined,\n      database: currentAlert?.database?.value,\n      owners: (currentAlert?.owners || []).map(\n        owner => (owner as MetaObject).value || owner.id,\n      ),\n      recipients,\n      report_format:\n        contentType === 'dashboard'\n          ? DEFAULT_NOTIFICATION_FORMAT\n          : reportFormat || DEFAULT_NOTIFICATION_FORMAT,\n    };\n\n    if (data.recipients && !data.recipients.length) {\n      delete data.recipients;\n    }\n\n    data.context_markdown = 'string';\n\n    if (isEditMode) {\n      // Edit\n      if (currentAlert?.id) {\n        const update_id = currentAlert.id;\n\n        delete data.id;\n        delete data.created_by;\n        delete data.last_eval_dttm;\n        delete data.last_state;\n        delete data.last_value;\n        delete data.last_value_row_json;\n\n        updateResource(update_id, data).then(response => {\n          if (!response) {\n            return;\n          }\n\n          addSuccessToast(t('%s updated', data.type));\n\n          if (onAdd) {\n            onAdd();\n          }\n\n          hide();\n        });\n      }\n    } else if (currentAlert) {\n      // Create\n      createResource(data).then(response => {\n        if (!response) {\n          return;\n        }\n\n        addSuccessToast(t('%s updated', data.type));\n\n        if (onAdd) {\n          onAdd(response);\n        }\n\n        hide();\n      });\n    }\n  };\n\n  // Fetch data to populate form dropdowns\n  const loadOwnerOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/created_by?q=${query}`,\n        }).then(response => ({\n          data: response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          ),\n          totalCount: response.json.count,\n        }));\n      },\n    [],\n  );\n\n  const getSourceData = useCallback(\n    (db?: MetaObject) => {\n      const database = db || currentAlert?.database;\n\n      if (!database || database.label) {\n        return null;\n      }\n\n      let result;\n\n      // Cycle through source options to find the selected option\n      sourceOptions.forEach(source => {\n        if (source.value === database.value || source.value === database.id) {\n          result = source;\n        }\n      });\n\n      return result;\n    },\n    [currentAlert?.database, sourceOptions],\n  );\n\n  // Updating alert/report state\n  const updateAlertState = (name: string, value: any) => {\n    setCurrentAlert(currentAlertData => ({\n      ...currentAlertData,\n      [name]: value,\n    }));\n  };\n\n  const loadSourceOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/database?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n          setSourceOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const databaseLabel = currentAlert?.database && !currentAlert.database.label;\n  useEffect(() => {\n    // Find source if current alert has one set\n    if (databaseLabel) {\n      updateAlertState('database', getSourceData());\n    }\n  }, [databaseLabel, getSourceData]);\n\n  const loadDashboardOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode_uri({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/dashboard?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n          setDashboardOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const getDashboardData = (db?: MetaObject) => {\n    const dashboard = db || currentAlert?.dashboard;\n\n    if (!dashboard || dashboard.label) {\n      return null;\n    }\n\n    let result;\n\n    // Cycle through dashboard options to find the selected option\n    dashboardOptions.forEach(dash => {\n      if (dash.value === dashboard.value || dash.value === dashboard.id) {\n        result = dash;\n      }\n    });\n\n    return result;\n  };\n\n  const getChartData = useCallback(\n    (chartData?: MetaObject) => {\n      const chart = chartData || currentAlert?.chart;\n\n      if (!chart || chart.label) {\n        return null;\n      }\n\n      let result;\n\n      // Cycle through chart options to find the selected option\n      chartOptions.forEach(slice => {\n        if (slice.value === chart.value || slice.value === chart.id) {\n          result = slice;\n        }\n      });\n\n      return result;\n    },\n    [chartOptions, currentAlert?.chart],\n  );\n\n  const noChartLabel = currentAlert?.chart && !currentAlert?.chart.label;\n  useEffect(() => {\n    // Find source if current alert has one set\n    if (noChartLabel) {\n      updateAlertState('chart', getChartData());\n    }\n  }, [getChartData, noChartLabel]);\n\n  const loadChartOptions = useMemo(\n    () =>\n      (input = '', page: number, pageSize: number) => {\n        const query = rison.encode_uri({\n          filter: input,\n          page,\n          page_size: pageSize,\n        });\n        return SupersetClient.get({\n          endpoint: `/api/v1/report/related/chart?q=${query}`,\n        }).then(response => {\n          const list = response.json.result.map(\n            (item: { value: number; text: string }) => ({\n              value: item.value,\n              label: item.text,\n            }),\n          );\n\n          setChartOptions(list);\n          return { data: list, totalCount: response.json.count };\n        });\n      },\n    [],\n  );\n\n  const getChartVisualizationType = (chart: SelectValue) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/chart/${chart.value}`,\n    }).then(response => setChartVizType(response.json.result.viz_type));\n\n  // Handle input/textarea updates\n  const onInputChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    const {\n      target: { type, value, name },\n    } = event;\n    const parsedValue = type === 'number' ? parseInt(value, 10) || null : value;\n\n    updateAlertState(name, parsedValue);\n  };\n\n  const onCustomWidthChange = (value: number | null | undefined) => {\n    updateAlertState('custom_width', value);\n  };\n\n  const onTimeoutVerifyChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n  ) => {\n    const { target } = event;\n    const value = +target.value;\n\n    // Need to make sure grace period is not lower than TIMEOUT_MIN\n    if (value === 0) {\n      updateAlertState(target.name, undefined);\n    } else {\n      updateAlertState(\n        target.name,\n        value ? Math.max(value, TIMEOUT_MIN) : value,\n      );\n    }\n  };\n\n  const onSQLChange = (value: string) => {\n    updateAlertState('sql', value || '');\n  };\n\n  const onOwnersChange = (value: Array<SelectValue>) => {\n    updateAlertState('owners', value || []);\n  };\n\n  const onSourceChange = (value: Array<SelectValue>) => {\n    updateAlertState('database', value || []);\n  };\n\n  const onDashboardChange = (dashboard: SelectValue) => {\n    updateAlertState('dashboard', dashboard || undefined);\n    updateAlertState('chart', null);\n  };\n\n  const onChartChange = (chart: SelectValue) => {\n    getChartVisualizationType(chart);\n    updateAlertState('chart', chart || undefined);\n    updateAlertState('dashboard', null);\n  };\n\n  const onActiveSwitch = (checked: boolean) => {\n    updateAlertState('active', checked);\n  };\n\n  const onConditionChange = (op: Operator) => {\n    setConditionNotNull(op === 'not null');\n\n    const config = {\n      op,\n      threshold: currentAlert\n        ? currentAlert.validator_config_json?.threshold\n        : undefined,\n    };\n\n    updateAlertState('validator_config_json', config);\n  };\n\n  const onThresholdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    const config = {\n      op: currentAlert ? currentAlert.validator_config_json?.op : undefined,\n      threshold: target.value,\n    };\n\n    updateAlertState('validator_config_json', config);\n  };\n\n  const onLogRetentionChange = (retention: number) => {\n    updateAlertState('log_retention', retention);\n  };\n\n  const onTimezoneChange = (timezone: string) => {\n    updateAlertState('timezone', timezone);\n  };\n\n  const onContentTypeChange = (event: any) => {\n    const { target } = event;\n    // When switch content type, reset force_screenshot to false\n    setForceScreenshot(false);\n    // Gives time to close the select before changing the type\n    setTimeout(() => setContentType(target.value), 200);\n  };\n\n  const onFormatChange = (event: any) => {\n    const { target } = event;\n\n    setReportFormat(target.value);\n  };\n\n  const onForceScreenshotChange = (event: any) => {\n    setForceScreenshot(event.target.checked);\n  };\n\n  // Make sure notification settings has the required info\n  const checkNotificationSettings = () => {\n    if (!notificationSettings.length) {\n      return false;\n    }\n\n    let hasInfo = false;\n\n    notificationSettings.forEach(setting => {\n      if (!!setting.method && setting.recipients?.length) {\n        hasInfo = true;\n      }\n    });\n\n    return hasInfo;\n  };\n\n  const validate = () => {\n    if (\n      currentAlert?.name?.length &&\n      currentAlert?.owners?.length &&\n      currentAlert?.crontab?.length &&\n      currentAlert?.working_timeout !== undefined &&\n      ((contentType === 'dashboard' && !!currentAlert?.dashboard) ||\n        (contentType === 'chart' && !!currentAlert?.chart)) &&\n      checkNotificationSettings()\n    ) {\n      if (isReport) {\n        setDisableSave(false);\n      } else if (\n        !!currentAlert.database &&\n        currentAlert.sql?.length &&\n        (conditionNotNull || !!currentAlert.validator_config_json?.op) &&\n        (conditionNotNull ||\n          currentAlert.validator_config_json?.threshold !== undefined)\n      ) {\n        setDisableSave(false);\n      } else {\n        setDisableSave(true);\n      }\n    } else {\n      setDisableSave(true);\n    }\n  };\n\n  // Initialize\n  useEffect(() => {\n    if (\n      isEditMode &&\n      (!currentAlert?.id || alert?.id !== currentAlert.id || (isHidden && show))\n    ) {\n      if (alert?.id !== null && !loading && !fetchError) {\n        const id = alert.id || 0;\n        fetchResource(id);\n      }\n    } else if (\n      !isEditMode &&\n      (!currentAlert || currentAlert.id || (isHidden && show))\n    ) {\n      setCurrentAlert({\n        ...defaultAlert,\n        owners: currentUser\n          ? [\n              {\n                value: currentUser.userId,\n                label: `${currentUser.firstName} ${currentUser.lastName}`,\n              },\n            ]\n          : [],\n      });\n      setNotificationSettings([]);\n      setNotificationAddState('active');\n    }\n  }, [alert]);\n\n  useEffect(() => {\n    if (resource) {\n      // Add notification settings\n      const settings = (resource.recipients || []).map(setting => {\n        const config =\n          typeof setting.recipient_config_json === 'string'\n            ? JSON.parse(setting.recipient_config_json)\n            : {};\n        return {\n          method: setting.type,\n          // @ts-ignore: Type not assignable\n          recipients: config.target || setting.recipient_config_json,\n          options: allowedNotificationMethods,\n        };\n      });\n\n      setNotificationSettings(settings);\n      setNotificationAddState(\n        settings.length === allowedNotificationMethods.length\n          ? 'hidden'\n          : 'active',\n      );\n      setContentType(resource.chart ? 'chart' : 'dashboard');\n      setReportFormat(\n        resource.chart\n          ? resource.report_format || DEFAULT_NOTIFICATION_FORMAT\n          : DEFAULT_NOTIFICATION_FORMAT,\n      );\n      const validatorConfig =\n        typeof resource.validator_config_json === 'string'\n          ? JSON.parse(resource.validator_config_json)\n          : resource.validator_config_json;\n\n      setConditionNotNull(resource.validator_type === 'not null');\n\n      if (resource.chart) {\n        setChartVizType((resource.chart as ChartObject).viz_type);\n      }\n      setForceScreenshot(resource.force_screenshot);\n\n      setCurrentAlert({\n        ...resource,\n        chart: resource.chart\n          ? getChartData(resource.chart) || {\n              value: (resource.chart as ChartObject).id,\n              label: (resource.chart as ChartObject).slice_name,\n            }\n          : undefined,\n        dashboard: resource.dashboard\n          ? getDashboardData(resource.dashboard) || {\n              value: (resource.dashboard as DashboardObject).id,\n              label: (resource.dashboard as DashboardObject).dashboard_title,\n            }\n          : undefined,\n        database: resource.database\n          ? getSourceData(resource.database) || {\n              value: (resource.database as DatabaseObject).id,\n              label: (resource.database as DatabaseObject).database_name,\n            }\n          : undefined,\n        owners: (alert?.owners || []).map(owner => ({\n          value: (owner as MetaObject).value || owner.id,\n          label:\n            (owner as MetaObject).label ||\n            `${(owner as Owner).first_name} ${(owner as Owner).last_name}`,\n        })),\n        // @ts-ignore: Type not assignable\n        validator_config_json:\n          resource.validator_type === 'not null'\n            ? {\n                op: 'not null',\n              }\n            : validatorConfig,\n      });\n    }\n  }, [resource]);\n\n  // Validation\n  const currentAlertSafe = currentAlert || {};\n  useEffect(() => {\n    validate();\n  }, [\n    currentAlertSafe.name,\n    currentAlertSafe.owners,\n    currentAlertSafe.database,\n    currentAlertSafe.sql,\n    currentAlertSafe.validator_config_json,\n    currentAlertSafe.crontab,\n    currentAlertSafe.working_timeout,\n    currentAlertSafe.dashboard,\n    currentAlertSafe.chart,\n    contentType,\n    notificationSettings,\n    conditionNotNull,\n  ]);\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <StyledModal\n      className=\"no-content-padding\"\n      responsive\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={hide}\n      primaryButtonName={\n        isEditMode ? TRANSLATIONS.SAVE_TEXT : TRANSLATIONS.ADD_TEXT\n      }\n      show={show}\n      width=\"100%\"\n      maxWidth=\"1450px\"\n      title={\n        <h4 data-test=\"alert-report-modal-title\">\n          {isEditMode ? (\n            <Icons.EditAlt css={StyledIcon} />\n          ) : (\n            <Icons.PlusLarge css={StyledIcon} />\n          )}\n          {isEditMode && isReport\n            ? TRANSLATIONS.EDIT_REPORT_TEXT\n            : isEditMode\n            ? TRANSLATIONS.EDIT_ALERT_TEXT\n            : isReport\n            ? TRANSLATIONS.ADD_REPORT_TEXT\n            : TRANSLATIONS.ADD_ALERT_TEXT}\n        </h4>\n      }\n    >\n      <StyledSectionContainer>\n        <div className=\"header-section\">\n          <StyledInputContainer>\n            <div className=\"control-label\">\n              {isReport\n                ? TRANSLATIONS.REPORT_NAME_TEXT\n                : TRANSLATIONS.ALERT_NAME_TEXT}\n              <span className=\"required\">*</span>\n            </div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={currentAlert ? currentAlert.name : ''}\n                placeholder={\n                  isReport\n                    ? TRANSLATIONS.REPORT_NAME_TEXT\n                    : TRANSLATIONS.ALERT_NAME_TEXT\n                }\n                onChange={onInputChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledInputContainer>\n            <div className=\"control-label\">\n              {TRANSLATIONS.OWNERS_TEXT}\n              <span className=\"required\">*</span>\n            </div>\n            <div data-test=\"owners-select\" className=\"input-container\">\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.OWNERS_TEXT}\n                allowClear\n                name=\"owners\"\n                mode=\"multiple\"\n                value={\n                  (currentAlert?.owners as {\n                    label: string;\n                    value: number;\n                  }[]) || []\n                }\n                options={loadOwnerOptions}\n                onChange={onOwnersChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledInputContainer>\n            <div className=\"control-label\">{TRANSLATIONS.DESCRIPTION_TEXT}</div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                name=\"description\"\n                value={currentAlert ? currentAlert.description || '' : ''}\n                placeholder={TRANSLATIONS.DESCRIPTION_TEXT}\n                onChange={onInputChange}\n                css={inputSpacer}\n              />\n            </div>\n          </StyledInputContainer>\n          <StyledSwitchContainer>\n            <Switch\n              onChange={onActiveSwitch}\n              checked={currentAlert ? currentAlert.active : true}\n            />\n            <div className=\"switch-label\">{TRANSLATIONS.ACTIVE_TEXT}</div>\n          </StyledSwitchContainer>\n        </div>\n        <div className=\"column-section\">\n          {!isReport && (\n            <div className=\"column condition\">\n              <StyledSectionTitle>\n                <h4>{TRANSLATIONS.ALERT_CONDITION_TEXT}</h4>\n              </StyledSectionTitle>\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.DATABASE_TEXT}\n                  <span className=\"required\">*</span>\n                </div>\n                <div className=\"input-container\">\n                  <AsyncSelect\n                    ariaLabel={TRANSLATIONS.DATABASE_TEXT}\n                    name=\"source\"\n                    value={\n                      currentAlert?.database?.label &&\n                      currentAlert?.database?.value\n                        ? {\n                            value: currentAlert.database.value,\n                            label: currentAlert.database.label,\n                          }\n                        : undefined\n                    }\n                    options={loadSourceOptions}\n                    onChange={onSourceChange}\n                  />\n                </div>\n              </StyledInputContainer>\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.SQL_QUERY_TEXT}\n                  <StyledTooltip tooltip={TRANSLATIONS.SQL_QUERY_TOOLTIP} />\n                  <span className=\"required\">*</span>\n                </div>\n                <TextAreaControl\n                  name=\"sql\"\n                  language=\"sql\"\n                  offerEditInModal={false}\n                  minLines={15}\n                  maxLines={15}\n                  onChange={onSQLChange}\n                  readOnly={false}\n                  initialValue={resource?.sql}\n                  key={currentAlert?.id}\n                />\n              </StyledInputContainer>\n              <div className=\"inline-container wrap\">\n                <StyledInputContainer>\n                  <div className=\"control-label\" css={inputSpacer}>\n                    {TRANSLATIONS.TRIGGER_ALERT_IF_TEXT}\n                    <span className=\"required\">*</span>\n                  </div>\n                  <div className=\"input-container\">\n                    <Select\n                      ariaLabel={TRANSLATIONS.CONDITION_TEXT}\n                      onChange={onConditionChange}\n                      placeholder=\"Condition\"\n                      value={\n                        currentAlert?.validator_config_json?.op || undefined\n                      }\n                      options={CONDITIONS}\n                      css={inputSpacer}\n                    />\n                  </div>\n                </StyledInputContainer>\n                <StyledInputContainer>\n                  <div className=\"control-label\">\n                    {TRANSLATIONS.VALUE_TEXT}\n                    <span className=\"required\">*</span>\n                  </div>\n                  <div className=\"input-container\">\n                    <input\n                      type=\"number\"\n                      name=\"threshold\"\n                      disabled={conditionNotNull}\n                      value={\n                        currentAlert?.validator_config_json?.threshold !==\n                        undefined\n                          ? currentAlert.validator_config_json.threshold\n                          : ''\n                      }\n                      placeholder={TRANSLATIONS.VALUE_TEXT}\n                      onChange={onThresholdChange}\n                    />\n                  </div>\n                </StyledInputContainer>\n              </div>\n            </div>\n          )}\n          <div className=\"column schedule\">\n            <StyledSectionTitle>\n              <h4>\n                {isReport\n                  ? TRANSLATIONS.REPORT_SCHEDULE_TEXT\n                  : TRANSLATIONS.ALERT_CONDITION_SCHEDULE_TEXT}\n              </h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            <AlertReportCronScheduler\n              value={currentAlert?.crontab || ''}\n              onChange={newVal => updateAlertState('crontab', newVal)}\n            />\n            <div className=\"control-label\">{TRANSLATIONS.TIMEZONE_TEXT}</div>\n            <div\n              className=\"input-container\"\n              css={(theme: SupersetTheme) => timezoneHeaderStyle(theme)}\n            >\n              <TimezoneSelector\n                onTimezoneChange={onTimezoneChange}\n                timezone={currentAlert?.timezone}\n                minWidth=\"100%\"\n              />\n            </div>\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.SCHEDULE_SETTINGS_TEXT}</h4>\n            </StyledSectionTitle>\n            <StyledInputContainer>\n              <div className=\"control-label\">\n                {TRANSLATIONS.LOG_RETENTION_TEXT}\n                <span className=\"required\">*</span>\n              </div>\n              <div className=\"input-container\">\n                <Select\n                  ariaLabel={TRANSLATIONS.LOG_RETENTION_TEXT}\n                  placeholder={TRANSLATIONS.LOG_RETENTION_TEXT}\n                  onChange={onLogRetentionChange}\n                  value={\n                    typeof currentAlert?.log_retention === 'number'\n                      ? currentAlert?.log_retention\n                      : ALERT_REPORTS_DEFAULT_RETENTION\n                  }\n                  options={RETENTION_OPTIONS}\n                  sortComparator={propertyComparator('value')}\n                />\n              </div>\n            </StyledInputContainer>\n            <StyledInputContainer>\n              <div className=\"control-label\">\n                {TRANSLATIONS.WORKING_TIMEOUT_TEXT}\n                <span className=\"required\">*</span>\n              </div>\n              <div className=\"input-container\">\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  name=\"working_timeout\"\n                  value={currentAlert?.working_timeout || ''}\n                  placeholder={TRANSLATIONS.TIME_IN_SECONDS_TEXT}\n                  onChange={onTimeoutVerifyChange}\n                />\n                <span className=\"input-label\">{TRANSLATIONS.SECONDS_TEXT}</span>\n              </div>\n            </StyledInputContainer>\n            {!isReport && (\n              <StyledInputContainer>\n                <div className=\"control-label\">\n                  {TRANSLATIONS.GRACE_PERIOD_TEXT}\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    name=\"grace_period\"\n                    value={currentAlert?.grace_period || ''}\n                    placeholder={TRANSLATIONS.TIME_IN_SECONDS_TEXT}\n                    onChange={onTimeoutVerifyChange}\n                  />\n                  <span className=\"input-label\">\n                    {TRANSLATIONS.SECONDS_TEXT}\n                  </span>\n                </div>\n              </StyledInputContainer>\n            )}\n          </div>\n          <div className=\"column message\">\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.MESSAGE_CONTENT_TEXT}</h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            <Radio.Group onChange={onContentTypeChange} value={contentType}>\n              <StyledRadio value=\"dashboard\">\n                {TRANSLATIONS.DASHBOARD_TEXT}\n              </StyledRadio>\n              <StyledRadio value=\"chart\">{TRANSLATIONS.CHART_TEXT}</StyledRadio>\n            </Radio.Group>\n            {contentType === 'chart' ? (\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.CHART_TEXT}\n                name=\"chart\"\n                value={\n                  currentAlert?.chart?.label && currentAlert?.chart?.value\n                    ? {\n                        value: currentAlert.chart.value,\n                        label: currentAlert.chart.label,\n                      }\n                    : undefined\n                }\n                options={loadChartOptions}\n                onChange={onChartChange}\n              />\n            ) : (\n              <AsyncSelect\n                ariaLabel={TRANSLATIONS.DASHBOARD_TEXT}\n                name=\"dashboard\"\n                value={\n                  currentAlert?.dashboard?.label &&\n                  currentAlert?.dashboard?.value\n                    ? {\n                        value: currentAlert.dashboard.value,\n                        label: currentAlert.dashboard.label,\n                      }\n                    : undefined\n                }\n                options={loadDashboardOptions}\n                onChange={onDashboardChange}\n              />\n            )}\n            {formatOptionEnabled && (\n              <>\n                <div className=\"inline-container\">\n                  <StyledRadioGroup\n                    onChange={onFormatChange}\n                    value={reportFormat}\n                  >\n                    <StyledRadio value=\"PNG\">\n                      {TRANSLATIONS.SEND_AS_PNG_TEXT}\n                    </StyledRadio>\n                    <StyledRadio value=\"CSV\">\n                      {TRANSLATIONS.SEND_AS_CSV_TEXT}\n                    </StyledRadio>\n                    {TEXT_BASED_VISUALIZATION_TYPES.includes(chartVizType) && (\n                      <StyledRadio value=\"TEXT\">\n                        {TRANSLATIONS.SEND_AS_TEXT}\n                      </StyledRadio>\n                    )}\n                  </StyledRadioGroup>\n                </div>\n              </>\n            )}\n            {isScreenshot && (\n              <StyledInputContainer>\n                <div className=\"control-label\" css={CustomWidthHeaderStyle}>\n                  {TRANSLATIONS.CUSTOM_SCREENSHOT_WIDTH_TEXT}\n                </div>\n                <div className=\"input-container\">\n                  <InputNumber\n                    type=\"number\"\n                    name=\"custom_width\"\n                    value={currentAlert?.custom_width || undefined}\n                    min={600}\n                    max={2400}\n                    placeholder={\n                      TRANSLATIONS.CUSTOM_SCREENSHOT_WIDTH_PLACEHOLDER_TEXT\n                    }\n                    onChange={onCustomWidthChange}\n                  />\n                </div>\n              </StyledInputContainer>\n            )}\n            {(isReport || contentType === 'dashboard') && (\n              <div className=\"inline-container\">\n                <StyledCheckbox\n                  data-test=\"bypass-cache\"\n                  className=\"checkbox\"\n                  checked={forceScreenshot}\n                  onChange={onForceScreenshotChange}\n                >\n                  {TRANSLATIONS.IGNORE_CACHE_TEXT}\n                </StyledCheckbox>\n              </div>\n            )}\n            <StyledSectionTitle>\n              <h4>{TRANSLATIONS.NOTIFICATION_METHOD_TEXT}</h4>\n              <span className=\"required\">*</span>\n            </StyledSectionTitle>\n            {notificationSettings.map((notificationSetting, i) => (\n              <StyledNotificationMethodWrapper>\n                <NotificationMethod\n                  setting={notificationSetting}\n                  index={i}\n                  key={`NotificationMethod-${i}`}\n                  onUpdate={updateNotificationSetting}\n                  onRemove={removeNotificationSetting}\n                />\n              </StyledNotificationMethodWrapper>\n            ))}\n            <NotificationMethodAdd\n              data-test=\"notification-add\"\n              status={notificationAddState}\n              onClick={onNotificationAdd}\n            />\n          </div>\n        </div>\n      </StyledSectionContainer>\n    </StyledModal>\n  );\n};\n\nexport default withToasts(AlertReportModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled, css, SupersetTheme } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport { Radio } from 'src/components/Radio';\nimport { CronPicker } from 'src/components/CronPicker';\n\nexport const StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\nexport const StyledTopSection = styled.div`\n  padding: ${({ theme }) =>\n    `${theme.gridUnit * 3}px ${theme.gridUnit * 4}px ${theme.gridUnit * 2}px`};\n  label {\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nexport const StyledBottomSection = styled.div`\n  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n  padding: ${({ theme }) =>\n    `${theme.gridUnit * 4}px ${theme.gridUnit * 4}px ${theme.gridUnit * 6}px`};\n  .ant-select {\n    width: 100%;\n  }\n  .control-label {\n    font-size: ${({ theme }) => theme.typography.sizes.s}px;\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nexport const StyledIconWrapper = styled.span`\n  span {\n    margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    vertical-align: middle;\n  }\n  .text {\n    vertical-align: middle;\n  }\n`;\n\nexport const StyledScheduleTitle = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 7}px;\n\n  h4 {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\n\nexport const StyledCronPicker = styled(CronPicker)`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  width: ${({ theme }) => theme.gridUnit * 120}px;\n`;\n\nexport const StyledCronError = styled.p`\n  color: ${({ theme }) => theme.colors.error.base};\n`;\n\nexport const noBottomMargin = css`\n  margin-bottom: 0;\n`;\n\nexport const StyledFooterButton = styled(Button)`\n  width: ${({ theme }) => theme.gridUnit * 40}px;\n`;\n\nexport const TimezoneHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 2}px;\n`;\n\nexport const CustomWidthHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 2}px;\n`;\n\nexport const SectionHeaderStyle = (theme: SupersetTheme) => css`\n  margin: ${theme.gridUnit * 3}px 0;\n`;\n\nexport const StyledMessageContentTitle = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 8}px 0\n    ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\nexport const StyledRadio = styled(Radio)`\n  display: block;\n  line-height: ${({ theme }) => theme.gridUnit * 8}px;\n`;\n\nexport const StyledRadioGroup = styled(Radio.Group)`\n  margin-left: ${({ theme }) => theme.gridUnit * 0.5}px;\n`;\n\nexport const antDErrorAlertStyles = (theme: SupersetTheme) => css`\n  border: ${theme.colors.error.base} 1px solid;\n  padding: ${theme.gridUnit * 4}px;\n  margin: ${theme.gridUnit * 4}px;\n  margin-top: 0;\n  color: ${theme.colors.error.dark2};\n  .ant-alert-message {\n    font-size: ${theme.typography.sizes.m}px;\n    font-weight: bold;\n  }\n  .ant-alert-description {\n    font-size: ${theme.typography.sizes.m}px;\n    line-height: ${theme.gridUnit * 4}px;\n    .ant-alert-icon {\n      margin-right: ${theme.gridUnit * 2.5}px;\n      font-size: ${theme.typography.sizes.l}px;\n      position: relative;\n      top: ${theme.gridUnit / 4}px;\n    }\n  }\n`;\n"],"names":["LOCALE","everyText","t","emptyMonths","emptyMonthDays","emptyMonthDaysShort","emptyWeekDays","emptyWeekDaysShort","emptyHours","emptyMinutes","emptyMinutesForHourPeriod","yearOption","monthOption","weekOption","dayOption","hourOption","minuteOption","rebootOption","prefixPeriod","prefixMonths","prefixMonthDays","prefixWeekDays","prefixWeekDaysForMonthAndYearPeriod","prefixHours","prefixMinutes","prefixMinutesForHourPeriod","suffixMinutesForHourPeriod","errorInvalidCron","clearButtonText","weekDays","months","altWeekDays","altMonths","CronPicker","styled","props","___EmotionJSX","ConfigProvider","getPopupContainer","trigger","parentElement","ReactCronPicker","_extends","locale","_ref","theme","gridUnit","_ref2","colors","grayscale","light4","_ref3","StyledSwitch","BaseSwitch","primary","base","Switch","DEFAULT_TIMEZONE","MIN_SELECT_WIDTH","offsetsToName","currentDate","moment","JANUARY","JULY","getOffsetKey","name","tz","utcOffset","toString","getTimezoneName","_offsetsToName$offset","_offsetsToName$offset2","offsets","isDST","ALL_ZONES","countries","map","country","zonesForCountry","flat","TIMEZONES","forEach","zone","find","option","push","TIMEZONE_OPTIONS","label","format","value","timezoneName","TIMEZONE_OPTIONS_SORT_COMPARATOR","a","b","sort","matchTimezoneToOptions","timezone","_TIMEZONE_OPTIONS$fin","TimezoneSelector","onTimezoneChange","minWidth","validTimezone","useMemo","guess","useEffect","Select","ariaLabel","css","_css","onChange","options","sortComparator","AlertReportCronScheduler","useTheme","inputRef","useRef","scheduleFormat","setScheduleFormat","useState","handleRadioButtonChange","useCallback","e","target","customSetValue","newValue","_inputRef$current","current","setValue","handleBlur","event","handlePressEnter","_inputRef$current2","input","error","onError","React","Radio","Group","className","clearButton","disabled","displayError","StyledInputContainer","Input","type","ref","style","borderColor","placeholder","onBlur","onPressEnter","StyledNotificationMethod","div","NotificationMethod","setting","index","onUpdate","onRemove","method","recipients","recipientValue","setRecipientValue","updatedSetting","undefined","role","tabIndex","onClick","Icons","Trash","iconColor","TEXT_BASED_VISUALIZATION_TYPES","DEFAULT_NOTIFICATION_METHODS","DEFAULT_NOTIFICATION_FORMAT","CONDITIONS","RETENTION_OPTIONS","StyledModal","Modal","StyledTooltip","InfoTooltipWithTrigger","StyledIcon","StyledSectionContainer","_ref4","light2","_ref5","_ref6","_ref7","_ref8","StyledSectionTitle","_ref9","_ref10","_ref11","_ref12","StyledSwitchContainer","_ref13","_ref14","typography","sizes","s","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","light1","_ref22","_ref23","_ref24","_ref25","StyledRadio","_ref26","StyledRadioGroup","_ref27","StyledCheckbox","AntdCheckbox","_ref28","StyledNotificationAddButton","_ref29","dark1","_ref30","_ref31","StyledNotificationMethodWrapper","inputSpacer","TRANSLATIONS","ADD_NOTIFICATION_METHOD_TEXT","ADD_DELIVERY_METHOD_TEXT","SAVE_TEXT","ADD_TEXT","EDIT_REPORT_TEXT","EDIT_ALERT_TEXT","ADD_REPORT_TEXT","ADD_ALERT_TEXT","REPORT_NAME_TEXT","ALERT_NAME_TEXT","OWNERS_TEXT","DESCRIPTION_TEXT","ACTIVE_TEXT","ALERT_CONDITION_TEXT","DATABASE_TEXT","SQL_QUERY_TEXT","SQL_QUERY_TOOLTIP","TRIGGER_ALERT_IF_TEXT","CONDITION_TEXT","VALUE_TEXT","REPORT_SCHEDULE_TEXT","ALERT_CONDITION_SCHEDULE_TEXT","TIMEZONE_TEXT","SCHEDULE_SETTINGS_TEXT","LOG_RETENTION_TEXT","WORKING_TIMEOUT_TEXT","TIME_IN_SECONDS_TEXT","SECONDS_TEXT","GRACE_PERIOD_TEXT","MESSAGE_CONTENT_TEXT","DASHBOARD_TEXT","CHART_TEXT","SEND_AS_PNG_TEXT","SEND_AS_CSV_TEXT","SEND_AS_TEXT","IGNORE_CACHE_TEXT","CUSTOM_SCREENSHOT_WIDTH_TEXT","CUSTOM_SCREENSHOT_WIDTH_PLACEHOLDER_TEXT","NOTIFICATION_METHOD_TEXT","NotificationMethodAdd","_ref32","status","checkStatus","withToasts","_ref33","_currentAlert$databas2","_currentAlert$databas3","_currentAlert$validat5","_currentAlert$validat6","_currentAlert$chart2","_currentAlert$chart3","_currentAlert$dashboa2","_currentAlert$dashboa3","addDangerToast","onAdd","onHide","show","alert","isReport","addSuccessToast","currentUser","useSelector","state","user","conf","useCommonConf","allowedNotificationMethods","ALERT_REPORTS_NOTIFICATION_METHODS","disableSave","setDisableSave","currentAlert","setCurrentAlert","isHidden","setIsHidden","contentType","setContentType","reportFormat","setReportFormat","forceScreenshot","setForceScreenshot","isScreenshot","setIsScreenshot","conditionNotNull","setConditionNotNull","sourceOptions","setSourceOptions","dashboardOptions","setDashboardOptions","chartOptions","setChartOptions","chartVizType","setChartVizType","isEditMode","formatOptionEnabled","isFeatureEnabled","FeatureFlag","ALERTS_ATTACH_REPORTS","notificationAddState","setNotificationAddState","notificationSettings","setNotificationSettings","ALERT_REPORTS_DEFAULT_WORKING_TIMEOUT","ALERT_REPORTS_DEFAULT_CRON_VALUE","ALERT_REPORTS_DEFAULT_RETENTION","_state$common","_conf$ALERT_REPORTS_D","_conf$ALERT_REPORTS_D2","_conf$ALERT_REPORTS_D3","common","defaultAlert","active","creation_method","crontab","log_retention","working_timeout","owners","sql","validator_config_json","validator_type","force_screenshot","grace_period","updateNotificationSetting","settings","slice","removeNotificationSetting","splice","loading","resource","fetchError","fetchResource","createResource","updateResource","clearError","useSingleViewResource","hide","loadOwnerOptions","page","pageSize","query","rison","filter","page_size","SupersetClient","get","endpoint","then","response","data","json","result","item","text","totalCount","count","getSourceData","db","database","source","id","updateAlertState","currentAlertData","loadSourceOptions","list","databaseLabel","loadDashboardOptions","getDashboardData","dashboard","dash","getChartData","chartData","chart","noChartLabel","loadChartOptions","onInputChange","parsedValue","parseInt","onTimeoutVerifyChange","Math","max","userId","firstName","lastName","config","recipient_config_json","JSON","parse","length","report_format","validatorConfig","viz_type","slice_name","dashboard_title","database_name","owner","first_name","last_name","op","currentAlertSafe","validate","_currentAlert$name","_currentAlert$owners","_currentAlert$crontab","_currentAlert$sql","_currentAlert$validat3","_currentAlert$validat4","checkNotificationSettings","hasInfo","_setting$recipients","threshold","responsive","disablePrimaryButton","onHandledPrimaryAction","onSave","_currentAlert$chart","_currentAlert$dashboa","_currentAlert$databas","shouldEnableForceScreenshot","custom_width","context_markdown","update_id","created_by","last_eval_dttm","last_state","last_value","last_value_row_json","primaryButtonName","width","maxWidth","title","EditAlt","PlusLarge","AsyncSelect","allowClear","mode","description","checked","tooltip","TextAreaControl","language","offerEditInModal","minLines","maxLines","readOnly","initialValue","key","_currentAlert$validat","_currentAlert$validat2","newVal","timezoneHeaderStyle","retention","propertyComparator","min","setTimeout","getChartVisualizationType","includes","CustomWidthHeaderStyle","InputNumber","notificationSetting","i","onNotificationAdd","StyledTopSection","StyledBottomSection","StyledIconWrapper","span","StyledScheduleTitle","StyledCronPicker","StyledCronError","p","noBottomMargin","StyledFooterButton","Button","TimezoneHeaderStyle","SectionHeaderStyle","StyledMessageContentTitle","antDErrorAlertStyles","dark2","m","l"],"sourceRoot":""}