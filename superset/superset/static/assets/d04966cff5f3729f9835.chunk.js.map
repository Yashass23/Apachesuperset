{"version":3,"file":"d04966cff5f3729f9835.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/lodash/uniqBy.js","webpack://superset/./packages/superset-ui-core/src/hooks/useTruncation/useChildElementTruncation.ts","webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/components/ListView/CrossLinksTooltip.tsx","webpack://superset/./src/components/ListView/CrossLinks.tsx","webpack://superset/./src/pages/ChartList/index.tsx","webpack://superset/./src/utils/getOwnerName.ts"],"sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RefObject, useLayoutEffect, useState, useRef } from 'react';\n\n/**\n * This hook encapsulates logic to support truncation of child HTML\n * elements contained in a fixed-width parent HTML element.  Given\n * a ref to the parent element and optionally a ref to the \"+x\"\n * component that shows the number of truncated items, this hook\n * will return the number of elements that are not fully visible\n * (including those completely hidden) and whether any elements\n * are completely hidden.\n */\nconst useChildElementTruncation = (\n  elementRef: RefObject<HTMLElement>,\n  plusRef?: RefObject<HTMLElement>,\n) => {\n  const [elementsTruncated, setElementsTruncated] = useState(0);\n  const [hasHiddenElements, setHasHiddenElements] = useState(false);\n\n  const previousEffectInfoRef = useRef({\n    scrollWidth: 0,\n    parentElementWidth: 0,\n    plusRefWidth: 0,\n  });\n\n  useLayoutEffect(() => {\n    const currentElement = elementRef.current;\n    const plusRefElement = plusRef?.current;\n\n    if (!currentElement) {\n      return;\n    }\n\n    const { scrollWidth, clientWidth, childNodes } = currentElement;\n\n    // By using the result of this effect to truncate content\n    // we're effectively changing it's size.\n    // That will trigger another pass at this effect.\n    // Depending on the content elements width, that second rerender could\n    // yield a different truncate count, thus potentially leading to a\n    // rendering loop.\n    // There's only a need to recompute if the parent width or the width of\n    // the child nodes changes.\n    const previousEffectInfo = previousEffectInfoRef.current;\n    const parentElementWidth = currentElement.parentElement?.clientWidth || 0;\n    const plusRefWidth = plusRefElement?.offsetWidth || 0;\n    previousEffectInfoRef.current = {\n      scrollWidth,\n      parentElementWidth,\n      plusRefWidth,\n    };\n\n    if (\n      previousEffectInfo.parentElementWidth === parentElementWidth &&\n      previousEffectInfo.scrollWidth === scrollWidth &&\n      previousEffectInfo.plusRefWidth === plusRefWidth\n    ) {\n      return;\n    }\n\n    if (scrollWidth > clientWidth) {\n      // \"...\" is around 6px wide\n      const truncationWidth = 6;\n      const plusSize = plusRefElement?.offsetWidth || 0;\n      const maxWidth = clientWidth - truncationWidth;\n      const elementsCount = childNodes.length;\n\n      let width = 0;\n      let hiddenElements = 0;\n      for (let i = 0; i < elementsCount; i += 1) {\n        const itemWidth = (childNodes[i] as HTMLElement).offsetWidth;\n        const remainingWidth = maxWidth - truncationWidth - width - plusSize;\n\n        // assures it shows +{number} only when the item is not visible\n        if (remainingWidth <= 0) {\n          hiddenElements += 1;\n        }\n        width += itemWidth;\n      }\n\n      if (elementsCount > 1 && hiddenElements) {\n        setHasHiddenElements(true);\n        setElementsTruncated(hiddenElements);\n      } else {\n        setHasHiddenElements(false);\n        setElementsTruncated(1);\n      }\n    } else {\n      setHasHiddenElements(false);\n      setElementsTruncated(0);\n    }\n  }, [\n    elementRef.current?.offsetWidth,\n    elementRef.current?.clientWidth,\n    elementRef,\n  ]);\n\n  return [elementsTruncated, hasHiddenElements];\n};\n\nexport default useChildElementTruncation;\n","import React from 'react';\n\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst MAX_DISPLAY_CHAR = 20;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n  toolTipTitle = name,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > MAX_DISPLAY_CHAR, [name]);\n  const tagDisplay = isLongTag ? `${name.slice(0, MAX_DISPLAY_CHAR)}...` : name;\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag\n            key={id}\n            closable={editable}\n            onClose={handleClose}\n            color=\"blue\"\n          >\n            {tagDisplay}\n          </StyledTag>\n        </Tooltip>\n      ) : (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag data-test=\"tag\" role=\"link\" key={id} onClick={onClick}>\n            {id ? (\n              <a\n                href={`/superset/all_entities/?id=${id}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {tagDisplay}\n              </a>\n            ) : (\n              tagDisplay\n            )}\n          </StyledTag>\n        </Tooltip>\n      )}\n    </>\n  );\n\n  return tagElem;\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag\n              name={`+${extraTags}...`}\n              onClick={expand}\n              toolTipTitle={tags.map(t => t.name).join(', ')}\n            />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Link } from 'react-router-dom';\n\nexport type CrossLinksTooltipProps = {\n  children: React.ReactNode;\n  crossLinks: { to: string; title: string }[];\n  moreItems?: number;\n  show: boolean;\n};\n\nconst StyledLinkedTooltip = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\n\nexport default function CrossLinksTooltip({\n  children,\n  crossLinks = [],\n  moreItems = undefined,\n  show = false,\n}: CrossLinksTooltipProps) {\n  return (\n    <Tooltip\n      placement=\"top\"\n      data-test=\"crosslinks-tooltip\"\n      title={\n        show && (\n          <StyledLinkedTooltip>\n            {crossLinks.map(link => (\n              <Link\n                className=\"link\"\n                key={link.to}\n                to={link.to}\n                target=\"_blank\"\n                rel=\"noreferer noopener\"\n              >\n                {link.title}\n              </Link>\n            ))}\n            {moreItems && (\n              <span data-test=\"plus-more\">{t('+ %s more', moreItems)}</span>\n            )}\n          </StyledLinkedTooltip>\n        )\n      }\n    >\n      {children}\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useRef } from 'react';\nimport { styled, useTruncation } from '@superset-ui/core';\nimport { Link } from 'react-router-dom';\nimport CrossLinksTooltip from './CrossLinksTooltip';\n\nexport type CrossLinkProps = {\n  title: string;\n  id: number;\n};\n\nexport type CrossLinksProps = {\n  crossLinks: Array<CrossLinkProps>;\n  maxLinks?: number;\n  linkPrefix?: string;\n};\n\nconst StyledCrossLinks = styled.div`\n  ${({ theme }) => `\n    & > span {\n      width: 100%;\n      display: flex;\n\n      .ant-tooltip-open {\n        display: inline;\n      }\n\n      .truncated {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        display: inline-block;\n        width: 100%;\n        vertical-align: bottom;\n      }\n\n      .count {\n        cursor: pointer;\n        color: ${theme.colors.grayscale.base};\n        font-weight: ${theme.typography.weights.bold};\n      }\n    }\n  `}\n`;\n\nexport default function CrossLinks({\n  crossLinks,\n  maxLinks = 20,\n  linkPrefix = '/superset/dashboard/',\n}: CrossLinksProps) {\n  const crossLinksRef = useRef<HTMLDivElement>(null);\n  const plusRef = useRef<HTMLDivElement>(null);\n  const [elementsTruncated, hasHiddenElements] = useTruncation(\n    crossLinksRef,\n    plusRef,\n  );\n  const hasMoreItems = useMemo(\n    () =>\n      crossLinks.length > maxLinks ? crossLinks.length - maxLinks : undefined,\n    [crossLinks, maxLinks],\n  );\n  const links = useMemo(\n    () => (\n      <span className=\"truncated\" ref={crossLinksRef} data-test=\"crosslinks\">\n        {crossLinks.map((link, index) => (\n          <Link\n            key={link.id}\n            to={linkPrefix + link.id}\n            target=\"_blank\"\n            rel=\"noreferer noopener\"\n          >\n            {index === 0 ? link.title : `, ${link.title}`}\n          </Link>\n        ))}\n      </span>\n    ),\n    [crossLinks],\n  );\n  const tooltipLinks = useMemo(\n    () =>\n      crossLinks.slice(0, maxLinks).map(l => ({\n        title: l.title,\n        to: linkPrefix + l.id,\n      })),\n    [crossLinks, maxLinks],\n  );\n\n  return (\n    <StyledCrossLinks>\n      <CrossLinksTooltip\n        moreItems={hasMoreItems}\n        crossLinks={tooltipLinks}\n        show={!!elementsTruncated}\n      >\n        {links}\n        {hasHiddenElements && (\n          <span ref={plusRef} className=\"count\" data-test=\"count-crosslinks\">\n            +{elementsTruncated}\n          </span>\n        )}\n      </CrossLinksTooltip>\n    </StyledCrossLinks>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  JsonResponse,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport { uniqBy } from 'lodash';\nimport { useSelector } from 'react-redux';\nimport {\n  createErrorHandler,\n  createFetchRelated,\n  handleChartDelete,\n} from 'src/views/CRUD/utils';\nimport {\n  useChartEditModal,\n  useFavoriteStatus,\n  useListViewResource,\n} from 'src/views/CRUD/hooks';\nimport handleResourceExport from 'src/utils/export';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { TagsList } from 'src/components/Tags';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport FaveStar from 'src/components/FaveStar';\nimport { Link, useHistory } from 'react-router-dom';\nimport ListView, {\n  Filter,\n  FilterOperator,\n  Filters,\n  ListViewProps,\n  SelectOption,\n} from 'src/components/ListView';\nimport CrossLinks from 'src/components/ListView/CrossLinks';\nimport Loading from 'src/components/Loading';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Chart, { ChartLinkedDashboard } from 'src/types/Chart';\nimport Tag from 'src/types/TagType';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { nativeFilterGate } from 'src/dashboard/components/nativeFilters/utils';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';\nimport { loadTags } from 'src/components/Tags/utils';\nimport FacePile from 'src/components/FacePile';\nimport ChartCard from 'src/features/charts/ChartCard';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { findPermission } from 'src/utils/findPermission';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  a {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 1.2;\n  }\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the charts. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more charts that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\nconst registry = getChartMetadataRegistry();\n\nconst createFetchDatasets = async (\n  filterValue = '',\n  page: number,\n  pageSize: number,\n) => {\n  // add filters if filterValue\n  const filters = filterValue\n    ? { filters: [{ col: 'table_name', opr: 'sw', value: filterValue }] }\n    : {};\n  const queryParams = rison.encode({\n    columns: ['datasource_name', 'datasource_id'],\n    keys: ['none'],\n    order_column: 'table_name',\n    order_direction: 'asc',\n    page,\n    page_size: pageSize,\n    ...filters,\n  });\n\n  const { json = {} } = await SupersetClient.get({\n    endpoint: `/api/v1/dataset/?q=${queryParams}`,\n  });\n\n  const datasets = json?.result?.map(\n    ({ table_name: tableName, id }: { table_name: string; id: number }) => ({\n      label: tableName,\n      value: id,\n    }),\n  );\n\n  return {\n    data: uniqBy<SelectOption>(datasets, 'value'),\n    totalCount: json?.count,\n  };\n};\n\ninterface ChartListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst StyledActions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nfunction ChartList(props: ChartListProps) {\n  const {\n    addDangerToast,\n    addSuccessToast,\n    user: { userId },\n  } = props;\n\n  const history = useHistory();\n\n  const {\n    state: {\n      loading,\n      resourceCount: chartCount,\n      resourceCollection: charts,\n      bulkSelectEnabled,\n    },\n    setResourceCollection: setCharts,\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Chart>('chart', t('chart'), addDangerToast);\n\n  const chartIds = useMemo(() => charts.map(c => c.id), [charts]);\n  const { roles } = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const canReadTag = findPermission('can_read', 'Tag', roles);\n\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'chart',\n    chartIds,\n    addDangerToast,\n  );\n  const {\n    sliceCurrentlyEditing,\n    handleChartUpdated,\n    openChartEditModal,\n    closeChartEditModal,\n  } = useChartEditModal(setCharts, charts);\n\n  const [importingChart, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userSettings = dangerouslyGetItemDoNotUse(userId?.toString(), null) as {\n    thumbnails: boolean;\n  };\n\n  const openChartImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeChartImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleChartImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Chart imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const handleBulkChartExport = (chartsToExport: Chart[]) => {\n    const ids = chartsToExport.map(({ id }) => id);\n    handleResourceExport('chart', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  function handleBulkChartDelete(chartsToDelete: Chart[]) {\n    SupersetClient.delete({\n      endpoint: `/api/v1/chart/?q=${rison.encode(\n        chartsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected charts: %s', errMsg),\n        ),\n      ),\n    );\n  }\n  const fetchDashboards = async (\n    filterValue = '',\n    page: number,\n    pageSize: number,\n  ) => {\n    // add filters if filterValue\n    const filters = filterValue\n      ? {\n          filters: [\n            {\n              col: 'dashboard_title',\n              opr: FilterOperator.startsWith,\n              value: filterValue,\n            },\n          ],\n        }\n      : {};\n    const queryParams = rison.encode({\n      columns: ['dashboard_title', 'id'],\n      keys: ['none'],\n      order_column: 'dashboard_title',\n      order_direction: 'asc',\n      page,\n      page_size: pageSize,\n      ...filters,\n    });\n    const response: void | JsonResponse = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    }).catch(() =>\n      addDangerToast(t('An error occurred while fetching dashboards')),\n    );\n    const dashboards = response?.json?.result?.map(\n      ({\n        dashboard_title: dashboardTitle,\n        id,\n      }: {\n        dashboard_title: string;\n        id: number;\n      }) => ({\n        label: dashboardTitle,\n        value: id,\n      }),\n    );\n    return {\n      data: uniqBy<SelectOption>(dashboards, 'value'),\n      totalCount: response?.json?.count,\n    };\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) =>\n          userId && (\n            <FaveStar\n              itemId={id}\n              saveFaveStar={saveFavoriteStatus}\n              isStarred={favoriteStatus[id]}\n            />\n          ),\n        Header: '',\n        id: 'id',\n        disableSortBy: true,\n        size: 'xs',\n        hidden: !userId,\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              url,\n              slice_name: sliceName,\n              certified_by: certifiedBy,\n              certification_details: certificationDetails,\n              description,\n            },\n          },\n        }: any) => (\n          <FlexRowContainer>\n            <Link to={url} data-test={`${sliceName}-list-chart-title`}>\n              {certifiedBy && (\n                <>\n                  <CertifiedBadge\n                    certifiedBy={certifiedBy}\n                    details={certificationDetails}\n                  />{' '}\n                </>\n              )}\n              {sliceName}\n            </Link>\n            {description && <InfoTooltip tooltip={description} />}\n          </FlexRowContainer>\n        ),\n        Header: t('Name'),\n        accessor: 'slice_name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { viz_type: vizType },\n          },\n        }: any) => registry.get(vizType)?.name || vizType,\n        Header: t('Type'),\n        accessor: 'viz_type',\n        size: 'xxl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              datasource_name_text: dsNameTxt,\n              datasource_url: dsUrl,\n            },\n          },\n        }: any) => <GenericLink to={dsUrl}>{dsNameTxt}</GenericLink>,\n        Header: t('Dataset'),\n        accessor: 'datasource_id',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { dashboards },\n          },\n        }: any) => (\n          <CrossLinks\n            crossLinks={ensureIsArray(dashboards).map(\n              (d: ChartLinkedDashboard) => ({\n                title: d.dashboard_title,\n                id: d.id,\n              }),\n            )}\n          />\n        ),\n        Header: t('Dashboards added to'),\n        accessor: 'dashboards',\n        disableSortBy: true,\n        size: 'xxl',\n        hidden: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList\n            tags={tags.filter((tag: Tag) =>\n              tag.type\n                ? tag.type === 1 || tag.type === 'TagTypes.custom'\n                : true,\n            )}\n            maxTags={3}\n          />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { owners = [] },\n          },\n        }: any) => <FacePile users={owners} />,\n        Header: t('Owners'),\n        accessor: 'owners',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'last_saved_at',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleChartDelete(\n              original,\n              addSuccessToast,\n              addDangerToast,\n              refreshData,\n            );\n          const openEditModal = () => openChartEditModal(original);\n          const handleExport = () => handleBulkChartExport([original]);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n\n          return (\n            <StyledActions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.slice_name}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        data-test=\"trash\"\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={openEditModal}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </StyledActions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n      },\n      {\n        accessor: QueryObjectColumns.changed_by,\n        hidden: true,\n      },\n    ],\n    [\n      userId,\n      canEdit,\n      canDelete,\n      canExport,\n      saveFavoriteStatus,\n      favoriteStatus,\n      refreshData,\n      addSuccessToast,\n      addDangerToast,\n    ],\n  );\n\n  const favoritesFilter: Filter = useMemo(\n    () => ({\n      Header: t('Favorite'),\n      key: 'favorite',\n      id: 'id',\n      urlDisplay: 'favorite',\n      input: 'select',\n      operator: FilterOperator.chartIsFav,\n      unfilteredLabel: t('Any'),\n      selects: [\n        { label: t('Yes'), value: true },\n        { label: t('No'), value: false },\n      ],\n    }),\n    [],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'slice_name',\n        input: 'search',\n        operator: FilterOperator.chartAllText,\n      },\n      {\n        Header: t('Type'),\n        key: 'viz_type',\n        id: 'viz_type',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        selects: registry\n          .keys()\n          .filter(k => nativeFilterGate(registry.get(k)?.behaviors || []))\n          .map(k => ({ label: registry.get(k)?.name || k, value: k }))\n          .sort((a, b) => {\n            if (!a.label || !b.label) {\n              return 0;\n            }\n\n            if (a.label > b.label) {\n              return 1;\n            }\n            if (a.label < b.label) {\n              return -1;\n            }\n\n            return 0;\n          }),\n      },\n      {\n        Header: t('Dataset'),\n        key: 'dataset',\n        id: 'datasource_id',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchDatasets,\n        paginate: true,\n      },\n      ...(isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM) && canReadTag\n        ? [\n            {\n              Header: t('Tag'),\n              key: 'tags',\n              id: 'tags',\n              input: 'select',\n              operator: FilterOperator.chartTags,\n              unfilteredLabel: t('All'),\n              fetchSelects: loadTags,\n            },\n          ]\n        : []),\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'owners',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching chart owners values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Dashboard'),\n        key: 'dashboards',\n        id: 'dashboards',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: fetchDashboards,\n        paginate: true,\n      },\n      ...(userId ? [favoritesFilter] : []),\n      {\n        Header: t('Certified'),\n        key: 'certified',\n        id: 'id',\n        urlDisplay: 'certified',\n        input: 'select',\n        operator: FilterOperator.chartIsCertified,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n    ] as Filters;\n    return filters_list;\n  }, [addDangerToast, favoritesFilter, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'slice_name',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const renderCard = useCallback(\n    (chart: Chart) => (\n      <ChartCard\n        chart={chart}\n        showThumbnails={\n          userSettings\n            ? userSettings.thumbnails\n            : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n        }\n        hasPerm={hasPerm}\n        openChartEditModal={openChartEditModal}\n        bulkSelectEnabled={bulkSelectEnabled}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={refreshData}\n        userId={userId}\n        loading={loading}\n        favoriteStatus={favoriteStatus[chart.id]}\n        saveFavoriteStatus={saveFavoriteStatus}\n        handleBulkChartExport={handleBulkChartExport}\n      />\n    ),\n    [\n      addDangerToast,\n      addSuccessToast,\n      bulkSelectEnabled,\n      favoriteStatus,\n      hasPerm,\n      loading,\n    ],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n  if (canDelete || canExport) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Chart')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        history.push('/chart/add');\n      },\n    });\n\n    if (isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT)) {\n      subMenuButtons.push({\n        name: (\n          <Tooltip\n            id=\"import-tooltip\"\n            title={t('Import charts')}\n            placement=\"bottomRight\"\n          >\n            <Icons.Import data-test=\"import-button\" />\n          </Tooltip>\n        ),\n        buttonStyle: 'link',\n        onClick: openChartImportModal,\n      });\n    }\n  }\n\n  return (\n    <>\n      <SubMenu name={t('Charts')} buttons={subMenuButtons} />\n      {sliceCurrentlyEditing && (\n        <PropertiesModal\n          onHide={closeChartEditModal}\n          onSave={handleChartUpdated}\n          show\n          slice={sliceCurrentlyEditing}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected charts?')}\n        onConfirm={handleBulkChartDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkChartExport,\n            });\n          }\n          return (\n            <ListView<Chart>\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              cardSortSelectOptions={sortTypes}\n              className=\"chart-list-view\"\n              columns={columns}\n              count={chartCount}\n              data={charts}\n              disableBulkSelect={toggleBulkSelect}\n              refreshData={refreshData}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              renderCard={renderCard}\n              enableBulkTag\n              bulkTagResourceName=\"chart\"\n              addSuccessToast={addSuccessToast}\n              addDangerToast={addDangerToast}\n              showThumbnails={\n                userSettings\n                  ? userSettings.thumbnails\n                  : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n              }\n              defaultViewMode={\n                isFeatureEnabled(FeatureFlag.LISTVIEWS_DEFAULT_CARD_VIEW)\n                  ? 'card'\n                  : 'table'\n              }\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"chart\"\n        resourceLabel={t('chart')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleChartImport}\n        show={importingChart}\n        onHide={closeChartImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(ChartList);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\n\nexport default function getOwnerName(owner?: Owner): string {\n  if (!owner) {\n    return '';\n  }\n  return `${owner.first_name} ${owner.last_name}`;\n}\n"],"names":["baseIteratee","baseUniq","module","exports","array","iteratee","length","useChildElementTruncation","elementRef","plusRef","_elementRef$current","_elementRef$current2","elementsTruncated","setElementsTruncated","useState","hasHiddenElements","setHasHiddenElements","previousEffectInfoRef","useRef","scrollWidth","parentElementWidth","plusRefWidth","useLayoutEffect","_currentElement$paren","currentElement","current","plusRefElement","clientWidth","childNodes","previousEffectInfo","parentElement","offsetWidth","truncationWidth","plusSize","maxWidth","elementsCount","width","hiddenElements","i","ModifiedInfo","_ref","user","date","dateSpan","___EmotionJSX","className","userName","getOwnerName","title","t","Tooltip","placement","HelperMessage","styled","div","theme","colors","grayscale","base","_ref2","typography","sizes","s","StyledInputContainer","_ref3","gridUnit","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","light1","_ref10","_ref11","_ref12","light2","_ref13","_ref14","_ref15","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","Modal","name","disablePrimaryButton","onHandledPrimaryAction","onUpload","_fileList$","originFileObj","File","then","result","hide","primaryButtonName","primaryButtonType","Upload","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","Button","loading","ErrorAlert","showDbInstallInstructions","renderPasswordFields","files","Set","React","map","fileName","indexOf","key","slice","autoComplete","type","value","event","target","_event$currentTarget$","_event$currentTarget","targetValue","currentTarget","toUpperCase","StyledTag","AntdTag","index","onDelete","editable","onClick","toolTipTitle","tagDisplay","useMemo","closable","onClose","handleClose","color","role","href","rel","TagsDiv","tags","maxTags","tempMaxTags","setTempMaxTags","handleDelete","tagsIsLong","extraTags","tag","Tag","expand","undefined","join","collapse","StyledLinkedTooltip","light5","CrossLinksTooltip","children","crossLinks","moreItems","link","Link","to","StyledCrossLinks","weights","bold","CrossLinks","maxLinks","linkPrefix","crossLinksRef","useTruncation","hasMoreItems","links","ref","tooltipLinks","l","FlexRowContainer","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","registry","getChartMetadataRegistry","createFetchDatasets","async","filterValue","page","pageSize","_json$result","filters","col","opr","queryParams","rison","columns","keys","order_column","order_direction","page_size","json","SupersetClient","get","endpoint","datasets","table_name","tableName","label","data","_uniqBy","totalCount","count","StyledActions","withToasts","props","addDangerToast","addSuccessToast","userId","history","useHistory","resourceCount","chartCount","resourceCollection","charts","bulkSelectEnabled","setResourceCollection","setCharts","hasPerm","fetchData","toggleBulkSelect","refreshData","useListViewResource","chartIds","c","roles","useSelector","canReadTag","findPermission","saveFavoriteStatus","favoriteStatus","useFavoriteStatus","sliceCurrentlyEditing","handleChartUpdated","openChartEditModal","closeChartEditModal","useChartEditModal","importingChart","showImportModal","preparingExport","setPreparingExport","userSettings","dangerouslyGetItemDoNotUse","toString","canCreate","canEdit","canDelete","canExport","isFeatureEnabled","FeatureFlag","VERSIONED_EXPORT","initialSort","desc","handleBulkChartExport","chartsToExport","ids","handleResourceExport","fetchDashboards","_response$json","_response$json$result","_response$json2","FilterOperator","startsWith","response","catch","dashboards","dashboard_title","dashboardTitle","Cell","row","original","FaveStar","itemId","saveFaveStar","isStarred","Header","disableSortBy","size","hidden","url","slice_name","sliceName","certified_by","certifiedBy","certification_details","certificationDetails","description","CertifiedBadge","details","InfoTooltip","tooltip","accessor","_registry$get","viz_type","vizType","datasource_name_text","dsNameTxt","datasource_url","dsUrl","GenericLink","ensureIsArray","d","TagsList","TAGGING_SYSTEM","owners","FacePile","users","changed_on_delta_humanized","changedOn","changed_by","changedBy","_ref16","ConfirmStatusChange","onConfirm","handleChartDelete","confirmDelete","tabIndex","Icons","Trash","handleExport","Share","openEditModal","EditAlt","QueryObjectColumns","favoritesFilter","urlDisplay","input","operator","chartIsFav","unfilteredLabel","selects","chartAllText","equals","k","_registry$get2","nativeFilterGate","behaviors","_registry$get3","sort","a","b","fetchSelects","paginate","chartTags","loadTags","relationManyMany","createFetchRelated","createErrorHandler","errMsg","chartIsCertified","relationOneMany","sortTypes","renderCard","useCallback","chart","ChartCard","showThumbnails","thumbnails","THUMBNAILS","subMenuButtons","push","buttonStyle","Import","openChartImportModal","SubMenu","buttons","PropertiesModal","onSave","chartsToDelete","delete","message","bulkActions","onSelect","ListView","cardSortSelectOptions","disableBulkSelect","enableBulkTag","bulkTagResourceName","defaultViewMode","LISTVIEWS_DEFAULT_CARD_VIEW","ImportModelsModal","handleChartImport","closeChartImportModal","Loading","owner","first_name","last_name"],"sourceRoot":""}